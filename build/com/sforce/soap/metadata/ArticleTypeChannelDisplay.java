package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ArticleTypeChannelDisplay implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ArticleTypeChannelDisplay() {}

    /**
     * element : articleTypeTemplates of type {http://soap.sforce.com/2006/04/metadata}ArticleTypeTemplate
     * java type: com.sforce.soap.metadata.ArticleTypeTemplate[]
     */
    private static final com.sforce.ws.bind.TypeInfo articleTypeTemplates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","articleTypeTemplates","http://soap.sforce.com/2006/04/metadata","ArticleTypeTemplate",0,-1,true);

    private boolean articleTypeTemplates__is_set = false;

    private com.sforce.soap.metadata.ArticleTypeTemplate[] articleTypeTemplates = new com.sforce.soap.metadata.ArticleTypeTemplate[0];

    public com.sforce.soap.metadata.ArticleTypeTemplate[] getArticleTypeTemplates() {
      return articleTypeTemplates;
    }

    public void setArticleTypeTemplates(com.sforce.soap.metadata.ArticleTypeTemplate[] articleTypeTemplates) {
      this.articleTypeTemplates = articleTypeTemplates;
      articleTypeTemplates__is_set = true;
    }

    protected void setArticleTypeTemplates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, articleTypeTemplates__typeInfo)) {
        setArticleTypeTemplates((com.sforce.soap.metadata.ArticleTypeTemplate[])__typeMapper.readObject(__in, articleTypeTemplates__typeInfo, com.sforce.soap.metadata.ArticleTypeTemplate[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, articleTypeTemplates__typeInfo, articleTypeTemplates, articleTypeTemplates__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setArticleTypeTemplates(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ArticleTypeChannelDisplay ");
      sb.append(" articleTypeTemplates='").append(com.sforce.ws.util.Verbose.toString(articleTypeTemplates)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
