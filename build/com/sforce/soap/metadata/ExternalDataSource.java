package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ExternalDataSource extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public ExternalDataSource() {}

    /**
     * element : authProvider of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo authProvider__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","authProvider","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean authProvider__is_set = false;

    private java.lang.String authProvider;

    public java.lang.String getAuthProvider() {
      return authProvider;
    }

    public void setAuthProvider(java.lang.String authProvider) {
      this.authProvider = authProvider;
      authProvider__is_set = true;
    }

    protected void setAuthProvider(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, authProvider__typeInfo)) {
        setAuthProvider(__typeMapper.readString(__in, authProvider__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : certificate of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo certificate__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","certificate","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean certificate__is_set = false;

    private java.lang.String certificate;

    public java.lang.String getCertificate() {
      return certificate;
    }

    public void setCertificate(java.lang.String certificate) {
      this.certificate = certificate;
      certificate__is_set = true;
    }

    protected void setCertificate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, certificate__typeInfo)) {
        setCertificate(__typeMapper.readString(__in, certificate__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : customConfiguration of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo customConfiguration__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","customConfiguration","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean customConfiguration__is_set = false;

    private java.lang.String customConfiguration;

    public java.lang.String getCustomConfiguration() {
      return customConfiguration;
    }

    public void setCustomConfiguration(java.lang.String customConfiguration) {
      this.customConfiguration = customConfiguration;
      customConfiguration__is_set = true;
    }

    protected void setCustomConfiguration(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, customConfiguration__typeInfo)) {
        setCustomConfiguration(__typeMapper.readString(__in, customConfiguration__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : endpoint of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo endpoint__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","endpoint","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean endpoint__is_set = false;

    private java.lang.String endpoint;

    public java.lang.String getEndpoint() {
      return endpoint;
    }

    public void setEndpoint(java.lang.String endpoint) {
      this.endpoint = endpoint;
      endpoint__is_set = true;
    }

    protected void setEndpoint(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, endpoint__typeInfo)) {
        setEndpoint(__typeMapper.readString(__in, endpoint__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : isWritable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isWritable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isWritable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean isWritable__is_set = false;

    private boolean isWritable;

    public boolean getIsWritable() {
      return isWritable;
    }

    public boolean isIsWritable() {
      return isWritable;
    }

    public void setIsWritable(boolean isWritable) {
      this.isWritable = isWritable;
      isWritable__is_set = true;
    }

    protected void setIsWritable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, isWritable__typeInfo)) {
        setIsWritable(__typeMapper.readBoolean(__in, isWritable__typeInfo, boolean.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : oauthRefreshToken of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo oauthRefreshToken__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","oauthRefreshToken","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean oauthRefreshToken__is_set = false;

    private java.lang.String oauthRefreshToken;

    public java.lang.String getOauthRefreshToken() {
      return oauthRefreshToken;
    }

    public void setOauthRefreshToken(java.lang.String oauthRefreshToken) {
      this.oauthRefreshToken = oauthRefreshToken;
      oauthRefreshToken__is_set = true;
    }

    protected void setOauthRefreshToken(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, oauthRefreshToken__typeInfo)) {
        setOauthRefreshToken(__typeMapper.readString(__in, oauthRefreshToken__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : oauthScope of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo oauthScope__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","oauthScope","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean oauthScope__is_set = false;

    private java.lang.String oauthScope;

    public java.lang.String getOauthScope() {
      return oauthScope;
    }

    public void setOauthScope(java.lang.String oauthScope) {
      this.oauthScope = oauthScope;
      oauthScope__is_set = true;
    }

    protected void setOauthScope(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, oauthScope__typeInfo)) {
        setOauthScope(__typeMapper.readString(__in, oauthScope__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : oauthToken of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo oauthToken__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","oauthToken","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean oauthToken__is_set = false;

    private java.lang.String oauthToken;

    public java.lang.String getOauthToken() {
      return oauthToken;
    }

    public void setOauthToken(java.lang.String oauthToken) {
      this.oauthToken = oauthToken;
      oauthToken__is_set = true;
    }

    protected void setOauthToken(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, oauthToken__typeInfo)) {
        setOauthToken(__typeMapper.readString(__in, oauthToken__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : password of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo password__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","password","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean password__is_set = false;

    private java.lang.String password;

    public java.lang.String getPassword() {
      return password;
    }

    public void setPassword(java.lang.String password) {
      this.password = password;
      password__is_set = true;
    }

    protected void setPassword(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, password__typeInfo)) {
        setPassword(__typeMapper.readString(__in, password__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : principalType of type {http://soap.sforce.com/2006/04/metadata}ExternalPrincipalType
     * java type: com.sforce.soap.metadata.ExternalPrincipalType
     */
    private static final com.sforce.ws.bind.TypeInfo principalType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","principalType","http://soap.sforce.com/2006/04/metadata","ExternalPrincipalType",1,1,true);

    private boolean principalType__is_set = false;

    private com.sforce.soap.metadata.ExternalPrincipalType principalType;

    public com.sforce.soap.metadata.ExternalPrincipalType getPrincipalType() {
      return principalType;
    }

    public void setPrincipalType(com.sforce.soap.metadata.ExternalPrincipalType principalType) {
      this.principalType = principalType;
      principalType__is_set = true;
    }

    protected void setPrincipalType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, principalType__typeInfo)) {
        setPrincipalType((com.sforce.soap.metadata.ExternalPrincipalType)__typeMapper.readObject(__in, principalType__typeInfo, com.sforce.soap.metadata.ExternalPrincipalType.class));
      }
    }

    /**
     * element : protocol of type {http://soap.sforce.com/2006/04/metadata}AuthenticationProtocol
     * java type: com.sforce.soap.metadata.AuthenticationProtocol
     */
    private static final com.sforce.ws.bind.TypeInfo protocol__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","protocol","http://soap.sforce.com/2006/04/metadata","AuthenticationProtocol",1,1,true);

    private boolean protocol__is_set = false;

    private com.sforce.soap.metadata.AuthenticationProtocol protocol;

    public com.sforce.soap.metadata.AuthenticationProtocol getProtocol() {
      return protocol;
    }

    public void setProtocol(com.sforce.soap.metadata.AuthenticationProtocol protocol) {
      this.protocol = protocol;
      protocol__is_set = true;
    }

    protected void setProtocol(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, protocol__typeInfo)) {
        setProtocol((com.sforce.soap.metadata.AuthenticationProtocol)__typeMapper.readObject(__in, protocol__typeInfo, com.sforce.soap.metadata.AuthenticationProtocol.class));
      }
    }

    /**
     * element : repository of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo repository__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","repository","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean repository__is_set = false;

    private java.lang.String repository;

    public java.lang.String getRepository() {
      return repository;
    }

    public void setRepository(java.lang.String repository) {
      this.repository = repository;
      repository__is_set = true;
    }

    protected void setRepository(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, repository__typeInfo)) {
        setRepository(__typeMapper.readString(__in, repository__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : type of type {http://soap.sforce.com/2006/04/metadata}ExternalDataSourceType
     * java type: com.sforce.soap.metadata.ExternalDataSourceType
     */
    private static final com.sforce.ws.bind.TypeInfo type__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","type","http://soap.sforce.com/2006/04/metadata","ExternalDataSourceType",1,1,true);

    private boolean type__is_set = false;

    private com.sforce.soap.metadata.ExternalDataSourceType type;

    public com.sforce.soap.metadata.ExternalDataSourceType getType() {
      return type;
    }

    public void setType(com.sforce.soap.metadata.ExternalDataSourceType type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, type__typeInfo)) {
        setType((com.sforce.soap.metadata.ExternalDataSourceType)__typeMapper.readObject(__in, type__typeInfo, com.sforce.soap.metadata.ExternalDataSourceType.class));
      }
    }

    /**
     * element : username of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo username__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","username","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean username__is_set = false;

    private java.lang.String username;

    public java.lang.String getUsername() {
      return username;
    }

    public void setUsername(java.lang.String username) {
      this.username = username;
      username__is_set = true;
    }

    protected void setUsername(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, username__typeInfo)) {
        setUsername(__typeMapper.readString(__in, username__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : version of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo version__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","version","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean version__is_set = false;

    private java.lang.String version;

    public java.lang.String getVersion() {
      return version;
    }

    public void setVersion(java.lang.String version) {
      this.version = version;
      version__is_set = true;
    }

    protected void setVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, version__typeInfo)) {
        setVersion(__typeMapper.readString(__in, version__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "ExternalDataSource");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, authProvider__typeInfo, authProvider, authProvider__is_set);
       __typeMapper.writeString(__out, certificate__typeInfo, certificate, certificate__is_set);
       __typeMapper.writeString(__out, customConfiguration__typeInfo, customConfiguration, customConfiguration__is_set);
       __typeMapper.writeString(__out, endpoint__typeInfo, endpoint, endpoint__is_set);
       __typeMapper.writeBoolean(__out, isWritable__typeInfo, isWritable, isWritable__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeString(__out, oauthRefreshToken__typeInfo, oauthRefreshToken, oauthRefreshToken__is_set);
       __typeMapper.writeString(__out, oauthScope__typeInfo, oauthScope, oauthScope__is_set);
       __typeMapper.writeString(__out, oauthToken__typeInfo, oauthToken, oauthToken__is_set);
       __typeMapper.writeString(__out, password__typeInfo, password, password__is_set);
       __typeMapper.writeObject(__out, principalType__typeInfo, principalType, principalType__is_set);
       __typeMapper.writeObject(__out, protocol__typeInfo, protocol, protocol__is_set);
       __typeMapper.writeString(__out, repository__typeInfo, repository, repository__is_set);
       __typeMapper.writeObject(__out, type__typeInfo, type, type__is_set);
       __typeMapper.writeString(__out, username__typeInfo, username, username__is_set);
       __typeMapper.writeString(__out, version__typeInfo, version, version__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAuthProvider(__in, __typeMapper);
        setCertificate(__in, __typeMapper);
        setCustomConfiguration(__in, __typeMapper);
        setEndpoint(__in, __typeMapper);
        setIsWritable(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setOauthRefreshToken(__in, __typeMapper);
        setOauthScope(__in, __typeMapper);
        setOauthToken(__in, __typeMapper);
        setPassword(__in, __typeMapper);
        setPrincipalType(__in, __typeMapper);
        setProtocol(__in, __typeMapper);
        setRepository(__in, __typeMapper);
        setType(__in, __typeMapper);
        setUsername(__in, __typeMapper);
        setVersion(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ExternalDataSource ");
      sb.append(super.toString());sb.append(" authProvider='").append(com.sforce.ws.util.Verbose.toString(authProvider)).append("'\n");
      sb.append(" certificate='").append(com.sforce.ws.util.Verbose.toString(certificate)).append("'\n");
      sb.append(" customConfiguration='").append(com.sforce.ws.util.Verbose.toString(customConfiguration)).append("'\n");
      sb.append(" endpoint='").append(com.sforce.ws.util.Verbose.toString(endpoint)).append("'\n");
      sb.append(" isWritable='").append(com.sforce.ws.util.Verbose.toString(isWritable)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" oauthRefreshToken='").append(com.sforce.ws.util.Verbose.toString(oauthRefreshToken)).append("'\n");
      sb.append(" oauthScope='").append(com.sforce.ws.util.Verbose.toString(oauthScope)).append("'\n");
      sb.append(" oauthToken='").append(com.sforce.ws.util.Verbose.toString(oauthToken)).append("'\n");
      sb.append(" password='").append(com.sforce.ws.util.Verbose.toString(password)).append("'\n");
      sb.append(" principalType='").append(com.sforce.ws.util.Verbose.toString(principalType)).append("'\n");
      sb.append(" protocol='").append(com.sforce.ws.util.Verbose.toString(protocol)).append("'\n");
      sb.append(" repository='").append(com.sforce.ws.util.Verbose.toString(repository)).append("'\n");
      sb.append(" type='").append(com.sforce.ws.util.Verbose.toString(type)).append("'\n");
      sb.append(" username='").append(com.sforce.ws.util.Verbose.toString(username)).append("'\n");
      sb.append(" version='").append(com.sforce.ws.util.Verbose.toString(version)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
