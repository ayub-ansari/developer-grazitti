package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ActionOverride implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ActionOverride() {}

    /**
     * element : actionName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo actionName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","actionName","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean actionName__is_set = false;

    private java.lang.String actionName;

    public java.lang.String getActionName() {
      return actionName;
    }

    public void setActionName(java.lang.String actionName) {
      this.actionName = actionName;
      actionName__is_set = true;
    }

    protected void setActionName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, actionName__typeInfo)) {
        setActionName(__typeMapper.readString(__in, actionName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : comment of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo comment__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","comment","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean comment__is_set = false;

    private java.lang.String comment;

    public java.lang.String getComment() {
      return comment;
    }

    public void setComment(java.lang.String comment) {
      this.comment = comment;
      comment__is_set = true;
    }

    protected void setComment(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, comment__typeInfo)) {
        setComment(__typeMapper.readString(__in, comment__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : content of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo content__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","content","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean content__is_set = false;

    private java.lang.String content;

    public java.lang.String getContent() {
      return content;
    }

    public void setContent(java.lang.String content) {
      this.content = content;
      content__is_set = true;
    }

    protected void setContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, content__typeInfo)) {
        setContent(__typeMapper.readString(__in, content__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : formFactor of type {http://soap.sforce.com/2006/04/metadata}FormFactor
     * java type: com.sforce.soap.metadata.FormFactor
     */
    private static final com.sforce.ws.bind.TypeInfo formFactor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","formFactor","http://soap.sforce.com/2006/04/metadata","FormFactor",0,1,true);

    private boolean formFactor__is_set = false;

    private com.sforce.soap.metadata.FormFactor formFactor;

    public com.sforce.soap.metadata.FormFactor getFormFactor() {
      return formFactor;
    }

    public void setFormFactor(com.sforce.soap.metadata.FormFactor formFactor) {
      this.formFactor = formFactor;
      formFactor__is_set = true;
    }

    protected void setFormFactor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, formFactor__typeInfo)) {
        setFormFactor((com.sforce.soap.metadata.FormFactor)__typeMapper.readObject(__in, formFactor__typeInfo, com.sforce.soap.metadata.FormFactor.class));
      }
    }

    /**
     * element : skipRecordTypeSelect of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo skipRecordTypeSelect__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","skipRecordTypeSelect","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean skipRecordTypeSelect__is_set = false;

    private boolean skipRecordTypeSelect;

    public boolean getSkipRecordTypeSelect() {
      return skipRecordTypeSelect;
    }

    public boolean isSkipRecordTypeSelect() {
      return skipRecordTypeSelect;
    }

    public void setSkipRecordTypeSelect(boolean skipRecordTypeSelect) {
      this.skipRecordTypeSelect = skipRecordTypeSelect;
      skipRecordTypeSelect__is_set = true;
    }

    protected void setSkipRecordTypeSelect(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, skipRecordTypeSelect__typeInfo)) {
        setSkipRecordTypeSelect(__typeMapper.readBoolean(__in, skipRecordTypeSelect__typeInfo, boolean.class));
      }
    }

    /**
     * element : type of type {http://soap.sforce.com/2006/04/metadata}ActionOverrideType
     * java type: com.sforce.soap.metadata.ActionOverrideType
     */
    private static final com.sforce.ws.bind.TypeInfo type__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","type","http://soap.sforce.com/2006/04/metadata","ActionOverrideType",0,1,true);

    private boolean type__is_set = false;

    private com.sforce.soap.metadata.ActionOverrideType type;

    public com.sforce.soap.metadata.ActionOverrideType getType() {
      return type;
    }

    public void setType(com.sforce.soap.metadata.ActionOverrideType type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, type__typeInfo)) {
        setType((com.sforce.soap.metadata.ActionOverrideType)__typeMapper.readObject(__in, type__typeInfo, com.sforce.soap.metadata.ActionOverrideType.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, actionName__typeInfo, actionName, actionName__is_set);
       __typeMapper.writeString(__out, comment__typeInfo, comment, comment__is_set);
       __typeMapper.writeString(__out, content__typeInfo, content, content__is_set);
       __typeMapper.writeObject(__out, formFactor__typeInfo, formFactor, formFactor__is_set);
       __typeMapper.writeBoolean(__out, skipRecordTypeSelect__typeInfo, skipRecordTypeSelect, skipRecordTypeSelect__is_set);
       __typeMapper.writeObject(__out, type__typeInfo, type, type__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActionName(__in, __typeMapper);
        setComment(__in, __typeMapper);
        setContent(__in, __typeMapper);
        setFormFactor(__in, __typeMapper);
        setSkipRecordTypeSelect(__in, __typeMapper);
        setType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ActionOverride ");
      sb.append(" actionName='").append(com.sforce.ws.util.Verbose.toString(actionName)).append("'\n");
      sb.append(" comment='").append(com.sforce.ws.util.Verbose.toString(comment)).append("'\n");
      sb.append(" content='").append(com.sforce.ws.util.Verbose.toString(content)).append("'\n");
      sb.append(" formFactor='").append(com.sforce.ws.util.Verbose.toString(formFactor)).append("'\n");
      sb.append(" skipRecordTypeSelect='").append(com.sforce.ws.util.Verbose.toString(skipRecordTypeSelect)).append("'\n");
      sb.append(" type='").append(com.sforce.ws.util.Verbose.toString(type)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
