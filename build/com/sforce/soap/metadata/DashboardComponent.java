package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DashboardComponent implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DashboardComponent() {}

    /**
     * element : autoselectColumnsFromReport of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo autoselectColumnsFromReport__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","autoselectColumnsFromReport","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean autoselectColumnsFromReport__is_set = false;

    private boolean autoselectColumnsFromReport;

    public boolean getAutoselectColumnsFromReport() {
      return autoselectColumnsFromReport;
    }

    public boolean isAutoselectColumnsFromReport() {
      return autoselectColumnsFromReport;
    }

    public void setAutoselectColumnsFromReport(boolean autoselectColumnsFromReport) {
      this.autoselectColumnsFromReport = autoselectColumnsFromReport;
      autoselectColumnsFromReport__is_set = true;
    }

    protected void setAutoselectColumnsFromReport(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, autoselectColumnsFromReport__typeInfo)) {
        setAutoselectColumnsFromReport(__typeMapper.readBoolean(__in, autoselectColumnsFromReport__typeInfo, boolean.class));
      }
    }

    /**
     * element : chartAxisRange of type {http://soap.sforce.com/2006/04/metadata}ChartRangeType
     * java type: com.sforce.soap.metadata.ChartRangeType
     */
    private static final com.sforce.ws.bind.TypeInfo chartAxisRange__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","chartAxisRange","http://soap.sforce.com/2006/04/metadata","ChartRangeType",0,1,true);

    private boolean chartAxisRange__is_set = false;

    private com.sforce.soap.metadata.ChartRangeType chartAxisRange;

    public com.sforce.soap.metadata.ChartRangeType getChartAxisRange() {
      return chartAxisRange;
    }

    public void setChartAxisRange(com.sforce.soap.metadata.ChartRangeType chartAxisRange) {
      this.chartAxisRange = chartAxisRange;
      chartAxisRange__is_set = true;
    }

    protected void setChartAxisRange(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, chartAxisRange__typeInfo)) {
        setChartAxisRange((com.sforce.soap.metadata.ChartRangeType)__typeMapper.readObject(__in, chartAxisRange__typeInfo, com.sforce.soap.metadata.ChartRangeType.class));
      }
    }

    /**
     * element : chartAxisRangeMax of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo chartAxisRangeMax__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","chartAxisRangeMax","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean chartAxisRangeMax__is_set = false;

    private double chartAxisRangeMax;

    public double getChartAxisRangeMax() {
      return chartAxisRangeMax;
    }

    public void setChartAxisRangeMax(double chartAxisRangeMax) {
      this.chartAxisRangeMax = chartAxisRangeMax;
      chartAxisRangeMax__is_set = true;
    }

    protected void setChartAxisRangeMax(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, chartAxisRangeMax__typeInfo)) {
        setChartAxisRangeMax((double)__typeMapper.readDouble(__in, chartAxisRangeMax__typeInfo, double.class));
      }
    }

    /**
     * element : chartAxisRangeMin of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo chartAxisRangeMin__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","chartAxisRangeMin","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean chartAxisRangeMin__is_set = false;

    private double chartAxisRangeMin;

    public double getChartAxisRangeMin() {
      return chartAxisRangeMin;
    }

    public void setChartAxisRangeMin(double chartAxisRangeMin) {
      this.chartAxisRangeMin = chartAxisRangeMin;
      chartAxisRangeMin__is_set = true;
    }

    protected void setChartAxisRangeMin(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, chartAxisRangeMin__typeInfo)) {
        setChartAxisRangeMin((double)__typeMapper.readDouble(__in, chartAxisRangeMin__typeInfo, double.class));
      }
    }

    /**
     * element : chartSummary of type {http://soap.sforce.com/2006/04/metadata}ChartSummary
     * java type: com.sforce.soap.metadata.ChartSummary[]
     */
    private static final com.sforce.ws.bind.TypeInfo chartSummary__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","chartSummary","http://soap.sforce.com/2006/04/metadata","ChartSummary",0,-1,true);

    private boolean chartSummary__is_set = false;

    private com.sforce.soap.metadata.ChartSummary[] chartSummary = new com.sforce.soap.metadata.ChartSummary[0];

    public com.sforce.soap.metadata.ChartSummary[] getChartSummary() {
      return chartSummary;
    }

    public void setChartSummary(com.sforce.soap.metadata.ChartSummary[] chartSummary) {
      this.chartSummary = chartSummary;
      chartSummary__is_set = true;
    }

    protected void setChartSummary(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, chartSummary__typeInfo)) {
        setChartSummary((com.sforce.soap.metadata.ChartSummary[])__typeMapper.readObject(__in, chartSummary__typeInfo, com.sforce.soap.metadata.ChartSummary[].class));
      }
    }

    /**
     * element : componentType of type {http://soap.sforce.com/2006/04/metadata}DashboardComponentType
     * java type: com.sforce.soap.metadata.DashboardComponentType
     */
    private static final com.sforce.ws.bind.TypeInfo componentType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","componentType","http://soap.sforce.com/2006/04/metadata","DashboardComponentType",1,1,true);

    private boolean componentType__is_set = false;

    private com.sforce.soap.metadata.DashboardComponentType componentType;

    public com.sforce.soap.metadata.DashboardComponentType getComponentType() {
      return componentType;
    }

    public void setComponentType(com.sforce.soap.metadata.DashboardComponentType componentType) {
      this.componentType = componentType;
      componentType__is_set = true;
    }

    protected void setComponentType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, componentType__typeInfo)) {
        setComponentType((com.sforce.soap.metadata.DashboardComponentType)__typeMapper.readObject(__in, componentType__typeInfo, com.sforce.soap.metadata.DashboardComponentType.class));
      }
    }

    /**
     * element : dashboardFilterColumns of type {http://soap.sforce.com/2006/04/metadata}DashboardFilterColumn
     * java type: com.sforce.soap.metadata.DashboardFilterColumn[]
     */
    private static final com.sforce.ws.bind.TypeInfo dashboardFilterColumns__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","dashboardFilterColumns","http://soap.sforce.com/2006/04/metadata","DashboardFilterColumn",0,-1,true);

    private boolean dashboardFilterColumns__is_set = false;

    private com.sforce.soap.metadata.DashboardFilterColumn[] dashboardFilterColumns = new com.sforce.soap.metadata.DashboardFilterColumn[0];

    public com.sforce.soap.metadata.DashboardFilterColumn[] getDashboardFilterColumns() {
      return dashboardFilterColumns;
    }

    public void setDashboardFilterColumns(com.sforce.soap.metadata.DashboardFilterColumn[] dashboardFilterColumns) {
      this.dashboardFilterColumns = dashboardFilterColumns;
      dashboardFilterColumns__is_set = true;
    }

    protected void setDashboardFilterColumns(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, dashboardFilterColumns__typeInfo)) {
        setDashboardFilterColumns((com.sforce.soap.metadata.DashboardFilterColumn[])__typeMapper.readObject(__in, dashboardFilterColumns__typeInfo, com.sforce.soap.metadata.DashboardFilterColumn[].class));
      }
    }

    /**
     * element : dashboardTableColumn of type {http://soap.sforce.com/2006/04/metadata}DashboardTableColumn
     * java type: com.sforce.soap.metadata.DashboardTableColumn[]
     */
    private static final com.sforce.ws.bind.TypeInfo dashboardTableColumn__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","dashboardTableColumn","http://soap.sforce.com/2006/04/metadata","DashboardTableColumn",0,-1,true);

    private boolean dashboardTableColumn__is_set = false;

    private com.sforce.soap.metadata.DashboardTableColumn[] dashboardTableColumn = new com.sforce.soap.metadata.DashboardTableColumn[0];

    public com.sforce.soap.metadata.DashboardTableColumn[] getDashboardTableColumn() {
      return dashboardTableColumn;
    }

    public void setDashboardTableColumn(com.sforce.soap.metadata.DashboardTableColumn[] dashboardTableColumn) {
      this.dashboardTableColumn = dashboardTableColumn;
      dashboardTableColumn__is_set = true;
    }

    protected void setDashboardTableColumn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, dashboardTableColumn__typeInfo)) {
        setDashboardTableColumn((com.sforce.soap.metadata.DashboardTableColumn[])__typeMapper.readObject(__in, dashboardTableColumn__typeInfo, com.sforce.soap.metadata.DashboardTableColumn[].class));
      }
    }

    /**
     * element : displayUnits of type {http://soap.sforce.com/2006/04/metadata}ChartUnits
     * java type: com.sforce.soap.metadata.ChartUnits
     */
    private static final com.sforce.ws.bind.TypeInfo displayUnits__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","displayUnits","http://soap.sforce.com/2006/04/metadata","ChartUnits",0,1,true);

    private boolean displayUnits__is_set = false;

    private com.sforce.soap.metadata.ChartUnits displayUnits;

    public com.sforce.soap.metadata.ChartUnits getDisplayUnits() {
      return displayUnits;
    }

    public void setDisplayUnits(com.sforce.soap.metadata.ChartUnits displayUnits) {
      this.displayUnits = displayUnits;
      displayUnits__is_set = true;
    }

    protected void setDisplayUnits(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, displayUnits__typeInfo)) {
        setDisplayUnits((com.sforce.soap.metadata.ChartUnits)__typeMapper.readObject(__in, displayUnits__typeInfo, com.sforce.soap.metadata.ChartUnits.class));
      }
    }

    /**
     * element : drillDownUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo drillDownUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","drillDownUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean drillDownUrl__is_set = false;

    private java.lang.String drillDownUrl;

    public java.lang.String getDrillDownUrl() {
      return drillDownUrl;
    }

    public void setDrillDownUrl(java.lang.String drillDownUrl) {
      this.drillDownUrl = drillDownUrl;
      drillDownUrl__is_set = true;
    }

    protected void setDrillDownUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, drillDownUrl__typeInfo)) {
        setDrillDownUrl(__typeMapper.readString(__in, drillDownUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : drillEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo drillEnabled__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","drillEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean drillEnabled__is_set = false;

    private boolean drillEnabled;

    public boolean getDrillEnabled() {
      return drillEnabled;
    }

    public boolean isDrillEnabled() {
      return drillEnabled;
    }

    public void setDrillEnabled(boolean drillEnabled) {
      this.drillEnabled = drillEnabled;
      drillEnabled__is_set = true;
    }

    protected void setDrillEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, drillEnabled__typeInfo)) {
        setDrillEnabled(__typeMapper.readBoolean(__in, drillEnabled__typeInfo, boolean.class));
      }
    }

    /**
     * element : drillToDetailEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo drillToDetailEnabled__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","drillToDetailEnabled","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean drillToDetailEnabled__is_set = false;

    private boolean drillToDetailEnabled;

    public boolean getDrillToDetailEnabled() {
      return drillToDetailEnabled;
    }

    public boolean isDrillToDetailEnabled() {
      return drillToDetailEnabled;
    }

    public void setDrillToDetailEnabled(boolean drillToDetailEnabled) {
      this.drillToDetailEnabled = drillToDetailEnabled;
      drillToDetailEnabled__is_set = true;
    }

    protected void setDrillToDetailEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, drillToDetailEnabled__typeInfo)) {
        setDrillToDetailEnabled(__typeMapper.readBoolean(__in, drillToDetailEnabled__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableHover of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableHover__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableHover","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableHover__is_set = false;

    private boolean enableHover;

    public boolean getEnableHover() {
      return enableHover;
    }

    public boolean isEnableHover() {
      return enableHover;
    }

    public void setEnableHover(boolean enableHover) {
      this.enableHover = enableHover;
      enableHover__is_set = true;
    }

    protected void setEnableHover(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableHover__typeInfo)) {
        setEnableHover(__typeMapper.readBoolean(__in, enableHover__typeInfo, boolean.class));
      }
    }

    /**
     * element : expandOthers of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo expandOthers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","expandOthers","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean expandOthers__is_set = false;

    private boolean expandOthers;

    public boolean getExpandOthers() {
      return expandOthers;
    }

    public boolean isExpandOthers() {
      return expandOthers;
    }

    public void setExpandOthers(boolean expandOthers) {
      this.expandOthers = expandOthers;
      expandOthers__is_set = true;
    }

    protected void setExpandOthers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, expandOthers__typeInfo)) {
        setExpandOthers(__typeMapper.readBoolean(__in, expandOthers__typeInfo, boolean.class));
      }
    }

    /**
     * element : footer of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo footer__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","footer","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean footer__is_set = false;

    private java.lang.String footer;

    public java.lang.String getFooter() {
      return footer;
    }

    public void setFooter(java.lang.String footer) {
      this.footer = footer;
      footer__is_set = true;
    }

    protected void setFooter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, footer__typeInfo)) {
        setFooter(__typeMapper.readString(__in, footer__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : gaugeMax of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo gaugeMax__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","gaugeMax","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean gaugeMax__is_set = false;

    private double gaugeMax;

    public double getGaugeMax() {
      return gaugeMax;
    }

    public void setGaugeMax(double gaugeMax) {
      this.gaugeMax = gaugeMax;
      gaugeMax__is_set = true;
    }

    protected void setGaugeMax(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, gaugeMax__typeInfo)) {
        setGaugeMax((double)__typeMapper.readDouble(__in, gaugeMax__typeInfo, double.class));
      }
    }

    /**
     * element : gaugeMin of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo gaugeMin__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","gaugeMin","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean gaugeMin__is_set = false;

    private double gaugeMin;

    public double getGaugeMin() {
      return gaugeMin;
    }

    public void setGaugeMin(double gaugeMin) {
      this.gaugeMin = gaugeMin;
      gaugeMin__is_set = true;
    }

    protected void setGaugeMin(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, gaugeMin__typeInfo)) {
        setGaugeMin((double)__typeMapper.readDouble(__in, gaugeMin__typeInfo, double.class));
      }
    }

    /**
     * element : groupingColumn of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo groupingColumn__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","groupingColumn","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean groupingColumn__is_set = false;

    private java.lang.String[] groupingColumn = new java.lang.String[0];

    public java.lang.String[] getGroupingColumn() {
      return groupingColumn;
    }

    public void setGroupingColumn(java.lang.String[] groupingColumn) {
      this.groupingColumn = groupingColumn;
      groupingColumn__is_set = true;
    }

    protected void setGroupingColumn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, groupingColumn__typeInfo)) {
        setGroupingColumn((java.lang.String[])__typeMapper.readObject(__in, groupingColumn__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : header of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo header__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","header","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean header__is_set = false;

    private java.lang.String header;

    public java.lang.String getHeader() {
      return header;
    }

    public void setHeader(java.lang.String header) {
      this.header = header;
      header__is_set = true;
    }

    protected void setHeader(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, header__typeInfo)) {
        setHeader(__typeMapper.readString(__in, header__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : indicatorBreakpoint1 of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo indicatorBreakpoint1__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","indicatorBreakpoint1","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean indicatorBreakpoint1__is_set = false;

    private double indicatorBreakpoint1;

    public double getIndicatorBreakpoint1() {
      return indicatorBreakpoint1;
    }

    public void setIndicatorBreakpoint1(double indicatorBreakpoint1) {
      this.indicatorBreakpoint1 = indicatorBreakpoint1;
      indicatorBreakpoint1__is_set = true;
    }

    protected void setIndicatorBreakpoint1(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, indicatorBreakpoint1__typeInfo)) {
        setIndicatorBreakpoint1((double)__typeMapper.readDouble(__in, indicatorBreakpoint1__typeInfo, double.class));
      }
    }

    /**
     * element : indicatorBreakpoint2 of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo indicatorBreakpoint2__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","indicatorBreakpoint2","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean indicatorBreakpoint2__is_set = false;

    private double indicatorBreakpoint2;

    public double getIndicatorBreakpoint2() {
      return indicatorBreakpoint2;
    }

    public void setIndicatorBreakpoint2(double indicatorBreakpoint2) {
      this.indicatorBreakpoint2 = indicatorBreakpoint2;
      indicatorBreakpoint2__is_set = true;
    }

    protected void setIndicatorBreakpoint2(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, indicatorBreakpoint2__typeInfo)) {
        setIndicatorBreakpoint2((double)__typeMapper.readDouble(__in, indicatorBreakpoint2__typeInfo, double.class));
      }
    }

    /**
     * element : indicatorHighColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo indicatorHighColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","indicatorHighColor","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean indicatorHighColor__is_set = false;

    private java.lang.String indicatorHighColor;

    public java.lang.String getIndicatorHighColor() {
      return indicatorHighColor;
    }

    public void setIndicatorHighColor(java.lang.String indicatorHighColor) {
      this.indicatorHighColor = indicatorHighColor;
      indicatorHighColor__is_set = true;
    }

    protected void setIndicatorHighColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, indicatorHighColor__typeInfo)) {
        setIndicatorHighColor(__typeMapper.readString(__in, indicatorHighColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : indicatorLowColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo indicatorLowColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","indicatorLowColor","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean indicatorLowColor__is_set = false;

    private java.lang.String indicatorLowColor;

    public java.lang.String getIndicatorLowColor() {
      return indicatorLowColor;
    }

    public void setIndicatorLowColor(java.lang.String indicatorLowColor) {
      this.indicatorLowColor = indicatorLowColor;
      indicatorLowColor__is_set = true;
    }

    protected void setIndicatorLowColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, indicatorLowColor__typeInfo)) {
        setIndicatorLowColor(__typeMapper.readString(__in, indicatorLowColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : indicatorMiddleColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo indicatorMiddleColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","indicatorMiddleColor","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean indicatorMiddleColor__is_set = false;

    private java.lang.String indicatorMiddleColor;

    public java.lang.String getIndicatorMiddleColor() {
      return indicatorMiddleColor;
    }

    public void setIndicatorMiddleColor(java.lang.String indicatorMiddleColor) {
      this.indicatorMiddleColor = indicatorMiddleColor;
      indicatorMiddleColor__is_set = true;
    }

    protected void setIndicatorMiddleColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, indicatorMiddleColor__typeInfo)) {
        setIndicatorMiddleColor(__typeMapper.readString(__in, indicatorMiddleColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : legendPosition of type {http://soap.sforce.com/2006/04/metadata}ChartLegendPosition
     * java type: com.sforce.soap.metadata.ChartLegendPosition
     */
    private static final com.sforce.ws.bind.TypeInfo legendPosition__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","legendPosition","http://soap.sforce.com/2006/04/metadata","ChartLegendPosition",0,1,true);

    private boolean legendPosition__is_set = false;

    private com.sforce.soap.metadata.ChartLegendPosition legendPosition;

    public com.sforce.soap.metadata.ChartLegendPosition getLegendPosition() {
      return legendPosition;
    }

    public void setLegendPosition(com.sforce.soap.metadata.ChartLegendPosition legendPosition) {
      this.legendPosition = legendPosition;
      legendPosition__is_set = true;
    }

    protected void setLegendPosition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, legendPosition__typeInfo)) {
        setLegendPosition((com.sforce.soap.metadata.ChartLegendPosition)__typeMapper.readObject(__in, legendPosition__typeInfo, com.sforce.soap.metadata.ChartLegendPosition.class));
      }
    }

    /**
     * element : maxValuesDisplayed of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo maxValuesDisplayed__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","maxValuesDisplayed","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean maxValuesDisplayed__is_set = false;

    private int maxValuesDisplayed;

    public int getMaxValuesDisplayed() {
      return maxValuesDisplayed;
    }

    public void setMaxValuesDisplayed(int maxValuesDisplayed) {
      this.maxValuesDisplayed = maxValuesDisplayed;
      maxValuesDisplayed__is_set = true;
    }

    protected void setMaxValuesDisplayed(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, maxValuesDisplayed__typeInfo)) {
        setMaxValuesDisplayed((int)__typeMapper.readInt(__in, maxValuesDisplayed__typeInfo, int.class));
      }
    }

    /**
     * element : metricLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo metricLabel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","metricLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean metricLabel__is_set = false;

    private java.lang.String metricLabel;

    public java.lang.String getMetricLabel() {
      return metricLabel;
    }

    public void setMetricLabel(java.lang.String metricLabel) {
      this.metricLabel = metricLabel;
      metricLabel__is_set = true;
    }

    protected void setMetricLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, metricLabel__typeInfo)) {
        setMetricLabel(__typeMapper.readString(__in, metricLabel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : page of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo page__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","page","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean page__is_set = false;

    private java.lang.String page;

    public java.lang.String getPage() {
      return page;
    }

    public void setPage(java.lang.String page) {
      this.page = page;
      page__is_set = true;
    }

    protected void setPage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, page__typeInfo)) {
        setPage(__typeMapper.readString(__in, page__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : pageHeightInPixels of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo pageHeightInPixels__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","pageHeightInPixels","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean pageHeightInPixels__is_set = false;

    private int pageHeightInPixels;

    public int getPageHeightInPixels() {
      return pageHeightInPixels;
    }

    public void setPageHeightInPixels(int pageHeightInPixels) {
      this.pageHeightInPixels = pageHeightInPixels;
      pageHeightInPixels__is_set = true;
    }

    protected void setPageHeightInPixels(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, pageHeightInPixels__typeInfo)) {
        setPageHeightInPixels((int)__typeMapper.readInt(__in, pageHeightInPixels__typeInfo, int.class));
      }
    }

    /**
     * element : report of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo report__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","report","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean report__is_set = false;

    private java.lang.String report;

    public java.lang.String getReport() {
      return report;
    }

    public void setReport(java.lang.String report) {
      this.report = report;
      report__is_set = true;
    }

    protected void setReport(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, report__typeInfo)) {
        setReport(__typeMapper.readString(__in, report__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : scontrol of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo scontrol__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","scontrol","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean scontrol__is_set = false;

    private java.lang.String scontrol;

    public java.lang.String getScontrol() {
      return scontrol;
    }

    public void setScontrol(java.lang.String scontrol) {
      this.scontrol = scontrol;
      scontrol__is_set = true;
    }

    protected void setScontrol(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, scontrol__typeInfo)) {
        setScontrol(__typeMapper.readString(__in, scontrol__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : scontrolHeightInPixels of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo scontrolHeightInPixels__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","scontrolHeightInPixels","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean scontrolHeightInPixels__is_set = false;

    private int scontrolHeightInPixels;

    public int getScontrolHeightInPixels() {
      return scontrolHeightInPixels;
    }

    public void setScontrolHeightInPixels(int scontrolHeightInPixels) {
      this.scontrolHeightInPixels = scontrolHeightInPixels;
      scontrolHeightInPixels__is_set = true;
    }

    protected void setScontrolHeightInPixels(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, scontrolHeightInPixels__typeInfo)) {
        setScontrolHeightInPixels((int)__typeMapper.readInt(__in, scontrolHeightInPixels__typeInfo, int.class));
      }
    }

    /**
     * element : showPercentage of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showPercentage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showPercentage","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showPercentage__is_set = false;

    private boolean showPercentage;

    public boolean getShowPercentage() {
      return showPercentage;
    }

    public boolean isShowPercentage() {
      return showPercentage;
    }

    public void setShowPercentage(boolean showPercentage) {
      this.showPercentage = showPercentage;
      showPercentage__is_set = true;
    }

    protected void setShowPercentage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showPercentage__typeInfo)) {
        setShowPercentage(__typeMapper.readBoolean(__in, showPercentage__typeInfo, boolean.class));
      }
    }

    /**
     * element : showPicturesOnCharts of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showPicturesOnCharts__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showPicturesOnCharts","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showPicturesOnCharts__is_set = false;

    private boolean showPicturesOnCharts;

    public boolean getShowPicturesOnCharts() {
      return showPicturesOnCharts;
    }

    public boolean isShowPicturesOnCharts() {
      return showPicturesOnCharts;
    }

    public void setShowPicturesOnCharts(boolean showPicturesOnCharts) {
      this.showPicturesOnCharts = showPicturesOnCharts;
      showPicturesOnCharts__is_set = true;
    }

    protected void setShowPicturesOnCharts(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showPicturesOnCharts__typeInfo)) {
        setShowPicturesOnCharts(__typeMapper.readBoolean(__in, showPicturesOnCharts__typeInfo, boolean.class));
      }
    }

    /**
     * element : showPicturesOnTables of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showPicturesOnTables__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showPicturesOnTables","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showPicturesOnTables__is_set = false;

    private boolean showPicturesOnTables;

    public boolean getShowPicturesOnTables() {
      return showPicturesOnTables;
    }

    public boolean isShowPicturesOnTables() {
      return showPicturesOnTables;
    }

    public void setShowPicturesOnTables(boolean showPicturesOnTables) {
      this.showPicturesOnTables = showPicturesOnTables;
      showPicturesOnTables__is_set = true;
    }

    protected void setShowPicturesOnTables(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showPicturesOnTables__typeInfo)) {
        setShowPicturesOnTables(__typeMapper.readBoolean(__in, showPicturesOnTables__typeInfo, boolean.class));
      }
    }

    /**
     * element : showTotal of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showTotal__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showTotal","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showTotal__is_set = false;

    private boolean showTotal;

    public boolean getShowTotal() {
      return showTotal;
    }

    public boolean isShowTotal() {
      return showTotal;
    }

    public void setShowTotal(boolean showTotal) {
      this.showTotal = showTotal;
      showTotal__is_set = true;
    }

    protected void setShowTotal(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showTotal__typeInfo)) {
        setShowTotal(__typeMapper.readBoolean(__in, showTotal__typeInfo, boolean.class));
      }
    }

    /**
     * element : showValues of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showValues__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showValues","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showValues__is_set = false;

    private boolean showValues;

    public boolean getShowValues() {
      return showValues;
    }

    public boolean isShowValues() {
      return showValues;
    }

    public void setShowValues(boolean showValues) {
      this.showValues = showValues;
      showValues__is_set = true;
    }

    protected void setShowValues(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showValues__typeInfo)) {
        setShowValues(__typeMapper.readBoolean(__in, showValues__typeInfo, boolean.class));
      }
    }

    /**
     * element : sortBy of type {http://soap.sforce.com/2006/04/metadata}DashboardComponentFilter
     * java type: com.sforce.soap.metadata.DashboardComponentFilter
     */
    private static final com.sforce.ws.bind.TypeInfo sortBy__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sortBy","http://soap.sforce.com/2006/04/metadata","DashboardComponentFilter",0,1,true);

    private boolean sortBy__is_set = false;

    private com.sforce.soap.metadata.DashboardComponentFilter sortBy;

    public com.sforce.soap.metadata.DashboardComponentFilter getSortBy() {
      return sortBy;
    }

    public void setSortBy(com.sforce.soap.metadata.DashboardComponentFilter sortBy) {
      this.sortBy = sortBy;
      sortBy__is_set = true;
    }

    protected void setSortBy(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sortBy__typeInfo)) {
        setSortBy((com.sforce.soap.metadata.DashboardComponentFilter)__typeMapper.readObject(__in, sortBy__typeInfo, com.sforce.soap.metadata.DashboardComponentFilter.class));
      }
    }

    /**
     * element : title of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo title__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","title","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean title__is_set = false;

    private java.lang.String title;

    public java.lang.String getTitle() {
      return title;
    }

    public void setTitle(java.lang.String title) {
      this.title = title;
      title__is_set = true;
    }

    protected void setTitle(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, title__typeInfo)) {
        setTitle(__typeMapper.readString(__in, title__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : useReportChart of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo useReportChart__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","useReportChart","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean useReportChart__is_set = false;

    private boolean useReportChart;

    public boolean getUseReportChart() {
      return useReportChart;
    }

    public boolean isUseReportChart() {
      return useReportChart;
    }

    public void setUseReportChart(boolean useReportChart) {
      this.useReportChart = useReportChart;
      useReportChart__is_set = true;
    }

    protected void setUseReportChart(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, useReportChart__typeInfo)) {
        setUseReportChart(__typeMapper.readBoolean(__in, useReportChart__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, autoselectColumnsFromReport__typeInfo, autoselectColumnsFromReport, autoselectColumnsFromReport__is_set);
       __typeMapper.writeObject(__out, chartAxisRange__typeInfo, chartAxisRange, chartAxisRange__is_set);
       __typeMapper.writeDouble(__out, chartAxisRangeMax__typeInfo, chartAxisRangeMax, chartAxisRangeMax__is_set);
       __typeMapper.writeDouble(__out, chartAxisRangeMin__typeInfo, chartAxisRangeMin, chartAxisRangeMin__is_set);
       __typeMapper.writeObject(__out, chartSummary__typeInfo, chartSummary, chartSummary__is_set);
       __typeMapper.writeObject(__out, componentType__typeInfo, componentType, componentType__is_set);
       __typeMapper.writeObject(__out, dashboardFilterColumns__typeInfo, dashboardFilterColumns, dashboardFilterColumns__is_set);
       __typeMapper.writeObject(__out, dashboardTableColumn__typeInfo, dashboardTableColumn, dashboardTableColumn__is_set);
       __typeMapper.writeObject(__out, displayUnits__typeInfo, displayUnits, displayUnits__is_set);
       __typeMapper.writeString(__out, drillDownUrl__typeInfo, drillDownUrl, drillDownUrl__is_set);
       __typeMapper.writeBoolean(__out, drillEnabled__typeInfo, drillEnabled, drillEnabled__is_set);
       __typeMapper.writeBoolean(__out, drillToDetailEnabled__typeInfo, drillToDetailEnabled, drillToDetailEnabled__is_set);
       __typeMapper.writeBoolean(__out, enableHover__typeInfo, enableHover, enableHover__is_set);
       __typeMapper.writeBoolean(__out, expandOthers__typeInfo, expandOthers, expandOthers__is_set);
       __typeMapper.writeString(__out, footer__typeInfo, footer, footer__is_set);
       __typeMapper.writeDouble(__out, gaugeMax__typeInfo, gaugeMax, gaugeMax__is_set);
       __typeMapper.writeDouble(__out, gaugeMin__typeInfo, gaugeMin, gaugeMin__is_set);
       __typeMapper.writeObject(__out, groupingColumn__typeInfo, groupingColumn, groupingColumn__is_set);
       __typeMapper.writeString(__out, header__typeInfo, header, header__is_set);
       __typeMapper.writeDouble(__out, indicatorBreakpoint1__typeInfo, indicatorBreakpoint1, indicatorBreakpoint1__is_set);
       __typeMapper.writeDouble(__out, indicatorBreakpoint2__typeInfo, indicatorBreakpoint2, indicatorBreakpoint2__is_set);
       __typeMapper.writeString(__out, indicatorHighColor__typeInfo, indicatorHighColor, indicatorHighColor__is_set);
       __typeMapper.writeString(__out, indicatorLowColor__typeInfo, indicatorLowColor, indicatorLowColor__is_set);
       __typeMapper.writeString(__out, indicatorMiddleColor__typeInfo, indicatorMiddleColor, indicatorMiddleColor__is_set);
       __typeMapper.writeObject(__out, legendPosition__typeInfo, legendPosition, legendPosition__is_set);
       __typeMapper.writeInt(__out, maxValuesDisplayed__typeInfo, maxValuesDisplayed, maxValuesDisplayed__is_set);
       __typeMapper.writeString(__out, metricLabel__typeInfo, metricLabel, metricLabel__is_set);
       __typeMapper.writeString(__out, page__typeInfo, page, page__is_set);
       __typeMapper.writeInt(__out, pageHeightInPixels__typeInfo, pageHeightInPixels, pageHeightInPixels__is_set);
       __typeMapper.writeString(__out, report__typeInfo, report, report__is_set);
       __typeMapper.writeString(__out, scontrol__typeInfo, scontrol, scontrol__is_set);
       __typeMapper.writeInt(__out, scontrolHeightInPixels__typeInfo, scontrolHeightInPixels, scontrolHeightInPixels__is_set);
       __typeMapper.writeBoolean(__out, showPercentage__typeInfo, showPercentage, showPercentage__is_set);
       __typeMapper.writeBoolean(__out, showPicturesOnCharts__typeInfo, showPicturesOnCharts, showPicturesOnCharts__is_set);
       __typeMapper.writeBoolean(__out, showPicturesOnTables__typeInfo, showPicturesOnTables, showPicturesOnTables__is_set);
       __typeMapper.writeBoolean(__out, showTotal__typeInfo, showTotal, showTotal__is_set);
       __typeMapper.writeBoolean(__out, showValues__typeInfo, showValues, showValues__is_set);
       __typeMapper.writeObject(__out, sortBy__typeInfo, sortBy, sortBy__is_set);
       __typeMapper.writeString(__out, title__typeInfo, title, title__is_set);
       __typeMapper.writeBoolean(__out, useReportChart__typeInfo, useReportChart, useReportChart__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAutoselectColumnsFromReport(__in, __typeMapper);
        setChartAxisRange(__in, __typeMapper);
        setChartAxisRangeMax(__in, __typeMapper);
        setChartAxisRangeMin(__in, __typeMapper);
        setChartSummary(__in, __typeMapper);
        setComponentType(__in, __typeMapper);
        setDashboardFilterColumns(__in, __typeMapper);
        setDashboardTableColumn(__in, __typeMapper);
        setDisplayUnits(__in, __typeMapper);
        setDrillDownUrl(__in, __typeMapper);
        setDrillEnabled(__in, __typeMapper);
        setDrillToDetailEnabled(__in, __typeMapper);
        setEnableHover(__in, __typeMapper);
        setExpandOthers(__in, __typeMapper);
        setFooter(__in, __typeMapper);
        setGaugeMax(__in, __typeMapper);
        setGaugeMin(__in, __typeMapper);
        setGroupingColumn(__in, __typeMapper);
        setHeader(__in, __typeMapper);
        setIndicatorBreakpoint1(__in, __typeMapper);
        setIndicatorBreakpoint2(__in, __typeMapper);
        setIndicatorHighColor(__in, __typeMapper);
        setIndicatorLowColor(__in, __typeMapper);
        setIndicatorMiddleColor(__in, __typeMapper);
        setLegendPosition(__in, __typeMapper);
        setMaxValuesDisplayed(__in, __typeMapper);
        setMetricLabel(__in, __typeMapper);
        setPage(__in, __typeMapper);
        setPageHeightInPixels(__in, __typeMapper);
        setReport(__in, __typeMapper);
        setScontrol(__in, __typeMapper);
        setScontrolHeightInPixels(__in, __typeMapper);
        setShowPercentage(__in, __typeMapper);
        setShowPicturesOnCharts(__in, __typeMapper);
        setShowPicturesOnTables(__in, __typeMapper);
        setShowTotal(__in, __typeMapper);
        setShowValues(__in, __typeMapper);
        setSortBy(__in, __typeMapper);
        setTitle(__in, __typeMapper);
        setUseReportChart(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DashboardComponent ");
      sb.append(" autoselectColumnsFromReport='").append(com.sforce.ws.util.Verbose.toString(autoselectColumnsFromReport)).append("'\n");
      sb.append(" chartAxisRange='").append(com.sforce.ws.util.Verbose.toString(chartAxisRange)).append("'\n");
      sb.append(" chartAxisRangeMax='").append(com.sforce.ws.util.Verbose.toString(chartAxisRangeMax)).append("'\n");
      sb.append(" chartAxisRangeMin='").append(com.sforce.ws.util.Verbose.toString(chartAxisRangeMin)).append("'\n");
      sb.append(" chartSummary='").append(com.sforce.ws.util.Verbose.toString(chartSummary)).append("'\n");
      sb.append(" componentType='").append(com.sforce.ws.util.Verbose.toString(componentType)).append("'\n");
      sb.append(" dashboardFilterColumns='").append(com.sforce.ws.util.Verbose.toString(dashboardFilterColumns)).append("'\n");
      sb.append(" dashboardTableColumn='").append(com.sforce.ws.util.Verbose.toString(dashboardTableColumn)).append("'\n");
      sb.append(" displayUnits='").append(com.sforce.ws.util.Verbose.toString(displayUnits)).append("'\n");
      sb.append(" drillDownUrl='").append(com.sforce.ws.util.Verbose.toString(drillDownUrl)).append("'\n");
      sb.append(" drillEnabled='").append(com.sforce.ws.util.Verbose.toString(drillEnabled)).append("'\n");
      sb.append(" drillToDetailEnabled='").append(com.sforce.ws.util.Verbose.toString(drillToDetailEnabled)).append("'\n");
      sb.append(" enableHover='").append(com.sforce.ws.util.Verbose.toString(enableHover)).append("'\n");
      sb.append(" expandOthers='").append(com.sforce.ws.util.Verbose.toString(expandOthers)).append("'\n");
      sb.append(" footer='").append(com.sforce.ws.util.Verbose.toString(footer)).append("'\n");
      sb.append(" gaugeMax='").append(com.sforce.ws.util.Verbose.toString(gaugeMax)).append("'\n");
      sb.append(" gaugeMin='").append(com.sforce.ws.util.Verbose.toString(gaugeMin)).append("'\n");
      sb.append(" groupingColumn='").append(com.sforce.ws.util.Verbose.toString(groupingColumn)).append("'\n");
      sb.append(" header='").append(com.sforce.ws.util.Verbose.toString(header)).append("'\n");
      sb.append(" indicatorBreakpoint1='").append(com.sforce.ws.util.Verbose.toString(indicatorBreakpoint1)).append("'\n");
      sb.append(" indicatorBreakpoint2='").append(com.sforce.ws.util.Verbose.toString(indicatorBreakpoint2)).append("'\n");
      sb.append(" indicatorHighColor='").append(com.sforce.ws.util.Verbose.toString(indicatorHighColor)).append("'\n");
      sb.append(" indicatorLowColor='").append(com.sforce.ws.util.Verbose.toString(indicatorLowColor)).append("'\n");
      sb.append(" indicatorMiddleColor='").append(com.sforce.ws.util.Verbose.toString(indicatorMiddleColor)).append("'\n");
      sb.append(" legendPosition='").append(com.sforce.ws.util.Verbose.toString(legendPosition)).append("'\n");
      sb.append(" maxValuesDisplayed='").append(com.sforce.ws.util.Verbose.toString(maxValuesDisplayed)).append("'\n");
      sb.append(" metricLabel='").append(com.sforce.ws.util.Verbose.toString(metricLabel)).append("'\n");
      sb.append(" page='").append(com.sforce.ws.util.Verbose.toString(page)).append("'\n");
      sb.append(" pageHeightInPixels='").append(com.sforce.ws.util.Verbose.toString(pageHeightInPixels)).append("'\n");
      sb.append(" report='").append(com.sforce.ws.util.Verbose.toString(report)).append("'\n");
      sb.append(" scontrol='").append(com.sforce.ws.util.Verbose.toString(scontrol)).append("'\n");
      sb.append(" scontrolHeightInPixels='").append(com.sforce.ws.util.Verbose.toString(scontrolHeightInPixels)).append("'\n");
      sb.append(" showPercentage='").append(com.sforce.ws.util.Verbose.toString(showPercentage)).append("'\n");
      sb.append(" showPicturesOnCharts='").append(com.sforce.ws.util.Verbose.toString(showPicturesOnCharts)).append("'\n");
      sb.append(" showPicturesOnTables='").append(com.sforce.ws.util.Verbose.toString(showPicturesOnTables)).append("'\n");
      sb.append(" showTotal='").append(com.sforce.ws.util.Verbose.toString(showTotal)).append("'\n");
      sb.append(" showValues='").append(com.sforce.ws.util.Verbose.toString(showValues)).append("'\n");
      sb.append(" sortBy='").append(com.sforce.ws.util.Verbose.toString(sortBy)).append("'\n");
      sb.append(" title='").append(com.sforce.ws.util.Verbose.toString(title)).append("'\n");
      sb.append(" useReportChart='").append(com.sforce.ws.util.Verbose.toString(useReportChart)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
