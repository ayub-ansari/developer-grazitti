package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlowScreen extends com.sforce.soap.metadata.FlowNode {

    /**
     * Constructor
     */
    public FlowScreen() {}

    /**
     * element : allowBack of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowBack__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowBack","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean allowBack__is_set = false;

    private boolean allowBack;

    public boolean getAllowBack() {
      return allowBack;
    }

    public boolean isAllowBack() {
      return allowBack;
    }

    public void setAllowBack(boolean allowBack) {
      this.allowBack = allowBack;
      allowBack__is_set = true;
    }

    protected void setAllowBack(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allowBack__typeInfo)) {
        setAllowBack(__typeMapper.readBoolean(__in, allowBack__typeInfo, boolean.class));
      }
    }

    /**
     * element : allowFinish of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowFinish__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowFinish","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean allowFinish__is_set = false;

    private boolean allowFinish;

    public boolean getAllowFinish() {
      return allowFinish;
    }

    public boolean isAllowFinish() {
      return allowFinish;
    }

    public void setAllowFinish(boolean allowFinish) {
      this.allowFinish = allowFinish;
      allowFinish__is_set = true;
    }

    protected void setAllowFinish(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allowFinish__typeInfo)) {
        setAllowFinish(__typeMapper.readBoolean(__in, allowFinish__typeInfo, boolean.class));
      }
    }

    /**
     * element : allowPause of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowPause__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowPause","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean allowPause__is_set = false;

    private boolean allowPause;

    public boolean getAllowPause() {
      return allowPause;
    }

    public boolean isAllowPause() {
      return allowPause;
    }

    public void setAllowPause(boolean allowPause) {
      this.allowPause = allowPause;
      allowPause__is_set = true;
    }

    protected void setAllowPause(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allowPause__typeInfo)) {
        setAllowPause(__typeMapper.readBoolean(__in, allowPause__typeInfo, boolean.class));
      }
    }

    /**
     * element : connector of type {http://soap.sforce.com/2006/04/metadata}FlowConnector
     * java type: com.sforce.soap.metadata.FlowConnector
     */
    private static final com.sforce.ws.bind.TypeInfo connector__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","connector","http://soap.sforce.com/2006/04/metadata","FlowConnector",0,1,true);

    private boolean connector__is_set = false;

    private com.sforce.soap.metadata.FlowConnector connector;

    public com.sforce.soap.metadata.FlowConnector getConnector() {
      return connector;
    }

    public void setConnector(com.sforce.soap.metadata.FlowConnector connector) {
      this.connector = connector;
      connector__is_set = true;
    }

    protected void setConnector(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, connector__typeInfo)) {
        setConnector((com.sforce.soap.metadata.FlowConnector)__typeMapper.readObject(__in, connector__typeInfo, com.sforce.soap.metadata.FlowConnector.class));
      }
    }

    /**
     * element : fields of type {http://soap.sforce.com/2006/04/metadata}FlowScreenField
     * java type: com.sforce.soap.metadata.FlowScreenField[]
     */
    private static final com.sforce.ws.bind.TypeInfo fields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fields","http://soap.sforce.com/2006/04/metadata","FlowScreenField",0,-1,true);

    private boolean fields__is_set = false;

    private com.sforce.soap.metadata.FlowScreenField[] fields = new com.sforce.soap.metadata.FlowScreenField[0];

    public com.sforce.soap.metadata.FlowScreenField[] getFields() {
      return fields;
    }

    public void setFields(com.sforce.soap.metadata.FlowScreenField[] fields) {
      this.fields = fields;
      fields__is_set = true;
    }

    protected void setFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fields__typeInfo)) {
        setFields((com.sforce.soap.metadata.FlowScreenField[])__typeMapper.readObject(__in, fields__typeInfo, com.sforce.soap.metadata.FlowScreenField[].class));
      }
    }

    /**
     * element : helpText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo helpText__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","helpText","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean helpText__is_set = false;

    private java.lang.String helpText;

    public java.lang.String getHelpText() {
      return helpText;
    }

    public void setHelpText(java.lang.String helpText) {
      this.helpText = helpText;
      helpText__is_set = true;
    }

    protected void setHelpText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, helpText__typeInfo)) {
        setHelpText(__typeMapper.readString(__in, helpText__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : pausedText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pausedText__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","pausedText","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean pausedText__is_set = false;

    private java.lang.String pausedText;

    public java.lang.String getPausedText() {
      return pausedText;
    }

    public void setPausedText(java.lang.String pausedText) {
      this.pausedText = pausedText;
      pausedText__is_set = true;
    }

    protected void setPausedText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, pausedText__typeInfo)) {
        setPausedText(__typeMapper.readString(__in, pausedText__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "FlowScreen");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, allowBack__typeInfo, allowBack, allowBack__is_set);
       __typeMapper.writeBoolean(__out, allowFinish__typeInfo, allowFinish, allowFinish__is_set);
       __typeMapper.writeBoolean(__out, allowPause__typeInfo, allowPause, allowPause__is_set);
       __typeMapper.writeObject(__out, connector__typeInfo, connector, connector__is_set);
       __typeMapper.writeObject(__out, fields__typeInfo, fields, fields__is_set);
       __typeMapper.writeString(__out, helpText__typeInfo, helpText, helpText__is_set);
       __typeMapper.writeString(__out, pausedText__typeInfo, pausedText, pausedText__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAllowBack(__in, __typeMapper);
        setAllowFinish(__in, __typeMapper);
        setAllowPause(__in, __typeMapper);
        setConnector(__in, __typeMapper);
        setFields(__in, __typeMapper);
        setHelpText(__in, __typeMapper);
        setPausedText(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowScreen ");
      sb.append(super.toString());sb.append(" allowBack='").append(com.sforce.ws.util.Verbose.toString(allowBack)).append("'\n");
      sb.append(" allowFinish='").append(com.sforce.ws.util.Verbose.toString(allowFinish)).append("'\n");
      sb.append(" allowPause='").append(com.sforce.ws.util.Verbose.toString(allowPause)).append("'\n");
      sb.append(" connector='").append(com.sforce.ws.util.Verbose.toString(connector)).append("'\n");
      sb.append(" fields='").append(com.sforce.ws.util.Verbose.toString(fields)).append("'\n");
      sb.append(" helpText='").append(com.sforce.ws.util.Verbose.toString(helpText)).append("'\n");
      sb.append(" pausedText='").append(com.sforce.ws.util.Verbose.toString(pausedText)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
