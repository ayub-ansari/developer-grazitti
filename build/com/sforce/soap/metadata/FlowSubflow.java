package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlowSubflow extends com.sforce.soap.metadata.FlowNode {

    /**
     * Constructor
     */
    public FlowSubflow() {}

    /**
     * element : connector of type {http://soap.sforce.com/2006/04/metadata}FlowConnector
     * java type: com.sforce.soap.metadata.FlowConnector
     */
    private static final com.sforce.ws.bind.TypeInfo connector__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","connector","http://soap.sforce.com/2006/04/metadata","FlowConnector",0,1,true);

    private boolean connector__is_set = false;

    private com.sforce.soap.metadata.FlowConnector connector;

    public com.sforce.soap.metadata.FlowConnector getConnector() {
      return connector;
    }

    public void setConnector(com.sforce.soap.metadata.FlowConnector connector) {
      this.connector = connector;
      connector__is_set = true;
    }

    protected void setConnector(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, connector__typeInfo)) {
        setConnector((com.sforce.soap.metadata.FlowConnector)__typeMapper.readObject(__in, connector__typeInfo, com.sforce.soap.metadata.FlowConnector.class));
      }
    }

    /**
     * element : flowName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo flowName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","flowName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean flowName__is_set = false;

    private java.lang.String flowName;

    public java.lang.String getFlowName() {
      return flowName;
    }

    public void setFlowName(java.lang.String flowName) {
      this.flowName = flowName;
      flowName__is_set = true;
    }

    protected void setFlowName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, flowName__typeInfo)) {
        setFlowName(__typeMapper.readString(__in, flowName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : inputAssignments of type {http://soap.sforce.com/2006/04/metadata}FlowSubflowInputAssignment
     * java type: com.sforce.soap.metadata.FlowSubflowInputAssignment[]
     */
    private static final com.sforce.ws.bind.TypeInfo inputAssignments__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","inputAssignments","http://soap.sforce.com/2006/04/metadata","FlowSubflowInputAssignment",0,-1,true);

    private boolean inputAssignments__is_set = false;

    private com.sforce.soap.metadata.FlowSubflowInputAssignment[] inputAssignments = new com.sforce.soap.metadata.FlowSubflowInputAssignment[0];

    public com.sforce.soap.metadata.FlowSubflowInputAssignment[] getInputAssignments() {
      return inputAssignments;
    }

    public void setInputAssignments(com.sforce.soap.metadata.FlowSubflowInputAssignment[] inputAssignments) {
      this.inputAssignments = inputAssignments;
      inputAssignments__is_set = true;
    }

    protected void setInputAssignments(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, inputAssignments__typeInfo)) {
        setInputAssignments((com.sforce.soap.metadata.FlowSubflowInputAssignment[])__typeMapper.readObject(__in, inputAssignments__typeInfo, com.sforce.soap.metadata.FlowSubflowInputAssignment[].class));
      }
    }

    /**
     * element : outputAssignments of type {http://soap.sforce.com/2006/04/metadata}FlowSubflowOutputAssignment
     * java type: com.sforce.soap.metadata.FlowSubflowOutputAssignment[]
     */
    private static final com.sforce.ws.bind.TypeInfo outputAssignments__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","outputAssignments","http://soap.sforce.com/2006/04/metadata","FlowSubflowOutputAssignment",0,-1,true);

    private boolean outputAssignments__is_set = false;

    private com.sforce.soap.metadata.FlowSubflowOutputAssignment[] outputAssignments = new com.sforce.soap.metadata.FlowSubflowOutputAssignment[0];

    public com.sforce.soap.metadata.FlowSubflowOutputAssignment[] getOutputAssignments() {
      return outputAssignments;
    }

    public void setOutputAssignments(com.sforce.soap.metadata.FlowSubflowOutputAssignment[] outputAssignments) {
      this.outputAssignments = outputAssignments;
      outputAssignments__is_set = true;
    }

    protected void setOutputAssignments(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, outputAssignments__typeInfo)) {
        setOutputAssignments((com.sforce.soap.metadata.FlowSubflowOutputAssignment[])__typeMapper.readObject(__in, outputAssignments__typeInfo, com.sforce.soap.metadata.FlowSubflowOutputAssignment[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "FlowSubflow");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, connector__typeInfo, connector, connector__is_set);
       __typeMapper.writeString(__out, flowName__typeInfo, flowName, flowName__is_set);
       __typeMapper.writeObject(__out, inputAssignments__typeInfo, inputAssignments, inputAssignments__is_set);
       __typeMapper.writeObject(__out, outputAssignments__typeInfo, outputAssignments, outputAssignments__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setConnector(__in, __typeMapper);
        setFlowName(__in, __typeMapper);
        setInputAssignments(__in, __typeMapper);
        setOutputAssignments(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowSubflow ");
      sb.append(super.toString());sb.append(" connector='").append(com.sforce.ws.util.Verbose.toString(connector)).append("'\n");
      sb.append(" flowName='").append(com.sforce.ws.util.Verbose.toString(flowName)).append("'\n");
      sb.append(" inputAssignments='").append(com.sforce.ws.util.Verbose.toString(inputAssignments)).append("'\n");
      sb.append(" outputAssignments='").append(com.sforce.ws.util.Verbose.toString(outputAssignments)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
