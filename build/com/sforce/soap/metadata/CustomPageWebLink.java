package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class CustomPageWebLink extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public CustomPageWebLink() {}

    /**
     * element : availability of type {http://soap.sforce.com/2006/04/metadata}WebLinkAvailability
     * java type: com.sforce.soap.metadata.WebLinkAvailability
     */
    private static final com.sforce.ws.bind.TypeInfo availability__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","availability","http://soap.sforce.com/2006/04/metadata","WebLinkAvailability",1,1,true);

    private boolean availability__is_set = false;

    private com.sforce.soap.metadata.WebLinkAvailability availability;

    public com.sforce.soap.metadata.WebLinkAvailability getAvailability() {
      return availability;
    }

    public void setAvailability(com.sforce.soap.metadata.WebLinkAvailability availability) {
      this.availability = availability;
      availability__is_set = true;
    }

    protected void setAvailability(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, availability__typeInfo)) {
        setAvailability((com.sforce.soap.metadata.WebLinkAvailability)__typeMapper.readObject(__in, availability__typeInfo, com.sforce.soap.metadata.WebLinkAvailability.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : displayType of type {http://soap.sforce.com/2006/04/metadata}WebLinkDisplayType
     * java type: com.sforce.soap.metadata.WebLinkDisplayType
     */
    private static final com.sforce.ws.bind.TypeInfo displayType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","displayType","http://soap.sforce.com/2006/04/metadata","WebLinkDisplayType",1,1,true);

    private boolean displayType__is_set = false;

    private com.sforce.soap.metadata.WebLinkDisplayType displayType;

    public com.sforce.soap.metadata.WebLinkDisplayType getDisplayType() {
      return displayType;
    }

    public void setDisplayType(com.sforce.soap.metadata.WebLinkDisplayType displayType) {
      this.displayType = displayType;
      displayType__is_set = true;
    }

    protected void setDisplayType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, displayType__typeInfo)) {
        setDisplayType((com.sforce.soap.metadata.WebLinkDisplayType)__typeMapper.readObject(__in, displayType__typeInfo, com.sforce.soap.metadata.WebLinkDisplayType.class));
      }
    }

    /**
     * element : encodingKey of type {http://soap.sforce.com/2006/04/metadata}Encoding
     * java type: com.sforce.soap.metadata.Encoding
     */
    private static final com.sforce.ws.bind.TypeInfo encodingKey__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","encodingKey","http://soap.sforce.com/2006/04/metadata","Encoding",0,1,true);

    private boolean encodingKey__is_set = false;

    private com.sforce.soap.metadata.Encoding encodingKey;

    public com.sforce.soap.metadata.Encoding getEncodingKey() {
      return encodingKey;
    }

    public void setEncodingKey(com.sforce.soap.metadata.Encoding encodingKey) {
      this.encodingKey = encodingKey;
      encodingKey__is_set = true;
    }

    protected void setEncodingKey(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, encodingKey__typeInfo)) {
        setEncodingKey((com.sforce.soap.metadata.Encoding)__typeMapper.readObject(__in, encodingKey__typeInfo, com.sforce.soap.metadata.Encoding.class));
      }
    }

    /**
     * element : hasMenubar of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo hasMenubar__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","hasMenubar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean hasMenubar__is_set = false;

    private boolean hasMenubar;

    public boolean getHasMenubar() {
      return hasMenubar;
    }

    public boolean isHasMenubar() {
      return hasMenubar;
    }

    public void setHasMenubar(boolean hasMenubar) {
      this.hasMenubar = hasMenubar;
      hasMenubar__is_set = true;
    }

    protected void setHasMenubar(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, hasMenubar__typeInfo)) {
        setHasMenubar(__typeMapper.readBoolean(__in, hasMenubar__typeInfo, boolean.class));
      }
    }

    /**
     * element : hasScrollbars of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo hasScrollbars__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","hasScrollbars","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean hasScrollbars__is_set = false;

    private boolean hasScrollbars;

    public boolean getHasScrollbars() {
      return hasScrollbars;
    }

    public boolean isHasScrollbars() {
      return hasScrollbars;
    }

    public void setHasScrollbars(boolean hasScrollbars) {
      this.hasScrollbars = hasScrollbars;
      hasScrollbars__is_set = true;
    }

    protected void setHasScrollbars(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, hasScrollbars__typeInfo)) {
        setHasScrollbars(__typeMapper.readBoolean(__in, hasScrollbars__typeInfo, boolean.class));
      }
    }

    /**
     * element : hasToolbar of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo hasToolbar__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","hasToolbar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean hasToolbar__is_set = false;

    private boolean hasToolbar;

    public boolean getHasToolbar() {
      return hasToolbar;
    }

    public boolean isHasToolbar() {
      return hasToolbar;
    }

    public void setHasToolbar(boolean hasToolbar) {
      this.hasToolbar = hasToolbar;
      hasToolbar__is_set = true;
    }

    protected void setHasToolbar(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, hasToolbar__typeInfo)) {
        setHasToolbar(__typeMapper.readBoolean(__in, hasToolbar__typeInfo, boolean.class));
      }
    }

    /**
     * element : height of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo height__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","height","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean height__is_set = false;

    private int height;

    public int getHeight() {
      return height;
    }

    public void setHeight(int height) {
      this.height = height;
      height__is_set = true;
    }

    protected void setHeight(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, height__typeInfo)) {
        setHeight((int)__typeMapper.readInt(__in, height__typeInfo, int.class));
      }
    }

    /**
     * element : isResizable of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isResizable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isResizable","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean isResizable__is_set = false;

    private boolean isResizable;

    public boolean getIsResizable() {
      return isResizable;
    }

    public boolean isIsResizable() {
      return isResizable;
    }

    public void setIsResizable(boolean isResizable) {
      this.isResizable = isResizable;
      isResizable__is_set = true;
    }

    protected void setIsResizable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, isResizable__typeInfo)) {
        setIsResizable(__typeMapper.readBoolean(__in, isResizable__typeInfo, boolean.class));
      }
    }

    /**
     * element : linkType of type {http://soap.sforce.com/2006/04/metadata}WebLinkType
     * java type: com.sforce.soap.metadata.WebLinkType
     */
    private static final com.sforce.ws.bind.TypeInfo linkType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","linkType","http://soap.sforce.com/2006/04/metadata","WebLinkType",1,1,true);

    private boolean linkType__is_set = false;

    private com.sforce.soap.metadata.WebLinkType linkType;

    public com.sforce.soap.metadata.WebLinkType getLinkType() {
      return linkType;
    }

    public void setLinkType(com.sforce.soap.metadata.WebLinkType linkType) {
      this.linkType = linkType;
      linkType__is_set = true;
    }

    protected void setLinkType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, linkType__typeInfo)) {
        setLinkType((com.sforce.soap.metadata.WebLinkType)__typeMapper.readObject(__in, linkType__typeInfo, com.sforce.soap.metadata.WebLinkType.class));
      }
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo masterLabel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","masterLabel","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, masterLabel__typeInfo)) {
        setMasterLabel(__typeMapper.readString(__in, masterLabel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : openType of type {http://soap.sforce.com/2006/04/metadata}WebLinkWindowType
     * java type: com.sforce.soap.metadata.WebLinkWindowType
     */
    private static final com.sforce.ws.bind.TypeInfo openType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","openType","http://soap.sforce.com/2006/04/metadata","WebLinkWindowType",1,1,true);

    private boolean openType__is_set = false;

    private com.sforce.soap.metadata.WebLinkWindowType openType;

    public com.sforce.soap.metadata.WebLinkWindowType getOpenType() {
      return openType;
    }

    public void setOpenType(com.sforce.soap.metadata.WebLinkWindowType openType) {
      this.openType = openType;
      openType__is_set = true;
    }

    protected void setOpenType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, openType__typeInfo)) {
        setOpenType((com.sforce.soap.metadata.WebLinkWindowType)__typeMapper.readObject(__in, openType__typeInfo, com.sforce.soap.metadata.WebLinkWindowType.class));
      }
    }

    /**
     * element : page of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo page__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","page","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean page__is_set = false;

    private java.lang.String page;

    public java.lang.String getPage() {
      return page;
    }

    public void setPage(java.lang.String page) {
      this.page = page;
      page__is_set = true;
    }

    protected void setPage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, page__typeInfo)) {
        setPage(__typeMapper.readString(__in, page__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : position of type {http://soap.sforce.com/2006/04/metadata}WebLinkPosition
     * java type: com.sforce.soap.metadata.WebLinkPosition
     */
    private static final com.sforce.ws.bind.TypeInfo position__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","position","http://soap.sforce.com/2006/04/metadata","WebLinkPosition",0,1,true);

    private boolean position__is_set = false;

    private com.sforce.soap.metadata.WebLinkPosition position;

    public com.sforce.soap.metadata.WebLinkPosition getPosition() {
      return position;
    }

    public void setPosition(com.sforce.soap.metadata.WebLinkPosition position) {
      this.position = position;
      position__is_set = true;
    }

    protected void setPosition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, position__typeInfo)) {
        setPosition((com.sforce.soap.metadata.WebLinkPosition)__typeMapper.readObject(__in, position__typeInfo, com.sforce.soap.metadata.WebLinkPosition.class));
      }
    }

    /**
     * element : _protected of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo _protected__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","_protected","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean _protected__is_set = false;

    private boolean _protected;

    public boolean get_protected() {
      return _protected;
    }

    public boolean is_protected() {
      return _protected;
    }

    public void set_protected(boolean _protected) {
      this._protected = _protected;
      _protected__is_set = true;
    }

    protected void set_protected(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, _protected__typeInfo)) {
        set_protected(__typeMapper.readBoolean(__in, _protected__typeInfo, boolean.class));
      }
    }

    /**
     * element : requireRowSelection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo requireRowSelection__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","requireRowSelection","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean requireRowSelection__is_set = false;

    private boolean requireRowSelection;

    public boolean getRequireRowSelection() {
      return requireRowSelection;
    }

    public boolean isRequireRowSelection() {
      return requireRowSelection;
    }

    public void setRequireRowSelection(boolean requireRowSelection) {
      this.requireRowSelection = requireRowSelection;
      requireRowSelection__is_set = true;
    }

    protected void setRequireRowSelection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, requireRowSelection__typeInfo)) {
        setRequireRowSelection(__typeMapper.readBoolean(__in, requireRowSelection__typeInfo, boolean.class));
      }
    }

    /**
     * element : scontrol of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo scontrol__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","scontrol","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean scontrol__is_set = false;

    private java.lang.String scontrol;

    public java.lang.String getScontrol() {
      return scontrol;
    }

    public void setScontrol(java.lang.String scontrol) {
      this.scontrol = scontrol;
      scontrol__is_set = true;
    }

    protected void setScontrol(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, scontrol__typeInfo)) {
        setScontrol(__typeMapper.readString(__in, scontrol__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : showsLocation of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showsLocation__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showsLocation","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showsLocation__is_set = false;

    private boolean showsLocation;

    public boolean getShowsLocation() {
      return showsLocation;
    }

    public boolean isShowsLocation() {
      return showsLocation;
    }

    public void setShowsLocation(boolean showsLocation) {
      this.showsLocation = showsLocation;
      showsLocation__is_set = true;
    }

    protected void setShowsLocation(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showsLocation__typeInfo)) {
        setShowsLocation(__typeMapper.readBoolean(__in, showsLocation__typeInfo, boolean.class));
      }
    }

    /**
     * element : showsStatus of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showsStatus__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showsStatus","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showsStatus__is_set = false;

    private boolean showsStatus;

    public boolean getShowsStatus() {
      return showsStatus;
    }

    public boolean isShowsStatus() {
      return showsStatus;
    }

    public void setShowsStatus(boolean showsStatus) {
      this.showsStatus = showsStatus;
      showsStatus__is_set = true;
    }

    protected void setShowsStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showsStatus__typeInfo)) {
        setShowsStatus(__typeMapper.readBoolean(__in, showsStatus__typeInfo, boolean.class));
      }
    }

    /**
     * element : url of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo url__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","url","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean url__is_set = false;

    private java.lang.String url;

    public java.lang.String getUrl() {
      return url;
    }

    public void setUrl(java.lang.String url) {
      this.url = url;
      url__is_set = true;
    }

    protected void setUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, url__typeInfo)) {
        setUrl(__typeMapper.readString(__in, url__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : width of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo width__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","width","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean width__is_set = false;

    private int width;

    public int getWidth() {
      return width;
    }

    public void setWidth(int width) {
      this.width = width;
      width__is_set = true;
    }

    protected void setWidth(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, width__typeInfo)) {
        setWidth((int)__typeMapper.readInt(__in, width__typeInfo, int.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "CustomPageWebLink");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, availability__typeInfo, availability, availability__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeObject(__out, displayType__typeInfo, displayType, displayType__is_set);
       __typeMapper.writeObject(__out, encodingKey__typeInfo, encodingKey, encodingKey__is_set);
       __typeMapper.writeBoolean(__out, hasMenubar__typeInfo, hasMenubar, hasMenubar__is_set);
       __typeMapper.writeBoolean(__out, hasScrollbars__typeInfo, hasScrollbars, hasScrollbars__is_set);
       __typeMapper.writeBoolean(__out, hasToolbar__typeInfo, hasToolbar, hasToolbar__is_set);
       __typeMapper.writeInt(__out, height__typeInfo, height, height__is_set);
       __typeMapper.writeBoolean(__out, isResizable__typeInfo, isResizable, isResizable__is_set);
       __typeMapper.writeObject(__out, linkType__typeInfo, linkType, linkType__is_set);
       __typeMapper.writeString(__out, masterLabel__typeInfo, masterLabel, masterLabel__is_set);
       __typeMapper.writeObject(__out, openType__typeInfo, openType, openType__is_set);
       __typeMapper.writeString(__out, page__typeInfo, page, page__is_set);
       __typeMapper.writeObject(__out, position__typeInfo, position, position__is_set);
       __typeMapper.writeBoolean(__out, _protected__typeInfo, _protected, _protected__is_set);
       __typeMapper.writeBoolean(__out, requireRowSelection__typeInfo, requireRowSelection, requireRowSelection__is_set);
       __typeMapper.writeString(__out, scontrol__typeInfo, scontrol, scontrol__is_set);
       __typeMapper.writeBoolean(__out, showsLocation__typeInfo, showsLocation, showsLocation__is_set);
       __typeMapper.writeBoolean(__out, showsStatus__typeInfo, showsStatus, showsStatus__is_set);
       __typeMapper.writeString(__out, url__typeInfo, url, url__is_set);
       __typeMapper.writeInt(__out, width__typeInfo, width, width__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAvailability(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setDisplayType(__in, __typeMapper);
        setEncodingKey(__in, __typeMapper);
        setHasMenubar(__in, __typeMapper);
        setHasScrollbars(__in, __typeMapper);
        setHasToolbar(__in, __typeMapper);
        setHeight(__in, __typeMapper);
        setIsResizable(__in, __typeMapper);
        setLinkType(__in, __typeMapper);
        setMasterLabel(__in, __typeMapper);
        setOpenType(__in, __typeMapper);
        setPage(__in, __typeMapper);
        setPosition(__in, __typeMapper);
        set_protected(__in, __typeMapper);
        setRequireRowSelection(__in, __typeMapper);
        setScontrol(__in, __typeMapper);
        setShowsLocation(__in, __typeMapper);
        setShowsStatus(__in, __typeMapper);
        setUrl(__in, __typeMapper);
        setWidth(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CustomPageWebLink ");
      sb.append(super.toString());sb.append(" availability='").append(com.sforce.ws.util.Verbose.toString(availability)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" displayType='").append(com.sforce.ws.util.Verbose.toString(displayType)).append("'\n");
      sb.append(" encodingKey='").append(com.sforce.ws.util.Verbose.toString(encodingKey)).append("'\n");
      sb.append(" hasMenubar='").append(com.sforce.ws.util.Verbose.toString(hasMenubar)).append("'\n");
      sb.append(" hasScrollbars='").append(com.sforce.ws.util.Verbose.toString(hasScrollbars)).append("'\n");
      sb.append(" hasToolbar='").append(com.sforce.ws.util.Verbose.toString(hasToolbar)).append("'\n");
      sb.append(" height='").append(com.sforce.ws.util.Verbose.toString(height)).append("'\n");
      sb.append(" isResizable='").append(com.sforce.ws.util.Verbose.toString(isResizable)).append("'\n");
      sb.append(" linkType='").append(com.sforce.ws.util.Verbose.toString(linkType)).append("'\n");
      sb.append(" masterLabel='").append(com.sforce.ws.util.Verbose.toString(masterLabel)).append("'\n");
      sb.append(" openType='").append(com.sforce.ws.util.Verbose.toString(openType)).append("'\n");
      sb.append(" page='").append(com.sforce.ws.util.Verbose.toString(page)).append("'\n");
      sb.append(" position='").append(com.sforce.ws.util.Verbose.toString(position)).append("'\n");
      sb.append(" _protected='").append(com.sforce.ws.util.Verbose.toString(_protected)).append("'\n");
      sb.append(" requireRowSelection='").append(com.sforce.ws.util.Verbose.toString(requireRowSelection)).append("'\n");
      sb.append(" scontrol='").append(com.sforce.ws.util.Verbose.toString(scontrol)).append("'\n");
      sb.append(" showsLocation='").append(com.sforce.ws.util.Verbose.toString(showsLocation)).append("'\n");
      sb.append(" showsStatus='").append(com.sforce.ws.util.Verbose.toString(showsStatus)).append("'\n");
      sb.append(" url='").append(com.sforce.ws.util.Verbose.toString(url)).append("'\n");
      sb.append(" width='").append(com.sforce.ws.util.Verbose.toString(width)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
