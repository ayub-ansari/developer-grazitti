package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ApprovalStepApprover implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ApprovalStepApprover() {}

    /**
     * element : approver of type {http://soap.sforce.com/2006/04/metadata}Approver
     * java type: com.sforce.soap.metadata.Approver[]
     */
    private static final com.sforce.ws.bind.TypeInfo approver__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","approver","http://soap.sforce.com/2006/04/metadata","Approver",0,-1,true);

    private boolean approver__is_set = false;

    private com.sforce.soap.metadata.Approver[] approver = new com.sforce.soap.metadata.Approver[0];

    public com.sforce.soap.metadata.Approver[] getApprover() {
      return approver;
    }

    public void setApprover(com.sforce.soap.metadata.Approver[] approver) {
      this.approver = approver;
      approver__is_set = true;
    }

    protected void setApprover(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, approver__typeInfo)) {
        setApprover((com.sforce.soap.metadata.Approver[])__typeMapper.readObject(__in, approver__typeInfo, com.sforce.soap.metadata.Approver[].class));
      }
    }

    /**
     * element : whenMultipleApprovers of type {http://soap.sforce.com/2006/04/metadata}RoutingType
     * java type: com.sforce.soap.metadata.RoutingType
     */
    private static final com.sforce.ws.bind.TypeInfo whenMultipleApprovers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","whenMultipleApprovers","http://soap.sforce.com/2006/04/metadata","RoutingType",0,1,true);

    private boolean whenMultipleApprovers__is_set = false;

    private com.sforce.soap.metadata.RoutingType whenMultipleApprovers;

    public com.sforce.soap.metadata.RoutingType getWhenMultipleApprovers() {
      return whenMultipleApprovers;
    }

    public void setWhenMultipleApprovers(com.sforce.soap.metadata.RoutingType whenMultipleApprovers) {
      this.whenMultipleApprovers = whenMultipleApprovers;
      whenMultipleApprovers__is_set = true;
    }

    protected void setWhenMultipleApprovers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, whenMultipleApprovers__typeInfo)) {
        setWhenMultipleApprovers((com.sforce.soap.metadata.RoutingType)__typeMapper.readObject(__in, whenMultipleApprovers__typeInfo, com.sforce.soap.metadata.RoutingType.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, approver__typeInfo, approver, approver__is_set);
       __typeMapper.writeObject(__out, whenMultipleApprovers__typeInfo, whenMultipleApprovers, whenMultipleApprovers__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setApprover(__in, __typeMapper);
        setWhenMultipleApprovers(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ApprovalStepApprover ");
      sb.append(" approver='").append(com.sforce.ws.util.Verbose.toString(approver)).append("'\n");
      sb.append(" whenMultipleApprovers='").append(com.sforce.ws.util.Verbose.toString(whenMultipleApprovers)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
