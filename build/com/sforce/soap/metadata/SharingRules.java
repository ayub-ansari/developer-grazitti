package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class SharingRules extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public SharingRules() {}

    /**
     * element : sharingCriteriaRules of type {http://soap.sforce.com/2006/04/metadata}SharingCriteriaRule
     * java type: com.sforce.soap.metadata.SharingCriteriaRule[]
     */
    private static final com.sforce.ws.bind.TypeInfo sharingCriteriaRules__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sharingCriteriaRules","http://soap.sforce.com/2006/04/metadata","SharingCriteriaRule",0,-1,true);

    private boolean sharingCriteriaRules__is_set = false;

    private com.sforce.soap.metadata.SharingCriteriaRule[] sharingCriteriaRules = new com.sforce.soap.metadata.SharingCriteriaRule[0];

    public com.sforce.soap.metadata.SharingCriteriaRule[] getSharingCriteriaRules() {
      return sharingCriteriaRules;
    }

    public void setSharingCriteriaRules(com.sforce.soap.metadata.SharingCriteriaRule[] sharingCriteriaRules) {
      this.sharingCriteriaRules = sharingCriteriaRules;
      sharingCriteriaRules__is_set = true;
    }

    protected void setSharingCriteriaRules(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sharingCriteriaRules__typeInfo)) {
        setSharingCriteriaRules((com.sforce.soap.metadata.SharingCriteriaRule[])__typeMapper.readObject(__in, sharingCriteriaRules__typeInfo, com.sforce.soap.metadata.SharingCriteriaRule[].class));
      }
    }

    /**
     * element : sharingOwnerRules of type {http://soap.sforce.com/2006/04/metadata}SharingOwnerRule
     * java type: com.sforce.soap.metadata.SharingOwnerRule[]
     */
    private static final com.sforce.ws.bind.TypeInfo sharingOwnerRules__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sharingOwnerRules","http://soap.sforce.com/2006/04/metadata","SharingOwnerRule",0,-1,true);

    private boolean sharingOwnerRules__is_set = false;

    private com.sforce.soap.metadata.SharingOwnerRule[] sharingOwnerRules = new com.sforce.soap.metadata.SharingOwnerRule[0];

    public com.sforce.soap.metadata.SharingOwnerRule[] getSharingOwnerRules() {
      return sharingOwnerRules;
    }

    public void setSharingOwnerRules(com.sforce.soap.metadata.SharingOwnerRule[] sharingOwnerRules) {
      this.sharingOwnerRules = sharingOwnerRules;
      sharingOwnerRules__is_set = true;
    }

    protected void setSharingOwnerRules(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sharingOwnerRules__typeInfo)) {
        setSharingOwnerRules((com.sforce.soap.metadata.SharingOwnerRule[])__typeMapper.readObject(__in, sharingOwnerRules__typeInfo, com.sforce.soap.metadata.SharingOwnerRule[].class));
      }
    }

    /**
     * element : sharingTerritoryRules of type {http://soap.sforce.com/2006/04/metadata}SharingTerritoryRule
     * java type: com.sforce.soap.metadata.SharingTerritoryRule[]
     */
    private static final com.sforce.ws.bind.TypeInfo sharingTerritoryRules__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sharingTerritoryRules","http://soap.sforce.com/2006/04/metadata","SharingTerritoryRule",0,-1,true);

    private boolean sharingTerritoryRules__is_set = false;

    private com.sforce.soap.metadata.SharingTerritoryRule[] sharingTerritoryRules = new com.sforce.soap.metadata.SharingTerritoryRule[0];

    public com.sforce.soap.metadata.SharingTerritoryRule[] getSharingTerritoryRules() {
      return sharingTerritoryRules;
    }

    public void setSharingTerritoryRules(com.sforce.soap.metadata.SharingTerritoryRule[] sharingTerritoryRules) {
      this.sharingTerritoryRules = sharingTerritoryRules;
      sharingTerritoryRules__is_set = true;
    }

    protected void setSharingTerritoryRules(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sharingTerritoryRules__typeInfo)) {
        setSharingTerritoryRules((com.sforce.soap.metadata.SharingTerritoryRule[])__typeMapper.readObject(__in, sharingTerritoryRules__typeInfo, com.sforce.soap.metadata.SharingTerritoryRule[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "SharingRules");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, sharingCriteriaRules__typeInfo, sharingCriteriaRules, sharingCriteriaRules__is_set);
       __typeMapper.writeObject(__out, sharingOwnerRules__typeInfo, sharingOwnerRules, sharingOwnerRules__is_set);
       __typeMapper.writeObject(__out, sharingTerritoryRules__typeInfo, sharingTerritoryRules, sharingTerritoryRules__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setSharingCriteriaRules(__in, __typeMapper);
        setSharingOwnerRules(__in, __typeMapper);
        setSharingTerritoryRules(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[SharingRules ");
      sb.append(super.toString());sb.append(" sharingCriteriaRules='").append(com.sforce.ws.util.Verbose.toString(sharingCriteriaRules)).append("'\n");
      sb.append(" sharingOwnerRules='").append(com.sforce.ws.util.Verbose.toString(sharingOwnerRules)).append("'\n");
      sb.append(" sharingTerritoryRules='").append(com.sforce.ws.util.Verbose.toString(sharingTerritoryRules)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
