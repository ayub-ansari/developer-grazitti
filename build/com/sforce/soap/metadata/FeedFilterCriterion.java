package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FeedFilterCriterion implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FeedFilterCriterion() {}

    /**
     * element : feedItemType of type {http://soap.sforce.com/2006/04/metadata}FeedItemType
     * java type: com.sforce.soap.metadata.FeedItemType
     */
    private static final com.sforce.ws.bind.TypeInfo feedItemType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","feedItemType","http://soap.sforce.com/2006/04/metadata","FeedItemType",1,1,true);

    private boolean feedItemType__is_set = false;

    private com.sforce.soap.metadata.FeedItemType feedItemType;

    public com.sforce.soap.metadata.FeedItemType getFeedItemType() {
      return feedItemType;
    }

    public void setFeedItemType(com.sforce.soap.metadata.FeedItemType feedItemType) {
      this.feedItemType = feedItemType;
      feedItemType__is_set = true;
    }

    protected void setFeedItemType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, feedItemType__typeInfo)) {
        setFeedItemType((com.sforce.soap.metadata.FeedItemType)__typeMapper.readObject(__in, feedItemType__typeInfo, com.sforce.soap.metadata.FeedItemType.class));
      }
    }

    /**
     * element : feedItemVisibility of type {http://soap.sforce.com/2006/04/metadata}FeedItemVisibility
     * java type: com.sforce.soap.metadata.FeedItemVisibility
     */
    private static final com.sforce.ws.bind.TypeInfo feedItemVisibility__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","feedItemVisibility","http://soap.sforce.com/2006/04/metadata","FeedItemVisibility",0,1,true);

    private boolean feedItemVisibility__is_set = false;

    private com.sforce.soap.metadata.FeedItemVisibility feedItemVisibility;

    public com.sforce.soap.metadata.FeedItemVisibility getFeedItemVisibility() {
      return feedItemVisibility;
    }

    public void setFeedItemVisibility(com.sforce.soap.metadata.FeedItemVisibility feedItemVisibility) {
      this.feedItemVisibility = feedItemVisibility;
      feedItemVisibility__is_set = true;
    }

    protected void setFeedItemVisibility(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, feedItemVisibility__typeInfo)) {
        setFeedItemVisibility((com.sforce.soap.metadata.FeedItemVisibility)__typeMapper.readObject(__in, feedItemVisibility__typeInfo, com.sforce.soap.metadata.FeedItemVisibility.class));
      }
    }

    /**
     * element : relatedSObjectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo relatedSObjectType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","relatedSObjectType","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean relatedSObjectType__is_set = false;

    private java.lang.String relatedSObjectType;

    public java.lang.String getRelatedSObjectType() {
      return relatedSObjectType;
    }

    public void setRelatedSObjectType(java.lang.String relatedSObjectType) {
      this.relatedSObjectType = relatedSObjectType;
      relatedSObjectType__is_set = true;
    }

    protected void setRelatedSObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, relatedSObjectType__typeInfo)) {
        setRelatedSObjectType(__typeMapper.readString(__in, relatedSObjectType__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, feedItemType__typeInfo, feedItemType, feedItemType__is_set);
       __typeMapper.writeObject(__out, feedItemVisibility__typeInfo, feedItemVisibility, feedItemVisibility__is_set);
       __typeMapper.writeString(__out, relatedSObjectType__typeInfo, relatedSObjectType, relatedSObjectType__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setFeedItemType(__in, __typeMapper);
        setFeedItemVisibility(__in, __typeMapper);
        setRelatedSObjectType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FeedFilterCriterion ");
      sb.append(" feedItemType='").append(com.sforce.ws.util.Verbose.toString(feedItemType)).append("'\n");
      sb.append(" feedItemVisibility='").append(com.sforce.ws.util.Verbose.toString(feedItemVisibility)).append("'\n");
      sb.append(" relatedSObjectType='").append(com.sforce.ws.util.Verbose.toString(relatedSObjectType)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
