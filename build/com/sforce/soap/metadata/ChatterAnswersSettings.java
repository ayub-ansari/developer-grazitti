package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ChatterAnswersSettings extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public ChatterAnswersSettings() {}

    /**
     * element : emailFollowersOnBestAnswer of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo emailFollowersOnBestAnswer__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","emailFollowersOnBestAnswer","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean emailFollowersOnBestAnswer__is_set = false;

    private boolean emailFollowersOnBestAnswer;

    public boolean getEmailFollowersOnBestAnswer() {
      return emailFollowersOnBestAnswer;
    }

    public boolean isEmailFollowersOnBestAnswer() {
      return emailFollowersOnBestAnswer;
    }

    public void setEmailFollowersOnBestAnswer(boolean emailFollowersOnBestAnswer) {
      this.emailFollowersOnBestAnswer = emailFollowersOnBestAnswer;
      emailFollowersOnBestAnswer__is_set = true;
    }

    protected void setEmailFollowersOnBestAnswer(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, emailFollowersOnBestAnswer__typeInfo)) {
        setEmailFollowersOnBestAnswer(__typeMapper.readBoolean(__in, emailFollowersOnBestAnswer__typeInfo, boolean.class));
      }
    }

    /**
     * element : emailFollowersOnReply of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo emailFollowersOnReply__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","emailFollowersOnReply","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean emailFollowersOnReply__is_set = false;

    private boolean emailFollowersOnReply;

    public boolean getEmailFollowersOnReply() {
      return emailFollowersOnReply;
    }

    public boolean isEmailFollowersOnReply() {
      return emailFollowersOnReply;
    }

    public void setEmailFollowersOnReply(boolean emailFollowersOnReply) {
      this.emailFollowersOnReply = emailFollowersOnReply;
      emailFollowersOnReply__is_set = true;
    }

    protected void setEmailFollowersOnReply(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, emailFollowersOnReply__typeInfo)) {
        setEmailFollowersOnReply(__typeMapper.readBoolean(__in, emailFollowersOnReply__typeInfo, boolean.class));
      }
    }

    /**
     * element : emailOwnerOnPrivateReply of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo emailOwnerOnPrivateReply__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","emailOwnerOnPrivateReply","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean emailOwnerOnPrivateReply__is_set = false;

    private boolean emailOwnerOnPrivateReply;

    public boolean getEmailOwnerOnPrivateReply() {
      return emailOwnerOnPrivateReply;
    }

    public boolean isEmailOwnerOnPrivateReply() {
      return emailOwnerOnPrivateReply;
    }

    public void setEmailOwnerOnPrivateReply(boolean emailOwnerOnPrivateReply) {
      this.emailOwnerOnPrivateReply = emailOwnerOnPrivateReply;
      emailOwnerOnPrivateReply__is_set = true;
    }

    protected void setEmailOwnerOnPrivateReply(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, emailOwnerOnPrivateReply__typeInfo)) {
        setEmailOwnerOnPrivateReply(__typeMapper.readBoolean(__in, emailOwnerOnPrivateReply__typeInfo, boolean.class));
      }
    }

    /**
     * element : emailOwnerOnReply of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo emailOwnerOnReply__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","emailOwnerOnReply","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean emailOwnerOnReply__is_set = false;

    private boolean emailOwnerOnReply;

    public boolean getEmailOwnerOnReply() {
      return emailOwnerOnReply;
    }

    public boolean isEmailOwnerOnReply() {
      return emailOwnerOnReply;
    }

    public void setEmailOwnerOnReply(boolean emailOwnerOnReply) {
      this.emailOwnerOnReply = emailOwnerOnReply;
      emailOwnerOnReply__is_set = true;
    }

    protected void setEmailOwnerOnReply(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, emailOwnerOnReply__typeInfo)) {
        setEmailOwnerOnReply(__typeMapper.readBoolean(__in, emailOwnerOnReply__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableAnswerViaEmail of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableAnswerViaEmail__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableAnswerViaEmail","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableAnswerViaEmail__is_set = false;

    private boolean enableAnswerViaEmail;

    public boolean getEnableAnswerViaEmail() {
      return enableAnswerViaEmail;
    }

    public boolean isEnableAnswerViaEmail() {
      return enableAnswerViaEmail;
    }

    public void setEnableAnswerViaEmail(boolean enableAnswerViaEmail) {
      this.enableAnswerViaEmail = enableAnswerViaEmail;
      enableAnswerViaEmail__is_set = true;
    }

    protected void setEnableAnswerViaEmail(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableAnswerViaEmail__typeInfo)) {
        setEnableAnswerViaEmail(__typeMapper.readBoolean(__in, enableAnswerViaEmail__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableChatterAnswers of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableChatterAnswers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableChatterAnswers","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean enableChatterAnswers__is_set = false;

    private boolean enableChatterAnswers;

    public boolean getEnableChatterAnswers() {
      return enableChatterAnswers;
    }

    public boolean isEnableChatterAnswers() {
      return enableChatterAnswers;
    }

    public void setEnableChatterAnswers(boolean enableChatterAnswers) {
      this.enableChatterAnswers = enableChatterAnswers;
      enableChatterAnswers__is_set = true;
    }

    protected void setEnableChatterAnswers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, enableChatterAnswers__typeInfo)) {
        setEnableChatterAnswers(__typeMapper.readBoolean(__in, enableChatterAnswers__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableFacebookSSO of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableFacebookSSO__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableFacebookSSO","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableFacebookSSO__is_set = false;

    private boolean enableFacebookSSO;

    public boolean getEnableFacebookSSO() {
      return enableFacebookSSO;
    }

    public boolean isEnableFacebookSSO() {
      return enableFacebookSSO;
    }

    public void setEnableFacebookSSO(boolean enableFacebookSSO) {
      this.enableFacebookSSO = enableFacebookSSO;
      enableFacebookSSO__is_set = true;
    }

    protected void setEnableFacebookSSO(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableFacebookSSO__typeInfo)) {
        setEnableFacebookSSO(__typeMapper.readBoolean(__in, enableFacebookSSO__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableInlinePublisher of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableInlinePublisher__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableInlinePublisher","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableInlinePublisher__is_set = false;

    private boolean enableInlinePublisher;

    public boolean getEnableInlinePublisher() {
      return enableInlinePublisher;
    }

    public boolean isEnableInlinePublisher() {
      return enableInlinePublisher;
    }

    public void setEnableInlinePublisher(boolean enableInlinePublisher) {
      this.enableInlinePublisher = enableInlinePublisher;
      enableInlinePublisher__is_set = true;
    }

    protected void setEnableInlinePublisher(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableInlinePublisher__typeInfo)) {
        setEnableInlinePublisher(__typeMapper.readBoolean(__in, enableInlinePublisher__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableReputation of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableReputation__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableReputation","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableReputation__is_set = false;

    private boolean enableReputation;

    public boolean getEnableReputation() {
      return enableReputation;
    }

    public boolean isEnableReputation() {
      return enableReputation;
    }

    public void setEnableReputation(boolean enableReputation) {
      this.enableReputation = enableReputation;
      enableReputation__is_set = true;
    }

    protected void setEnableReputation(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableReputation__typeInfo)) {
        setEnableReputation(__typeMapper.readBoolean(__in, enableReputation__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableRichTextEditor of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableRichTextEditor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableRichTextEditor","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableRichTextEditor__is_set = false;

    private boolean enableRichTextEditor;

    public boolean getEnableRichTextEditor() {
      return enableRichTextEditor;
    }

    public boolean isEnableRichTextEditor() {
      return enableRichTextEditor;
    }

    public void setEnableRichTextEditor(boolean enableRichTextEditor) {
      this.enableRichTextEditor = enableRichTextEditor;
      enableRichTextEditor__is_set = true;
    }

    protected void setEnableRichTextEditor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableRichTextEditor__typeInfo)) {
        setEnableRichTextEditor(__typeMapper.readBoolean(__in, enableRichTextEditor__typeInfo, boolean.class));
      }
    }

    /**
     * element : facebookAuthProvider of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo facebookAuthProvider__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","facebookAuthProvider","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean facebookAuthProvider__is_set = false;

    private java.lang.String facebookAuthProvider;

    public java.lang.String getFacebookAuthProvider() {
      return facebookAuthProvider;
    }

    public void setFacebookAuthProvider(java.lang.String facebookAuthProvider) {
      this.facebookAuthProvider = facebookAuthProvider;
      facebookAuthProvider__is_set = true;
    }

    protected void setFacebookAuthProvider(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, facebookAuthProvider__typeInfo)) {
        setFacebookAuthProvider(__typeMapper.readString(__in, facebookAuthProvider__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : showInPortals of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showInPortals__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showInPortals","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showInPortals__is_set = false;

    private boolean showInPortals;

    public boolean getShowInPortals() {
      return showInPortals;
    }

    public boolean isShowInPortals() {
      return showInPortals;
    }

    public void setShowInPortals(boolean showInPortals) {
      this.showInPortals = showInPortals;
      showInPortals__is_set = true;
    }

    protected void setShowInPortals(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showInPortals__typeInfo)) {
        setShowInPortals(__typeMapper.readBoolean(__in, showInPortals__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "ChatterAnswersSettings");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, emailFollowersOnBestAnswer__typeInfo, emailFollowersOnBestAnswer, emailFollowersOnBestAnswer__is_set);
       __typeMapper.writeBoolean(__out, emailFollowersOnReply__typeInfo, emailFollowersOnReply, emailFollowersOnReply__is_set);
       __typeMapper.writeBoolean(__out, emailOwnerOnPrivateReply__typeInfo, emailOwnerOnPrivateReply, emailOwnerOnPrivateReply__is_set);
       __typeMapper.writeBoolean(__out, emailOwnerOnReply__typeInfo, emailOwnerOnReply, emailOwnerOnReply__is_set);
       __typeMapper.writeBoolean(__out, enableAnswerViaEmail__typeInfo, enableAnswerViaEmail, enableAnswerViaEmail__is_set);
       __typeMapper.writeBoolean(__out, enableChatterAnswers__typeInfo, enableChatterAnswers, enableChatterAnswers__is_set);
       __typeMapper.writeBoolean(__out, enableFacebookSSO__typeInfo, enableFacebookSSO, enableFacebookSSO__is_set);
       __typeMapper.writeBoolean(__out, enableInlinePublisher__typeInfo, enableInlinePublisher, enableInlinePublisher__is_set);
       __typeMapper.writeBoolean(__out, enableReputation__typeInfo, enableReputation, enableReputation__is_set);
       __typeMapper.writeBoolean(__out, enableRichTextEditor__typeInfo, enableRichTextEditor, enableRichTextEditor__is_set);
       __typeMapper.writeString(__out, facebookAuthProvider__typeInfo, facebookAuthProvider, facebookAuthProvider__is_set);
       __typeMapper.writeBoolean(__out, showInPortals__typeInfo, showInPortals, showInPortals__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setEmailFollowersOnBestAnswer(__in, __typeMapper);
        setEmailFollowersOnReply(__in, __typeMapper);
        setEmailOwnerOnPrivateReply(__in, __typeMapper);
        setEmailOwnerOnReply(__in, __typeMapper);
        setEnableAnswerViaEmail(__in, __typeMapper);
        setEnableChatterAnswers(__in, __typeMapper);
        setEnableFacebookSSO(__in, __typeMapper);
        setEnableInlinePublisher(__in, __typeMapper);
        setEnableReputation(__in, __typeMapper);
        setEnableRichTextEditor(__in, __typeMapper);
        setFacebookAuthProvider(__in, __typeMapper);
        setShowInPortals(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ChatterAnswersSettings ");
      sb.append(super.toString());sb.append(" emailFollowersOnBestAnswer='").append(com.sforce.ws.util.Verbose.toString(emailFollowersOnBestAnswer)).append("'\n");
      sb.append(" emailFollowersOnReply='").append(com.sforce.ws.util.Verbose.toString(emailFollowersOnReply)).append("'\n");
      sb.append(" emailOwnerOnPrivateReply='").append(com.sforce.ws.util.Verbose.toString(emailOwnerOnPrivateReply)).append("'\n");
      sb.append(" emailOwnerOnReply='").append(com.sforce.ws.util.Verbose.toString(emailOwnerOnReply)).append("'\n");
      sb.append(" enableAnswerViaEmail='").append(com.sforce.ws.util.Verbose.toString(enableAnswerViaEmail)).append("'\n");
      sb.append(" enableChatterAnswers='").append(com.sforce.ws.util.Verbose.toString(enableChatterAnswers)).append("'\n");
      sb.append(" enableFacebookSSO='").append(com.sforce.ws.util.Verbose.toString(enableFacebookSSO)).append("'\n");
      sb.append(" enableInlinePublisher='").append(com.sforce.ws.util.Verbose.toString(enableInlinePublisher)).append("'\n");
      sb.append(" enableReputation='").append(com.sforce.ws.util.Verbose.toString(enableReputation)).append("'\n");
      sb.append(" enableRichTextEditor='").append(com.sforce.ws.util.Verbose.toString(enableRichTextEditor)).append("'\n");
      sb.append(" facebookAuthProvider='").append(com.sforce.ws.util.Verbose.toString(facebookAuthProvider)).append("'\n");
      sb.append(" showInPortals='").append(com.sforce.ws.util.Verbose.toString(showInPortals)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
