package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class PushNotification implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public PushNotification() {}

    /**
     * element : fieldNames of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo fieldNames__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fieldNames","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean fieldNames__is_set = false;

    private java.lang.String[] fieldNames = new java.lang.String[0];

    public java.lang.String[] getFieldNames() {
      return fieldNames;
    }

    public void setFieldNames(java.lang.String[] fieldNames) {
      this.fieldNames = fieldNames;
      fieldNames__is_set = true;
    }

    protected void setFieldNames(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fieldNames__typeInfo)) {
        setFieldNames((java.lang.String[])__typeMapper.readObject(__in, fieldNames__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : objectName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo objectName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","objectName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean objectName__is_set = false;

    private java.lang.String objectName;

    public java.lang.String getObjectName() {
      return objectName;
    }

    public void setObjectName(java.lang.String objectName) {
      this.objectName = objectName;
      objectName__is_set = true;
    }

    protected void setObjectName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, objectName__typeInfo)) {
        setObjectName(__typeMapper.readString(__in, objectName__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, fieldNames__typeInfo, fieldNames, fieldNames__is_set);
       __typeMapper.writeString(__out, objectName__typeInfo, objectName, objectName__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setFieldNames(__in, __typeMapper);
        setObjectName(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[PushNotification ");
      sb.append(" fieldNames='").append(com.sforce.ws.util.Verbose.toString(fieldNames)).append("'\n");
      sb.append(" objectName='").append(com.sforce.ws.util.Verbose.toString(objectName)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
