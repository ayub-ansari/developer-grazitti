package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ReportColorRange implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ReportColorRange() {}

    /**
     * element : aggregate of type {http://soap.sforce.com/2006/04/metadata}ReportSummaryType
     * java type: com.sforce.soap.metadata.ReportSummaryType
     */
    private static final com.sforce.ws.bind.TypeInfo aggregate__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","aggregate","http://soap.sforce.com/2006/04/metadata","ReportSummaryType",0,1,true);

    private boolean aggregate__is_set = false;

    private com.sforce.soap.metadata.ReportSummaryType aggregate;

    public com.sforce.soap.metadata.ReportSummaryType getAggregate() {
      return aggregate;
    }

    public void setAggregate(com.sforce.soap.metadata.ReportSummaryType aggregate) {
      this.aggregate = aggregate;
      aggregate__is_set = true;
    }

    protected void setAggregate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, aggregate__typeInfo)) {
        setAggregate((com.sforce.soap.metadata.ReportSummaryType)__typeMapper.readObject(__in, aggregate__typeInfo, com.sforce.soap.metadata.ReportSummaryType.class));
      }
    }

    /**
     * element : columnName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo columnName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","columnName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean columnName__is_set = false;

    private java.lang.String columnName;

    public java.lang.String getColumnName() {
      return columnName;
    }

    public void setColumnName(java.lang.String columnName) {
      this.columnName = columnName;
      columnName__is_set = true;
    }

    protected void setColumnName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, columnName__typeInfo)) {
        setColumnName(__typeMapper.readString(__in, columnName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : highBreakpoint of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo highBreakpoint__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","highBreakpoint","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean highBreakpoint__is_set = false;

    private double highBreakpoint;

    public double getHighBreakpoint() {
      return highBreakpoint;
    }

    public void setHighBreakpoint(double highBreakpoint) {
      this.highBreakpoint = highBreakpoint;
      highBreakpoint__is_set = true;
    }

    protected void setHighBreakpoint(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, highBreakpoint__typeInfo)) {
        setHighBreakpoint((double)__typeMapper.readDouble(__in, highBreakpoint__typeInfo, double.class));
      }
    }

    /**
     * element : highColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo highColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","highColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean highColor__is_set = false;

    private java.lang.String highColor;

    public java.lang.String getHighColor() {
      return highColor;
    }

    public void setHighColor(java.lang.String highColor) {
      this.highColor = highColor;
      highColor__is_set = true;
    }

    protected void setHighColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, highColor__typeInfo)) {
        setHighColor(__typeMapper.readString(__in, highColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : lowBreakpoint of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo lowBreakpoint__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","lowBreakpoint","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean lowBreakpoint__is_set = false;

    private double lowBreakpoint;

    public double getLowBreakpoint() {
      return lowBreakpoint;
    }

    public void setLowBreakpoint(double lowBreakpoint) {
      this.lowBreakpoint = lowBreakpoint;
      lowBreakpoint__is_set = true;
    }

    protected void setLowBreakpoint(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, lowBreakpoint__typeInfo)) {
        setLowBreakpoint((double)__typeMapper.readDouble(__in, lowBreakpoint__typeInfo, double.class));
      }
    }

    /**
     * element : lowColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo lowColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","lowColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean lowColor__is_set = false;

    private java.lang.String lowColor;

    public java.lang.String getLowColor() {
      return lowColor;
    }

    public void setLowColor(java.lang.String lowColor) {
      this.lowColor = lowColor;
      lowColor__is_set = true;
    }

    protected void setLowColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, lowColor__typeInfo)) {
        setLowColor(__typeMapper.readString(__in, lowColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : midColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo midColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","midColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean midColor__is_set = false;

    private java.lang.String midColor;

    public java.lang.String getMidColor() {
      return midColor;
    }

    public void setMidColor(java.lang.String midColor) {
      this.midColor = midColor;
      midColor__is_set = true;
    }

    protected void setMidColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, midColor__typeInfo)) {
        setMidColor(__typeMapper.readString(__in, midColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, aggregate__typeInfo, aggregate, aggregate__is_set);
       __typeMapper.writeString(__out, columnName__typeInfo, columnName, columnName__is_set);
       __typeMapper.writeDouble(__out, highBreakpoint__typeInfo, highBreakpoint, highBreakpoint__is_set);
       __typeMapper.writeString(__out, highColor__typeInfo, highColor, highColor__is_set);
       __typeMapper.writeDouble(__out, lowBreakpoint__typeInfo, lowBreakpoint, lowBreakpoint__is_set);
       __typeMapper.writeString(__out, lowColor__typeInfo, lowColor, lowColor__is_set);
       __typeMapper.writeString(__out, midColor__typeInfo, midColor, midColor__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAggregate(__in, __typeMapper);
        setColumnName(__in, __typeMapper);
        setHighBreakpoint(__in, __typeMapper);
        setHighColor(__in, __typeMapper);
        setLowBreakpoint(__in, __typeMapper);
        setLowColor(__in, __typeMapper);
        setMidColor(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ReportColorRange ");
      sb.append(" aggregate='").append(com.sforce.ws.util.Verbose.toString(aggregate)).append("'\n");
      sb.append(" columnName='").append(com.sforce.ws.util.Verbose.toString(columnName)).append("'\n");
      sb.append(" highBreakpoint='").append(com.sforce.ws.util.Verbose.toString(highBreakpoint)).append("'\n");
      sb.append(" highColor='").append(com.sforce.ws.util.Verbose.toString(highColor)).append("'\n");
      sb.append(" lowBreakpoint='").append(com.sforce.ws.util.Verbose.toString(lowBreakpoint)).append("'\n");
      sb.append(" lowColor='").append(com.sforce.ws.util.Verbose.toString(lowColor)).append("'\n");
      sb.append(" midColor='").append(com.sforce.ws.util.Verbose.toString(midColor)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
