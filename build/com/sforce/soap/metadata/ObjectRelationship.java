package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ObjectRelationship implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ObjectRelationship() {}

    /**
     * element : join of type {http://soap.sforce.com/2006/04/metadata}ObjectRelationship
     * java type: com.sforce.soap.metadata.ObjectRelationship
     */
    private static final com.sforce.ws.bind.TypeInfo join__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","join","http://soap.sforce.com/2006/04/metadata","ObjectRelationship",0,1,true);

    private boolean join__is_set = false;

    private com.sforce.soap.metadata.ObjectRelationship join;

    public com.sforce.soap.metadata.ObjectRelationship getJoin() {
      return join;
    }

    public void setJoin(com.sforce.soap.metadata.ObjectRelationship join) {
      this.join = join;
      join__is_set = true;
    }

    protected void setJoin(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, join__typeInfo)) {
        setJoin((com.sforce.soap.metadata.ObjectRelationship)__typeMapper.readObject(__in, join__typeInfo, com.sforce.soap.metadata.ObjectRelationship.class));
      }
    }

    /**
     * element : outerJoin of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo outerJoin__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","outerJoin","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean outerJoin__is_set = false;

    private boolean outerJoin;

    public boolean getOuterJoin() {
      return outerJoin;
    }

    public boolean isOuterJoin() {
      return outerJoin;
    }

    public void setOuterJoin(boolean outerJoin) {
      this.outerJoin = outerJoin;
      outerJoin__is_set = true;
    }

    protected void setOuterJoin(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, outerJoin__typeInfo)) {
        setOuterJoin(__typeMapper.readBoolean(__in, outerJoin__typeInfo, boolean.class));
      }
    }

    /**
     * element : relationship of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo relationship__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","relationship","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean relationship__is_set = false;

    private java.lang.String relationship;

    public java.lang.String getRelationship() {
      return relationship;
    }

    public void setRelationship(java.lang.String relationship) {
      this.relationship = relationship;
      relationship__is_set = true;
    }

    protected void setRelationship(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, relationship__typeInfo)) {
        setRelationship(__typeMapper.readString(__in, relationship__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, join__typeInfo, join, join__is_set);
       __typeMapper.writeBoolean(__out, outerJoin__typeInfo, outerJoin, outerJoin__is_set);
       __typeMapper.writeString(__out, relationship__typeInfo, relationship, relationship__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setJoin(__in, __typeMapper);
        setOuterJoin(__in, __typeMapper);
        setRelationship(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ObjectRelationship ");
      sb.append(" join='").append(com.sforce.ws.util.Verbose.toString(join)).append("'\n");
      sb.append(" outerJoin='").append(com.sforce.ws.util.Verbose.toString(outerJoin)).append("'\n");
      sb.append(" relationship='").append(com.sforce.ws.util.Verbose.toString(relationship)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
