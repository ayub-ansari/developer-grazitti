package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class UiPlugin extends com.sforce.soap.metadata.MetadataWithContent {

    /**
     * Constructor
     */
    public UiPlugin() {}

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : extensionPointIdentifier of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo extensionPointIdentifier__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","extensionPointIdentifier","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean extensionPointIdentifier__is_set = false;

    private java.lang.String extensionPointIdentifier;

    public java.lang.String getExtensionPointIdentifier() {
      return extensionPointIdentifier;
    }

    public void setExtensionPointIdentifier(java.lang.String extensionPointIdentifier) {
      this.extensionPointIdentifier = extensionPointIdentifier;
      extensionPointIdentifier__is_set = true;
    }

    protected void setExtensionPointIdentifier(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, extensionPointIdentifier__typeInfo)) {
        setExtensionPointIdentifier(__typeMapper.readString(__in, extensionPointIdentifier__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : isEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isEnabled__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean isEnabled__is_set = false;

    private boolean isEnabled;

    public boolean getIsEnabled() {
      return isEnabled;
    }

    public boolean isIsEnabled() {
      return isEnabled;
    }

    public void setIsEnabled(boolean isEnabled) {
      this.isEnabled = isEnabled;
      isEnabled__is_set = true;
    }

    protected void setIsEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, isEnabled__typeInfo)) {
        setIsEnabled(__typeMapper.readBoolean(__in, isEnabled__typeInfo, boolean.class));
      }
    }

    /**
     * element : language of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo language__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","language","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean language__is_set = false;

    private java.lang.String language;

    public java.lang.String getLanguage() {
      return language;
    }

    public void setLanguage(java.lang.String language) {
      this.language = language;
      language__is_set = true;
    }

    protected void setLanguage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, language__typeInfo)) {
        setLanguage(__typeMapper.readString(__in, language__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : masterLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo masterLabel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","masterLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean masterLabel__is_set = false;

    private java.lang.String masterLabel;

    public java.lang.String getMasterLabel() {
      return masterLabel;
    }

    public void setMasterLabel(java.lang.String masterLabel) {
      this.masterLabel = masterLabel;
      masterLabel__is_set = true;
    }

    protected void setMasterLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, masterLabel__typeInfo)) {
        setMasterLabel(__typeMapper.readString(__in, masterLabel__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "UiPlugin");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, extensionPointIdentifier__typeInfo, extensionPointIdentifier, extensionPointIdentifier__is_set);
       __typeMapper.writeBoolean(__out, isEnabled__typeInfo, isEnabled, isEnabled__is_set);
       __typeMapper.writeString(__out, language__typeInfo, language, language__is_set);
       __typeMapper.writeString(__out, masterLabel__typeInfo, masterLabel, masterLabel__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setExtensionPointIdentifier(__in, __typeMapper);
        setIsEnabled(__in, __typeMapper);
        setLanguage(__in, __typeMapper);
        setMasterLabel(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[UiPlugin ");
      sb.append(super.toString());sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" extensionPointIdentifier='").append(com.sforce.ws.util.Verbose.toString(extensionPointIdentifier)).append("'\n");
      sb.append(" isEnabled='").append(com.sforce.ws.util.Verbose.toString(isEnabled)).append("'\n");
      sb.append(" language='").append(com.sforce.ws.util.Verbose.toString(language)).append("'\n");
      sb.append(" masterLabel='").append(com.sforce.ws.util.Verbose.toString(masterLabel)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
