package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class Territory2Settings extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public Territory2Settings() {}

    /**
     * element : defaultAccountAccessLevel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo defaultAccountAccessLevel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","defaultAccountAccessLevel","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean defaultAccountAccessLevel__is_set = false;

    private java.lang.String defaultAccountAccessLevel;

    public java.lang.String getDefaultAccountAccessLevel() {
      return defaultAccountAccessLevel;
    }

    public void setDefaultAccountAccessLevel(java.lang.String defaultAccountAccessLevel) {
      this.defaultAccountAccessLevel = defaultAccountAccessLevel;
      defaultAccountAccessLevel__is_set = true;
    }

    protected void setDefaultAccountAccessLevel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, defaultAccountAccessLevel__typeInfo)) {
        setDefaultAccountAccessLevel(__typeMapper.readString(__in, defaultAccountAccessLevel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : defaultCaseAccessLevel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo defaultCaseAccessLevel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","defaultCaseAccessLevel","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean defaultCaseAccessLevel__is_set = false;

    private java.lang.String defaultCaseAccessLevel;

    public java.lang.String getDefaultCaseAccessLevel() {
      return defaultCaseAccessLevel;
    }

    public void setDefaultCaseAccessLevel(java.lang.String defaultCaseAccessLevel) {
      this.defaultCaseAccessLevel = defaultCaseAccessLevel;
      defaultCaseAccessLevel__is_set = true;
    }

    protected void setDefaultCaseAccessLevel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, defaultCaseAccessLevel__typeInfo)) {
        setDefaultCaseAccessLevel(__typeMapper.readString(__in, defaultCaseAccessLevel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : defaultContactAccessLevel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo defaultContactAccessLevel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","defaultContactAccessLevel","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean defaultContactAccessLevel__is_set = false;

    private java.lang.String defaultContactAccessLevel;

    public java.lang.String getDefaultContactAccessLevel() {
      return defaultContactAccessLevel;
    }

    public void setDefaultContactAccessLevel(java.lang.String defaultContactAccessLevel) {
      this.defaultContactAccessLevel = defaultContactAccessLevel;
      defaultContactAccessLevel__is_set = true;
    }

    protected void setDefaultContactAccessLevel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, defaultContactAccessLevel__typeInfo)) {
        setDefaultContactAccessLevel(__typeMapper.readString(__in, defaultContactAccessLevel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : defaultOpportunityAccessLevel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo defaultOpportunityAccessLevel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","defaultOpportunityAccessLevel","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean defaultOpportunityAccessLevel__is_set = false;

    private java.lang.String defaultOpportunityAccessLevel;

    public java.lang.String getDefaultOpportunityAccessLevel() {
      return defaultOpportunityAccessLevel;
    }

    public void setDefaultOpportunityAccessLevel(java.lang.String defaultOpportunityAccessLevel) {
      this.defaultOpportunityAccessLevel = defaultOpportunityAccessLevel;
      defaultOpportunityAccessLevel__is_set = true;
    }

    protected void setDefaultOpportunityAccessLevel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, defaultOpportunityAccessLevel__typeInfo)) {
        setDefaultOpportunityAccessLevel(__typeMapper.readString(__in, defaultOpportunityAccessLevel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : opportunityFilterSettings of type {http://soap.sforce.com/2006/04/metadata}Territory2SettingsOpportunityFilter
     * java type: com.sforce.soap.metadata.Territory2SettingsOpportunityFilter
     */
    private static final com.sforce.ws.bind.TypeInfo opportunityFilterSettings__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","opportunityFilterSettings","http://soap.sforce.com/2006/04/metadata","Territory2SettingsOpportunityFilter",0,1,true);

    private boolean opportunityFilterSettings__is_set = false;

    private com.sforce.soap.metadata.Territory2SettingsOpportunityFilter opportunityFilterSettings;

    public com.sforce.soap.metadata.Territory2SettingsOpportunityFilter getOpportunityFilterSettings() {
      return opportunityFilterSettings;
    }

    public void setOpportunityFilterSettings(com.sforce.soap.metadata.Territory2SettingsOpportunityFilter opportunityFilterSettings) {
      this.opportunityFilterSettings = opportunityFilterSettings;
      opportunityFilterSettings__is_set = true;
    }

    protected void setOpportunityFilterSettings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, opportunityFilterSettings__typeInfo)) {
        setOpportunityFilterSettings((com.sforce.soap.metadata.Territory2SettingsOpportunityFilter)__typeMapper.readObject(__in, opportunityFilterSettings__typeInfo, com.sforce.soap.metadata.Territory2SettingsOpportunityFilter.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "Territory2Settings");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, defaultAccountAccessLevel__typeInfo, defaultAccountAccessLevel, defaultAccountAccessLevel__is_set);
       __typeMapper.writeString(__out, defaultCaseAccessLevel__typeInfo, defaultCaseAccessLevel, defaultCaseAccessLevel__is_set);
       __typeMapper.writeString(__out, defaultContactAccessLevel__typeInfo, defaultContactAccessLevel, defaultContactAccessLevel__is_set);
       __typeMapper.writeString(__out, defaultOpportunityAccessLevel__typeInfo, defaultOpportunityAccessLevel, defaultOpportunityAccessLevel__is_set);
       __typeMapper.writeObject(__out, opportunityFilterSettings__typeInfo, opportunityFilterSettings, opportunityFilterSettings__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setDefaultAccountAccessLevel(__in, __typeMapper);
        setDefaultCaseAccessLevel(__in, __typeMapper);
        setDefaultContactAccessLevel(__in, __typeMapper);
        setDefaultOpportunityAccessLevel(__in, __typeMapper);
        setOpportunityFilterSettings(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Territory2Settings ");
      sb.append(super.toString());sb.append(" defaultAccountAccessLevel='").append(com.sforce.ws.util.Verbose.toString(defaultAccountAccessLevel)).append("'\n");
      sb.append(" defaultCaseAccessLevel='").append(com.sforce.ws.util.Verbose.toString(defaultCaseAccessLevel)).append("'\n");
      sb.append(" defaultContactAccessLevel='").append(com.sforce.ws.util.Verbose.toString(defaultContactAccessLevel)).append("'\n");
      sb.append(" defaultOpportunityAccessLevel='").append(com.sforce.ws.util.Verbose.toString(defaultOpportunityAccessLevel)).append("'\n");
      sb.append(" opportunityFilterSettings='").append(com.sforce.ws.util.Verbose.toString(opportunityFilterSettings)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
