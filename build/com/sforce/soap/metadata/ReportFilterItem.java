package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ReportFilterItem implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ReportFilterItem() {}

    /**
     * element : column of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo column__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","column","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean column__is_set = false;

    private java.lang.String column;

    public java.lang.String getColumn() {
      return column;
    }

    public void setColumn(java.lang.String column) {
      this.column = column;
      column__is_set = true;
    }

    protected void setColumn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, column__typeInfo)) {
        setColumn(__typeMapper.readString(__in, column__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : columnToColumn of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo columnToColumn__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","columnToColumn","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean columnToColumn__is_set = false;

    private boolean columnToColumn;

    public boolean getColumnToColumn() {
      return columnToColumn;
    }

    public boolean isColumnToColumn() {
      return columnToColumn;
    }

    public void setColumnToColumn(boolean columnToColumn) {
      this.columnToColumn = columnToColumn;
      columnToColumn__is_set = true;
    }

    protected void setColumnToColumn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, columnToColumn__typeInfo)) {
        setColumnToColumn(__typeMapper.readBoolean(__in, columnToColumn__typeInfo, boolean.class));
      }
    }

    /**
     * element : operator of type {http://soap.sforce.com/2006/04/metadata}FilterOperation
     * java type: com.sforce.soap.metadata.FilterOperation
     */
    private static final com.sforce.ws.bind.TypeInfo operator__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","operator","http://soap.sforce.com/2006/04/metadata","FilterOperation",1,1,true);

    private boolean operator__is_set = false;

    private com.sforce.soap.metadata.FilterOperation operator;

    public com.sforce.soap.metadata.FilterOperation getOperator() {
      return operator;
    }

    public void setOperator(com.sforce.soap.metadata.FilterOperation operator) {
      this.operator = operator;
      operator__is_set = true;
    }

    protected void setOperator(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, operator__typeInfo)) {
        setOperator((com.sforce.soap.metadata.FilterOperation)__typeMapper.readObject(__in, operator__typeInfo, com.sforce.soap.metadata.FilterOperation.class));
      }
    }

    /**
     * element : snapshot of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo snapshot__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","snapshot","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean snapshot__is_set = false;

    private java.lang.String snapshot;

    public java.lang.String getSnapshot() {
      return snapshot;
    }

    public void setSnapshot(java.lang.String snapshot) {
      this.snapshot = snapshot;
      snapshot__is_set = true;
    }

    protected void setSnapshot(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, snapshot__typeInfo)) {
        setSnapshot(__typeMapper.readString(__in, snapshot__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : value of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo value__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","value","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean value__is_set = false;

    private java.lang.String value;

    public java.lang.String getValue() {
      return value;
    }

    public void setValue(java.lang.String value) {
      this.value = value;
      value__is_set = true;
    }

    protected void setValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, value__typeInfo)) {
        setValue(__typeMapper.readString(__in, value__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, column__typeInfo, column, column__is_set);
       __typeMapper.writeBoolean(__out, columnToColumn__typeInfo, columnToColumn, columnToColumn__is_set);
       __typeMapper.writeObject(__out, operator__typeInfo, operator, operator__is_set);
       __typeMapper.writeString(__out, snapshot__typeInfo, snapshot, snapshot__is_set);
       __typeMapper.writeString(__out, value__typeInfo, value, value__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setColumn(__in, __typeMapper);
        setColumnToColumn(__in, __typeMapper);
        setOperator(__in, __typeMapper);
        setSnapshot(__in, __typeMapper);
        setValue(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ReportFilterItem ");
      sb.append(" column='").append(com.sforce.ws.util.Verbose.toString(column)).append("'\n");
      sb.append(" columnToColumn='").append(com.sforce.ws.util.Verbose.toString(columnToColumn)).append("'\n");
      sb.append(" operator='").append(com.sforce.ws.util.Verbose.toString(operator)).append("'\n");
      sb.append(" snapshot='").append(com.sforce.ws.util.Verbose.toString(snapshot)).append("'\n");
      sb.append(" value='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
