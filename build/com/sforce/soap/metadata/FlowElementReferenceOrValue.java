package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlowElementReferenceOrValue implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FlowElementReferenceOrValue() {}

    /**
     * element : booleanValue of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: java.lang.Boolean
     */
    private static final com.sforce.ws.bind.TypeInfo booleanValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","booleanValue","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean booleanValue__is_set = false;

    private java.lang.Boolean booleanValue;

    public java.lang.Boolean getBooleanValue() {
      return booleanValue;
    }

    public void setBooleanValue(java.lang.Boolean booleanValue) {
      this.booleanValue = booleanValue;
      booleanValue__is_set = true;
    }

    protected void setBooleanValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, booleanValue__typeInfo)) {
        setBooleanValue((java.lang.Boolean)__typeMapper.readObject(__in, booleanValue__typeInfo, java.lang.Boolean.class));
      }
    }

    /**
     * element : dateTimeValue of type {http://www.w3.org/2001/XMLSchema}dateTime
     * java type: java.util.Calendar
     */
    private static final com.sforce.ws.bind.TypeInfo dateTimeValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","dateTimeValue","http://www.w3.org/2001/XMLSchema","dateTime",0,1,true);

    private boolean dateTimeValue__is_set = false;

    private java.util.Calendar dateTimeValue;

    public java.util.Calendar getDateTimeValue() {
      return dateTimeValue;
    }

    public void setDateTimeValue(java.util.Calendar dateTimeValue) {
      this.dateTimeValue = dateTimeValue;
      dateTimeValue__is_set = true;
    }

    protected void setDateTimeValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, dateTimeValue__typeInfo)) {
        setDateTimeValue((java.util.Calendar)__typeMapper.readObject(__in, dateTimeValue__typeInfo, java.util.Calendar.class));
      }
    }

    /**
     * element : dateValue of type {http://www.w3.org/2001/XMLSchema}date
     * java type: java.util.Calendar
     */
    private static final com.sforce.ws.bind.TypeInfo dateValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","dateValue","http://www.w3.org/2001/XMLSchema","date",0,1,true);

    private boolean dateValue__is_set = false;

    private java.util.Calendar dateValue;

    public java.util.Calendar getDateValue() {
      return dateValue;
    }

    public void setDateValue(java.util.Calendar dateValue) {
      this.dateValue = dateValue;
      dateValue__is_set = true;
    }

    protected void setDateValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, dateValue__typeInfo)) {
        setDateValue((java.util.Calendar)__typeMapper.readObject(__in, dateValue__typeInfo, java.util.Calendar.class));
      }
    }

    /**
     * element : elementReference of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo elementReference__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","elementReference","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean elementReference__is_set = false;

    private java.lang.String elementReference;

    public java.lang.String getElementReference() {
      return elementReference;
    }

    public void setElementReference(java.lang.String elementReference) {
      this.elementReference = elementReference;
      elementReference__is_set = true;
    }

    protected void setElementReference(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, elementReference__typeInfo)) {
        setElementReference(__typeMapper.readString(__in, elementReference__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : numberValue of type {http://www.w3.org/2001/XMLSchema}double
     * java type: java.lang.Double
     */
    private static final com.sforce.ws.bind.TypeInfo numberValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","numberValue","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean numberValue__is_set = false;

    private java.lang.Double numberValue;

    public java.lang.Double getNumberValue() {
      return numberValue;
    }

    public void setNumberValue(java.lang.Double numberValue) {
      this.numberValue = numberValue;
      numberValue__is_set = true;
    }

    protected void setNumberValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, numberValue__typeInfo)) {
        setNumberValue((java.lang.Double)__typeMapper.readObject(__in, numberValue__typeInfo, java.lang.Double.class));
      }
    }

    /**
     * element : stringValue of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo stringValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","stringValue","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean stringValue__is_set = false;

    private java.lang.String stringValue;

    public java.lang.String getStringValue() {
      return stringValue;
    }

    public void setStringValue(java.lang.String stringValue) {
      this.stringValue = stringValue;
      stringValue__is_set = true;
    }

    protected void setStringValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, stringValue__typeInfo)) {
        setStringValue(__typeMapper.readString(__in, stringValue__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, booleanValue__typeInfo, booleanValue, booleanValue__is_set);
       __typeMapper.writeObject(__out, dateTimeValue__typeInfo, dateTimeValue, dateTimeValue__is_set);
       __typeMapper.writeObject(__out, dateValue__typeInfo, dateValue, dateValue__is_set);
       __typeMapper.writeString(__out, elementReference__typeInfo, elementReference, elementReference__is_set);
       __typeMapper.writeObject(__out, numberValue__typeInfo, numberValue, numberValue__is_set);
       __typeMapper.writeString(__out, stringValue__typeInfo, stringValue, stringValue__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setBooleanValue(__in, __typeMapper);
        setDateTimeValue(__in, __typeMapper);
        setDateValue(__in, __typeMapper);
        setElementReference(__in, __typeMapper);
        setNumberValue(__in, __typeMapper);
        setStringValue(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowElementReferenceOrValue ");
      sb.append(" booleanValue='").append(com.sforce.ws.util.Verbose.toString(booleanValue)).append("'\n");
      sb.append(" dateTimeValue='").append(com.sforce.ws.util.Verbose.toString(dateTimeValue)).append("'\n");
      sb.append(" dateValue='").append(com.sforce.ws.util.Verbose.toString(dateValue)).append("'\n");
      sb.append(" elementReference='").append(com.sforce.ws.util.Verbose.toString(elementReference)).append("'\n");
      sb.append(" numberValue='").append(com.sforce.ws.util.Verbose.toString(numberValue)).append("'\n");
      sb.append(" stringValue='").append(com.sforce.ws.util.Verbose.toString(stringValue)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
