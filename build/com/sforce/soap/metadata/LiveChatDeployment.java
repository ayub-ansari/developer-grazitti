package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class LiveChatDeployment extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public LiveChatDeployment() {}

    /**
     * element : brandingImage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo brandingImage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","brandingImage","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean brandingImage__is_set = false;

    private java.lang.String brandingImage;

    public java.lang.String getBrandingImage() {
      return brandingImage;
    }

    public void setBrandingImage(java.lang.String brandingImage) {
      this.brandingImage = brandingImage;
      brandingImage__is_set = true;
    }

    protected void setBrandingImage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, brandingImage__typeInfo)) {
        setBrandingImage(__typeMapper.readString(__in, brandingImage__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : displayQueuePosition of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo displayQueuePosition__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","displayQueuePosition","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean displayQueuePosition__is_set = false;

    private boolean displayQueuePosition;

    public boolean getDisplayQueuePosition() {
      return displayQueuePosition;
    }

    public boolean isDisplayQueuePosition() {
      return displayQueuePosition;
    }

    public void setDisplayQueuePosition(boolean displayQueuePosition) {
      this.displayQueuePosition = displayQueuePosition;
      displayQueuePosition__is_set = true;
    }

    protected void setDisplayQueuePosition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, displayQueuePosition__typeInfo)) {
        setDisplayQueuePosition(__typeMapper.readBoolean(__in, displayQueuePosition__typeInfo, boolean.class));
      }
    }

    /**
     * element : domainWhiteList of type {http://soap.sforce.com/2006/04/metadata}LiveChatDeploymentDomainWhitelist
     * java type: com.sforce.soap.metadata.LiveChatDeploymentDomainWhitelist
     */
    private static final com.sforce.ws.bind.TypeInfo domainWhiteList__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","domainWhiteList","http://soap.sforce.com/2006/04/metadata","LiveChatDeploymentDomainWhitelist",0,1,true);

    private boolean domainWhiteList__is_set = false;

    private com.sforce.soap.metadata.LiveChatDeploymentDomainWhitelist domainWhiteList;

    public com.sforce.soap.metadata.LiveChatDeploymentDomainWhitelist getDomainWhiteList() {
      return domainWhiteList;
    }

    public void setDomainWhiteList(com.sforce.soap.metadata.LiveChatDeploymentDomainWhitelist domainWhiteList) {
      this.domainWhiteList = domainWhiteList;
      domainWhiteList__is_set = true;
    }

    protected void setDomainWhiteList(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, domainWhiteList__typeInfo)) {
        setDomainWhiteList((com.sforce.soap.metadata.LiveChatDeploymentDomainWhitelist)__typeMapper.readObject(__in, domainWhiteList__typeInfo, com.sforce.soap.metadata.LiveChatDeploymentDomainWhitelist.class));
      }
    }

    /**
     * element : enablePrechatApi of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enablePrechatApi__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enablePrechatApi","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enablePrechatApi__is_set = false;

    private boolean enablePrechatApi;

    public boolean getEnablePrechatApi() {
      return enablePrechatApi;
    }

    public boolean isEnablePrechatApi() {
      return enablePrechatApi;
    }

    public void setEnablePrechatApi(boolean enablePrechatApi) {
      this.enablePrechatApi = enablePrechatApi;
      enablePrechatApi__is_set = true;
    }

    protected void setEnablePrechatApi(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enablePrechatApi__typeInfo)) {
        setEnablePrechatApi(__typeMapper.readBoolean(__in, enablePrechatApi__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableTranscriptSave of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableTranscriptSave__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableTranscriptSave","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableTranscriptSave__is_set = false;

    private boolean enableTranscriptSave;

    public boolean getEnableTranscriptSave() {
      return enableTranscriptSave;
    }

    public boolean isEnableTranscriptSave() {
      return enableTranscriptSave;
    }

    public void setEnableTranscriptSave(boolean enableTranscriptSave) {
      this.enableTranscriptSave = enableTranscriptSave;
      enableTranscriptSave__is_set = true;
    }

    protected void setEnableTranscriptSave(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableTranscriptSave__typeInfo)) {
        setEnableTranscriptSave(__typeMapper.readBoolean(__in, enableTranscriptSave__typeInfo, boolean.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : mobileBrandingImage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo mobileBrandingImage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","mobileBrandingImage","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean mobileBrandingImage__is_set = false;

    private java.lang.String mobileBrandingImage;

    public java.lang.String getMobileBrandingImage() {
      return mobileBrandingImage;
    }

    public void setMobileBrandingImage(java.lang.String mobileBrandingImage) {
      this.mobileBrandingImage = mobileBrandingImage;
      mobileBrandingImage__is_set = true;
    }

    protected void setMobileBrandingImage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, mobileBrandingImage__typeInfo)) {
        setMobileBrandingImage(__typeMapper.readString(__in, mobileBrandingImage__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : site of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo site__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","site","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean site__is_set = false;

    private java.lang.String site;

    public java.lang.String getSite() {
      return site;
    }

    public void setSite(java.lang.String site) {
      this.site = site;
      site__is_set = true;
    }

    protected void setSite(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, site__typeInfo)) {
        setSite(__typeMapper.readString(__in, site__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : windowTitle of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo windowTitle__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","windowTitle","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean windowTitle__is_set = false;

    private java.lang.String windowTitle;

    public java.lang.String getWindowTitle() {
      return windowTitle;
    }

    public void setWindowTitle(java.lang.String windowTitle) {
      this.windowTitle = windowTitle;
      windowTitle__is_set = true;
    }

    protected void setWindowTitle(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, windowTitle__typeInfo)) {
        setWindowTitle(__typeMapper.readString(__in, windowTitle__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "LiveChatDeployment");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, brandingImage__typeInfo, brandingImage, brandingImage__is_set);
       __typeMapper.writeBoolean(__out, displayQueuePosition__typeInfo, displayQueuePosition, displayQueuePosition__is_set);
       __typeMapper.writeObject(__out, domainWhiteList__typeInfo, domainWhiteList, domainWhiteList__is_set);
       __typeMapper.writeBoolean(__out, enablePrechatApi__typeInfo, enablePrechatApi, enablePrechatApi__is_set);
       __typeMapper.writeBoolean(__out, enableTranscriptSave__typeInfo, enableTranscriptSave, enableTranscriptSave__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeString(__out, mobileBrandingImage__typeInfo, mobileBrandingImage, mobileBrandingImage__is_set);
       __typeMapper.writeString(__out, site__typeInfo, site, site__is_set);
       __typeMapper.writeString(__out, windowTitle__typeInfo, windowTitle, windowTitle__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setBrandingImage(__in, __typeMapper);
        setDisplayQueuePosition(__in, __typeMapper);
        setDomainWhiteList(__in, __typeMapper);
        setEnablePrechatApi(__in, __typeMapper);
        setEnableTranscriptSave(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setMobileBrandingImage(__in, __typeMapper);
        setSite(__in, __typeMapper);
        setWindowTitle(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LiveChatDeployment ");
      sb.append(super.toString());sb.append(" brandingImage='").append(com.sforce.ws.util.Verbose.toString(brandingImage)).append("'\n");
      sb.append(" displayQueuePosition='").append(com.sforce.ws.util.Verbose.toString(displayQueuePosition)).append("'\n");
      sb.append(" domainWhiteList='").append(com.sforce.ws.util.Verbose.toString(domainWhiteList)).append("'\n");
      sb.append(" enablePrechatApi='").append(com.sforce.ws.util.Verbose.toString(enablePrechatApi)).append("'\n");
      sb.append(" enableTranscriptSave='").append(com.sforce.ws.util.Verbose.toString(enableTranscriptSave)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" mobileBrandingImage='").append(com.sforce.ws.util.Verbose.toString(mobileBrandingImage)).append("'\n");
      sb.append(" site='").append(com.sforce.ws.util.Verbose.toString(site)).append("'\n");
      sb.append(" windowTitle='").append(com.sforce.ws.util.Verbose.toString(windowTitle)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
