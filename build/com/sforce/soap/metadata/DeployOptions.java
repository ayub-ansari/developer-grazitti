package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DeployOptions implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DeployOptions() {}

    /**
     * element : allowMissingFiles of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowMissingFiles__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowMissingFiles","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean allowMissingFiles__is_set = false;

    private boolean allowMissingFiles;

    public boolean getAllowMissingFiles() {
      return allowMissingFiles;
    }

    public boolean isAllowMissingFiles() {
      return allowMissingFiles;
    }

    public void setAllowMissingFiles(boolean allowMissingFiles) {
      this.allowMissingFiles = allowMissingFiles;
      allowMissingFiles__is_set = true;
    }

    protected void setAllowMissingFiles(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, allowMissingFiles__typeInfo)) {
        setAllowMissingFiles(__typeMapper.readBoolean(__in, allowMissingFiles__typeInfo, boolean.class));
      }
    }

    /**
     * element : autoUpdatePackage of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo autoUpdatePackage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","autoUpdatePackage","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean autoUpdatePackage__is_set = false;

    private boolean autoUpdatePackage;

    public boolean getAutoUpdatePackage() {
      return autoUpdatePackage;
    }

    public boolean isAutoUpdatePackage() {
      return autoUpdatePackage;
    }

    public void setAutoUpdatePackage(boolean autoUpdatePackage) {
      this.autoUpdatePackage = autoUpdatePackage;
      autoUpdatePackage__is_set = true;
    }

    protected void setAutoUpdatePackage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, autoUpdatePackage__typeInfo)) {
        setAutoUpdatePackage(__typeMapper.readBoolean(__in, autoUpdatePackage__typeInfo, boolean.class));
      }
    }

    /**
     * element : checkOnly of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo checkOnly__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","checkOnly","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean checkOnly__is_set = false;

    private boolean checkOnly;

    public boolean getCheckOnly() {
      return checkOnly;
    }

    public boolean isCheckOnly() {
      return checkOnly;
    }

    public void setCheckOnly(boolean checkOnly) {
      this.checkOnly = checkOnly;
      checkOnly__is_set = true;
    }

    protected void setCheckOnly(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, checkOnly__typeInfo)) {
        setCheckOnly(__typeMapper.readBoolean(__in, checkOnly__typeInfo, boolean.class));
      }
    }

    /**
     * element : ignoreWarnings of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo ignoreWarnings__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","ignoreWarnings","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean ignoreWarnings__is_set = false;

    private boolean ignoreWarnings;

    public boolean getIgnoreWarnings() {
      return ignoreWarnings;
    }

    public boolean isIgnoreWarnings() {
      return ignoreWarnings;
    }

    public void setIgnoreWarnings(boolean ignoreWarnings) {
      this.ignoreWarnings = ignoreWarnings;
      ignoreWarnings__is_set = true;
    }

    protected void setIgnoreWarnings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, ignoreWarnings__typeInfo)) {
        setIgnoreWarnings(__typeMapper.readBoolean(__in, ignoreWarnings__typeInfo, boolean.class));
      }
    }

    /**
     * element : performRetrieve of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo performRetrieve__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","performRetrieve","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean performRetrieve__is_set = false;

    private boolean performRetrieve;

    public boolean getPerformRetrieve() {
      return performRetrieve;
    }

    public boolean isPerformRetrieve() {
      return performRetrieve;
    }

    public void setPerformRetrieve(boolean performRetrieve) {
      this.performRetrieve = performRetrieve;
      performRetrieve__is_set = true;
    }

    protected void setPerformRetrieve(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, performRetrieve__typeInfo)) {
        setPerformRetrieve(__typeMapper.readBoolean(__in, performRetrieve__typeInfo, boolean.class));
      }
    }

    /**
     * element : purgeOnDelete of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo purgeOnDelete__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","purgeOnDelete","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean purgeOnDelete__is_set = false;

    private boolean purgeOnDelete;

    public boolean getPurgeOnDelete() {
      return purgeOnDelete;
    }

    public boolean isPurgeOnDelete() {
      return purgeOnDelete;
    }

    public void setPurgeOnDelete(boolean purgeOnDelete) {
      this.purgeOnDelete = purgeOnDelete;
      purgeOnDelete__is_set = true;
    }

    protected void setPurgeOnDelete(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, purgeOnDelete__typeInfo)) {
        setPurgeOnDelete(__typeMapper.readBoolean(__in, purgeOnDelete__typeInfo, boolean.class));
      }
    }

    /**
     * element : rollbackOnError of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo rollbackOnError__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","rollbackOnError","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean rollbackOnError__is_set = false;

    private boolean rollbackOnError;

    public boolean getRollbackOnError() {
      return rollbackOnError;
    }

    public boolean isRollbackOnError() {
      return rollbackOnError;
    }

    public void setRollbackOnError(boolean rollbackOnError) {
      this.rollbackOnError = rollbackOnError;
      rollbackOnError__is_set = true;
    }

    protected void setRollbackOnError(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, rollbackOnError__typeInfo)) {
        setRollbackOnError(__typeMapper.readBoolean(__in, rollbackOnError__typeInfo, boolean.class));
      }
    }

    /**
     * element : runTests of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo runTests__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","runTests","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean runTests__is_set = false;

    private java.lang.String[] runTests = new java.lang.String[0];

    public java.lang.String[] getRunTests() {
      return runTests;
    }

    public void setRunTests(java.lang.String[] runTests) {
      this.runTests = runTests;
      runTests__is_set = true;
    }

    protected void setRunTests(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, runTests__typeInfo)) {
        setRunTests((java.lang.String[])__typeMapper.readObject(__in, runTests__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : singlePackage of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo singlePackage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","singlePackage","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean singlePackage__is_set = false;

    private boolean singlePackage;

    public boolean getSinglePackage() {
      return singlePackage;
    }

    public boolean isSinglePackage() {
      return singlePackage;
    }

    public void setSinglePackage(boolean singlePackage) {
      this.singlePackage = singlePackage;
      singlePackage__is_set = true;
    }

    protected void setSinglePackage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, singlePackage__typeInfo)) {
        setSinglePackage(__typeMapper.readBoolean(__in, singlePackage__typeInfo, boolean.class));
      }
    }

    /**
     * element : testLevel of type {http://soap.sforce.com/2006/04/metadata}TestLevel
     * java type: com.sforce.soap.metadata.TestLevel
     */
    private static final com.sforce.ws.bind.TypeInfo testLevel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","testLevel","http://soap.sforce.com/2006/04/metadata","TestLevel",1,1,true);

    private boolean testLevel__is_set = false;

    private com.sforce.soap.metadata.TestLevel testLevel;

    public com.sforce.soap.metadata.TestLevel getTestLevel() {
      return testLevel;
    }

    public void setTestLevel(com.sforce.soap.metadata.TestLevel testLevel) {
      this.testLevel = testLevel;
      testLevel__is_set = true;
    }

    protected void setTestLevel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, testLevel__typeInfo)) {
        setTestLevel((com.sforce.soap.metadata.TestLevel)__typeMapper.readObject(__in, testLevel__typeInfo, com.sforce.soap.metadata.TestLevel.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, allowMissingFiles__typeInfo, allowMissingFiles, allowMissingFiles__is_set);
       __typeMapper.writeBoolean(__out, autoUpdatePackage__typeInfo, autoUpdatePackage, autoUpdatePackage__is_set);
       __typeMapper.writeBoolean(__out, checkOnly__typeInfo, checkOnly, checkOnly__is_set);
       __typeMapper.writeBoolean(__out, ignoreWarnings__typeInfo, ignoreWarnings, ignoreWarnings__is_set);
       __typeMapper.writeBoolean(__out, performRetrieve__typeInfo, performRetrieve, performRetrieve__is_set);
       __typeMapper.writeBoolean(__out, purgeOnDelete__typeInfo, purgeOnDelete, purgeOnDelete__is_set);
       __typeMapper.writeBoolean(__out, rollbackOnError__typeInfo, rollbackOnError, rollbackOnError__is_set);
       __typeMapper.writeObject(__out, runTests__typeInfo, runTests, runTests__is_set);
       __typeMapper.writeBoolean(__out, singlePackage__typeInfo, singlePackage, singlePackage__is_set);
       __typeMapper.writeObject(__out, testLevel__typeInfo, testLevel, testLevel__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAllowMissingFiles(__in, __typeMapper);
        setAutoUpdatePackage(__in, __typeMapper);
        setCheckOnly(__in, __typeMapper);
        setIgnoreWarnings(__in, __typeMapper);
        setPerformRetrieve(__in, __typeMapper);
        setPurgeOnDelete(__in, __typeMapper);
        setRollbackOnError(__in, __typeMapper);
        setRunTests(__in, __typeMapper);
        setSinglePackage(__in, __typeMapper);
        setTestLevel(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DeployOptions ");
      sb.append(" allowMissingFiles='").append(com.sforce.ws.util.Verbose.toString(allowMissingFiles)).append("'\n");
      sb.append(" autoUpdatePackage='").append(com.sforce.ws.util.Verbose.toString(autoUpdatePackage)).append("'\n");
      sb.append(" checkOnly='").append(com.sforce.ws.util.Verbose.toString(checkOnly)).append("'\n");
      sb.append(" ignoreWarnings='").append(com.sforce.ws.util.Verbose.toString(ignoreWarnings)).append("'\n");
      sb.append(" performRetrieve='").append(com.sforce.ws.util.Verbose.toString(performRetrieve)).append("'\n");
      sb.append(" purgeOnDelete='").append(com.sforce.ws.util.Verbose.toString(purgeOnDelete)).append("'\n");
      sb.append(" rollbackOnError='").append(com.sforce.ws.util.Verbose.toString(rollbackOnError)).append("'\n");
      sb.append(" runTests='").append(com.sforce.ws.util.Verbose.toString(runTests)).append("'\n");
      sb.append(" singlePackage='").append(com.sforce.ws.util.Verbose.toString(singlePackage)).append("'\n");
      sb.append(" testLevel='").append(com.sforce.ws.util.Verbose.toString(testLevel)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
