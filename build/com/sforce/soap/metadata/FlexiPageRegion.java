package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlexiPageRegion implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FlexiPageRegion() {}

    /**
     * element : appendable of type {http://soap.sforce.com/2006/04/metadata}RegionFlagStatus
     * java type: com.sforce.soap.metadata.RegionFlagStatus
     */
    private static final com.sforce.ws.bind.TypeInfo appendable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","appendable","http://soap.sforce.com/2006/04/metadata","RegionFlagStatus",0,1,true);

    private boolean appendable__is_set = false;

    private com.sforce.soap.metadata.RegionFlagStatus appendable;

    public com.sforce.soap.metadata.RegionFlagStatus getAppendable() {
      return appendable;
    }

    public void setAppendable(com.sforce.soap.metadata.RegionFlagStatus appendable) {
      this.appendable = appendable;
      appendable__is_set = true;
    }

    protected void setAppendable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, appendable__typeInfo)) {
        setAppendable((com.sforce.soap.metadata.RegionFlagStatus)__typeMapper.readObject(__in, appendable__typeInfo, com.sforce.soap.metadata.RegionFlagStatus.class));
      }
    }

    /**
     * element : componentInstances of type {http://soap.sforce.com/2006/04/metadata}ComponentInstance
     * java type: com.sforce.soap.metadata.ComponentInstance[]
     */
    private static final com.sforce.ws.bind.TypeInfo componentInstances__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","componentInstances","http://soap.sforce.com/2006/04/metadata","ComponentInstance",0,-1,true);

    private boolean componentInstances__is_set = false;

    private com.sforce.soap.metadata.ComponentInstance[] componentInstances = new com.sforce.soap.metadata.ComponentInstance[0];

    public com.sforce.soap.metadata.ComponentInstance[] getComponentInstances() {
      return componentInstances;
    }

    public void setComponentInstances(com.sforce.soap.metadata.ComponentInstance[] componentInstances) {
      this.componentInstances = componentInstances;
      componentInstances__is_set = true;
    }

    protected void setComponentInstances(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, componentInstances__typeInfo)) {
        setComponentInstances((com.sforce.soap.metadata.ComponentInstance[])__typeMapper.readObject(__in, componentInstances__typeInfo, com.sforce.soap.metadata.ComponentInstance[].class));
      }
    }

    /**
     * element : mode of type {http://soap.sforce.com/2006/04/metadata}FlexiPageRegionMode
     * java type: com.sforce.soap.metadata.FlexiPageRegionMode
     */
    private static final com.sforce.ws.bind.TypeInfo mode__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","mode","http://soap.sforce.com/2006/04/metadata","FlexiPageRegionMode",0,1,true);

    private boolean mode__is_set = false;

    private com.sforce.soap.metadata.FlexiPageRegionMode mode;

    public com.sforce.soap.metadata.FlexiPageRegionMode getMode() {
      return mode;
    }

    public void setMode(com.sforce.soap.metadata.FlexiPageRegionMode mode) {
      this.mode = mode;
      mode__is_set = true;
    }

    protected void setMode(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, mode__typeInfo)) {
        setMode((com.sforce.soap.metadata.FlexiPageRegionMode)__typeMapper.readObject(__in, mode__typeInfo, com.sforce.soap.metadata.FlexiPageRegionMode.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : prependable of type {http://soap.sforce.com/2006/04/metadata}RegionFlagStatus
     * java type: com.sforce.soap.metadata.RegionFlagStatus
     */
    private static final com.sforce.ws.bind.TypeInfo prependable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","prependable","http://soap.sforce.com/2006/04/metadata","RegionFlagStatus",0,1,true);

    private boolean prependable__is_set = false;

    private com.sforce.soap.metadata.RegionFlagStatus prependable;

    public com.sforce.soap.metadata.RegionFlagStatus getPrependable() {
      return prependable;
    }

    public void setPrependable(com.sforce.soap.metadata.RegionFlagStatus prependable) {
      this.prependable = prependable;
      prependable__is_set = true;
    }

    protected void setPrependable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, prependable__typeInfo)) {
        setPrependable((com.sforce.soap.metadata.RegionFlagStatus)__typeMapper.readObject(__in, prependable__typeInfo, com.sforce.soap.metadata.RegionFlagStatus.class));
      }
    }

    /**
     * element : replaceable of type {http://soap.sforce.com/2006/04/metadata}RegionFlagStatus
     * java type: com.sforce.soap.metadata.RegionFlagStatus
     */
    private static final com.sforce.ws.bind.TypeInfo replaceable__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","replaceable","http://soap.sforce.com/2006/04/metadata","RegionFlagStatus",0,1,true);

    private boolean replaceable__is_set = false;

    private com.sforce.soap.metadata.RegionFlagStatus replaceable;

    public com.sforce.soap.metadata.RegionFlagStatus getReplaceable() {
      return replaceable;
    }

    public void setReplaceable(com.sforce.soap.metadata.RegionFlagStatus replaceable) {
      this.replaceable = replaceable;
      replaceable__is_set = true;
    }

    protected void setReplaceable(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, replaceable__typeInfo)) {
        setReplaceable((com.sforce.soap.metadata.RegionFlagStatus)__typeMapper.readObject(__in, replaceable__typeInfo, com.sforce.soap.metadata.RegionFlagStatus.class));
      }
    }

    /**
     * element : type of type {http://soap.sforce.com/2006/04/metadata}FlexiPageRegionType
     * java type: com.sforce.soap.metadata.FlexiPageRegionType
     */
    private static final com.sforce.ws.bind.TypeInfo type__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","type","http://soap.sforce.com/2006/04/metadata","FlexiPageRegionType",1,1,true);

    private boolean type__is_set = false;

    private com.sforce.soap.metadata.FlexiPageRegionType type;

    public com.sforce.soap.metadata.FlexiPageRegionType getType() {
      return type;
    }

    public void setType(com.sforce.soap.metadata.FlexiPageRegionType type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, type__typeInfo)) {
        setType((com.sforce.soap.metadata.FlexiPageRegionType)__typeMapper.readObject(__in, type__typeInfo, com.sforce.soap.metadata.FlexiPageRegionType.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, appendable__typeInfo, appendable, appendable__is_set);
       __typeMapper.writeObject(__out, componentInstances__typeInfo, componentInstances, componentInstances__is_set);
       __typeMapper.writeObject(__out, mode__typeInfo, mode, mode__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeObject(__out, prependable__typeInfo, prependable, prependable__is_set);
       __typeMapper.writeObject(__out, replaceable__typeInfo, replaceable, replaceable__is_set);
       __typeMapper.writeObject(__out, type__typeInfo, type, type__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAppendable(__in, __typeMapper);
        setComponentInstances(__in, __typeMapper);
        setMode(__in, __typeMapper);
        setName(__in, __typeMapper);
        setPrependable(__in, __typeMapper);
        setReplaceable(__in, __typeMapper);
        setType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlexiPageRegion ");
      sb.append(" appendable='").append(com.sforce.ws.util.Verbose.toString(appendable)).append("'\n");
      sb.append(" componentInstances='").append(com.sforce.ws.util.Verbose.toString(componentInstances)).append("'\n");
      sb.append(" mode='").append(com.sforce.ws.util.Verbose.toString(mode)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" prependable='").append(com.sforce.ws.util.Verbose.toString(prependable)).append("'\n");
      sb.append(" replaceable='").append(com.sforce.ws.util.Verbose.toString(replaceable)).append("'\n");
      sb.append(" type='").append(com.sforce.ws.util.Verbose.toString(type)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
