package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class Branding implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public Branding() {}

    /**
     * element : loginFooterText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo loginFooterText__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","loginFooterText","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean loginFooterText__is_set = false;

    private java.lang.String loginFooterText;

    public java.lang.String getLoginFooterText() {
      return loginFooterText;
    }

    public void setLoginFooterText(java.lang.String loginFooterText) {
      this.loginFooterText = loginFooterText;
      loginFooterText__is_set = true;
    }

    protected void setLoginFooterText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, loginFooterText__typeInfo)) {
        setLoginFooterText(__typeMapper.readString(__in, loginFooterText__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : loginLogo of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo loginLogo__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","loginLogo","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean loginLogo__is_set = false;

    private java.lang.String loginLogo;

    public java.lang.String getLoginLogo() {
      return loginLogo;
    }

    public void setLoginLogo(java.lang.String loginLogo) {
      this.loginLogo = loginLogo;
      loginLogo__is_set = true;
    }

    protected void setLoginLogo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, loginLogo__typeInfo)) {
        setLoginLogo(__typeMapper.readString(__in, loginLogo__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : pageFooter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pageFooter__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","pageFooter","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean pageFooter__is_set = false;

    private java.lang.String pageFooter;

    public java.lang.String getPageFooter() {
      return pageFooter;
    }

    public void setPageFooter(java.lang.String pageFooter) {
      this.pageFooter = pageFooter;
      pageFooter__is_set = true;
    }

    protected void setPageFooter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, pageFooter__typeInfo)) {
        setPageFooter(__typeMapper.readString(__in, pageFooter__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : pageHeader of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pageHeader__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","pageHeader","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean pageHeader__is_set = false;

    private java.lang.String pageHeader;

    public java.lang.String getPageHeader() {
      return pageHeader;
    }

    public void setPageHeader(java.lang.String pageHeader) {
      this.pageHeader = pageHeader;
      pageHeader__is_set = true;
    }

    protected void setPageHeader(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, pageHeader__typeInfo)) {
        setPageHeader(__typeMapper.readString(__in, pageHeader__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : primaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo primaryColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","primaryColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean primaryColor__is_set = false;

    private java.lang.String primaryColor;

    public java.lang.String getPrimaryColor() {
      return primaryColor;
    }

    public void setPrimaryColor(java.lang.String primaryColor) {
      this.primaryColor = primaryColor;
      primaryColor__is_set = true;
    }

    protected void setPrimaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, primaryColor__typeInfo)) {
        setPrimaryColor(__typeMapper.readString(__in, primaryColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : primaryComplementColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo primaryComplementColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","primaryComplementColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean primaryComplementColor__is_set = false;

    private java.lang.String primaryComplementColor;

    public java.lang.String getPrimaryComplementColor() {
      return primaryComplementColor;
    }

    public void setPrimaryComplementColor(java.lang.String primaryComplementColor) {
      this.primaryComplementColor = primaryComplementColor;
      primaryComplementColor__is_set = true;
    }

    protected void setPrimaryComplementColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, primaryComplementColor__typeInfo)) {
        setPrimaryComplementColor(__typeMapper.readString(__in, primaryComplementColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : quaternaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo quaternaryColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","quaternaryColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean quaternaryColor__is_set = false;

    private java.lang.String quaternaryColor;

    public java.lang.String getQuaternaryColor() {
      return quaternaryColor;
    }

    public void setQuaternaryColor(java.lang.String quaternaryColor) {
      this.quaternaryColor = quaternaryColor;
      quaternaryColor__is_set = true;
    }

    protected void setQuaternaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, quaternaryColor__typeInfo)) {
        setQuaternaryColor(__typeMapper.readString(__in, quaternaryColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : quaternaryComplementColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo quaternaryComplementColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","quaternaryComplementColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean quaternaryComplementColor__is_set = false;

    private java.lang.String quaternaryComplementColor;

    public java.lang.String getQuaternaryComplementColor() {
      return quaternaryComplementColor;
    }

    public void setQuaternaryComplementColor(java.lang.String quaternaryComplementColor) {
      this.quaternaryComplementColor = quaternaryComplementColor;
      quaternaryComplementColor__is_set = true;
    }

    protected void setQuaternaryComplementColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, quaternaryComplementColor__typeInfo)) {
        setQuaternaryComplementColor(__typeMapper.readString(__in, quaternaryComplementColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : secondaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo secondaryColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","secondaryColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean secondaryColor__is_set = false;

    private java.lang.String secondaryColor;

    public java.lang.String getSecondaryColor() {
      return secondaryColor;
    }

    public void setSecondaryColor(java.lang.String secondaryColor) {
      this.secondaryColor = secondaryColor;
      secondaryColor__is_set = true;
    }

    protected void setSecondaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, secondaryColor__typeInfo)) {
        setSecondaryColor(__typeMapper.readString(__in, secondaryColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : tertiaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo tertiaryColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","tertiaryColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean tertiaryColor__is_set = false;

    private java.lang.String tertiaryColor;

    public java.lang.String getTertiaryColor() {
      return tertiaryColor;
    }

    public void setTertiaryColor(java.lang.String tertiaryColor) {
      this.tertiaryColor = tertiaryColor;
      tertiaryColor__is_set = true;
    }

    protected void setTertiaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, tertiaryColor__typeInfo)) {
        setTertiaryColor(__typeMapper.readString(__in, tertiaryColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : tertiaryComplementColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo tertiaryComplementColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","tertiaryComplementColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean tertiaryComplementColor__is_set = false;

    private java.lang.String tertiaryComplementColor;

    public java.lang.String getTertiaryComplementColor() {
      return tertiaryComplementColor;
    }

    public void setTertiaryComplementColor(java.lang.String tertiaryComplementColor) {
      this.tertiaryComplementColor = tertiaryComplementColor;
      tertiaryComplementColor__is_set = true;
    }

    protected void setTertiaryComplementColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, tertiaryComplementColor__typeInfo)) {
        setTertiaryComplementColor(__typeMapper.readString(__in, tertiaryComplementColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : zeronaryColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo zeronaryColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","zeronaryColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean zeronaryColor__is_set = false;

    private java.lang.String zeronaryColor;

    public java.lang.String getZeronaryColor() {
      return zeronaryColor;
    }

    public void setZeronaryColor(java.lang.String zeronaryColor) {
      this.zeronaryColor = zeronaryColor;
      zeronaryColor__is_set = true;
    }

    protected void setZeronaryColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, zeronaryColor__typeInfo)) {
        setZeronaryColor(__typeMapper.readString(__in, zeronaryColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : zeronaryComplementColor of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo zeronaryComplementColor__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","zeronaryComplementColor","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean zeronaryComplementColor__is_set = false;

    private java.lang.String zeronaryComplementColor;

    public java.lang.String getZeronaryComplementColor() {
      return zeronaryComplementColor;
    }

    public void setZeronaryComplementColor(java.lang.String zeronaryComplementColor) {
      this.zeronaryComplementColor = zeronaryComplementColor;
      zeronaryComplementColor__is_set = true;
    }

    protected void setZeronaryComplementColor(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, zeronaryComplementColor__typeInfo)) {
        setZeronaryComplementColor(__typeMapper.readString(__in, zeronaryComplementColor__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, loginFooterText__typeInfo, loginFooterText, loginFooterText__is_set);
       __typeMapper.writeString(__out, loginLogo__typeInfo, loginLogo, loginLogo__is_set);
       __typeMapper.writeString(__out, pageFooter__typeInfo, pageFooter, pageFooter__is_set);
       __typeMapper.writeString(__out, pageHeader__typeInfo, pageHeader, pageHeader__is_set);
       __typeMapper.writeString(__out, primaryColor__typeInfo, primaryColor, primaryColor__is_set);
       __typeMapper.writeString(__out, primaryComplementColor__typeInfo, primaryComplementColor, primaryComplementColor__is_set);
       __typeMapper.writeString(__out, quaternaryColor__typeInfo, quaternaryColor, quaternaryColor__is_set);
       __typeMapper.writeString(__out, quaternaryComplementColor__typeInfo, quaternaryComplementColor, quaternaryComplementColor__is_set);
       __typeMapper.writeString(__out, secondaryColor__typeInfo, secondaryColor, secondaryColor__is_set);
       __typeMapper.writeString(__out, tertiaryColor__typeInfo, tertiaryColor, tertiaryColor__is_set);
       __typeMapper.writeString(__out, tertiaryComplementColor__typeInfo, tertiaryComplementColor, tertiaryComplementColor__is_set);
       __typeMapper.writeString(__out, zeronaryColor__typeInfo, zeronaryColor, zeronaryColor__is_set);
       __typeMapper.writeString(__out, zeronaryComplementColor__typeInfo, zeronaryComplementColor, zeronaryComplementColor__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setLoginFooterText(__in, __typeMapper);
        setLoginLogo(__in, __typeMapper);
        setPageFooter(__in, __typeMapper);
        setPageHeader(__in, __typeMapper);
        setPrimaryColor(__in, __typeMapper);
        setPrimaryComplementColor(__in, __typeMapper);
        setQuaternaryColor(__in, __typeMapper);
        setQuaternaryComplementColor(__in, __typeMapper);
        setSecondaryColor(__in, __typeMapper);
        setTertiaryColor(__in, __typeMapper);
        setTertiaryComplementColor(__in, __typeMapper);
        setZeronaryColor(__in, __typeMapper);
        setZeronaryComplementColor(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Branding ");
      sb.append(" loginFooterText='").append(com.sforce.ws.util.Verbose.toString(loginFooterText)).append("'\n");
      sb.append(" loginLogo='").append(com.sforce.ws.util.Verbose.toString(loginLogo)).append("'\n");
      sb.append(" pageFooter='").append(com.sforce.ws.util.Verbose.toString(pageFooter)).append("'\n");
      sb.append(" pageHeader='").append(com.sforce.ws.util.Verbose.toString(pageHeader)).append("'\n");
      sb.append(" primaryColor='").append(com.sforce.ws.util.Verbose.toString(primaryColor)).append("'\n");
      sb.append(" primaryComplementColor='").append(com.sforce.ws.util.Verbose.toString(primaryComplementColor)).append("'\n");
      sb.append(" quaternaryColor='").append(com.sforce.ws.util.Verbose.toString(quaternaryColor)).append("'\n");
      sb.append(" quaternaryComplementColor='").append(com.sforce.ws.util.Verbose.toString(quaternaryComplementColor)).append("'\n");
      sb.append(" secondaryColor='").append(com.sforce.ws.util.Verbose.toString(secondaryColor)).append("'\n");
      sb.append(" tertiaryColor='").append(com.sforce.ws.util.Verbose.toString(tertiaryColor)).append("'\n");
      sb.append(" tertiaryComplementColor='").append(com.sforce.ws.util.Verbose.toString(tertiaryComplementColor)).append("'\n");
      sb.append(" zeronaryColor='").append(com.sforce.ws.util.Verbose.toString(zeronaryColor)).append("'\n");
      sb.append(" zeronaryComplementColor='").append(com.sforce.ws.util.Verbose.toString(zeronaryComplementColor)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
