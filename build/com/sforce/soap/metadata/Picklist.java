package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class Picklist implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public Picklist() {}

    /**
     * element : controllingField of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo controllingField__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","controllingField","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean controllingField__is_set = false;

    private java.lang.String controllingField;

    public java.lang.String getControllingField() {
      return controllingField;
    }

    public void setControllingField(java.lang.String controllingField) {
      this.controllingField = controllingField;
      controllingField__is_set = true;
    }

    protected void setControllingField(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, controllingField__typeInfo)) {
        setControllingField(__typeMapper.readString(__in, controllingField__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : picklistValues of type {http://soap.sforce.com/2006/04/metadata}PicklistValue
     * java type: com.sforce.soap.metadata.PicklistValue[]
     */
    private static final com.sforce.ws.bind.TypeInfo picklistValues__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","picklistValues","http://soap.sforce.com/2006/04/metadata","PicklistValue",0,-1,true);

    private boolean picklistValues__is_set = false;

    private com.sforce.soap.metadata.PicklistValue[] picklistValues = new com.sforce.soap.metadata.PicklistValue[0];

    public com.sforce.soap.metadata.PicklistValue[] getPicklistValues() {
      return picklistValues;
    }

    public void setPicklistValues(com.sforce.soap.metadata.PicklistValue[] picklistValues) {
      this.picklistValues = picklistValues;
      picklistValues__is_set = true;
    }

    protected void setPicklistValues(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, picklistValues__typeInfo)) {
        setPicklistValues((com.sforce.soap.metadata.PicklistValue[])__typeMapper.readObject(__in, picklistValues__typeInfo, com.sforce.soap.metadata.PicklistValue[].class));
      }
    }

    /**
     * element : sorted of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo sorted__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sorted","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean sorted__is_set = false;

    private boolean sorted;

    public boolean getSorted() {
      return sorted;
    }

    public boolean isSorted() {
      return sorted;
    }

    public void setSorted(boolean sorted) {
      this.sorted = sorted;
      sorted__is_set = true;
    }

    protected void setSorted(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, sorted__typeInfo)) {
        setSorted(__typeMapper.readBoolean(__in, sorted__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, controllingField__typeInfo, controllingField, controllingField__is_set);
       __typeMapper.writeObject(__out, picklistValues__typeInfo, picklistValues, picklistValues__is_set);
       __typeMapper.writeBoolean(__out, sorted__typeInfo, sorted, sorted__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setControllingField(__in, __typeMapper);
        setPicklistValues(__in, __typeMapper);
        setSorted(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Picklist ");
      sb.append(" controllingField='").append(com.sforce.ws.util.Verbose.toString(controllingField)).append("'\n");
      sb.append(" picklistValues='").append(com.sforce.ws.util.Verbose.toString(picklistValues)).append("'\n");
      sb.append(" sorted='").append(com.sforce.ws.util.Verbose.toString(sorted)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
