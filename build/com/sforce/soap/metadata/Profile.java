package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class Profile extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public Profile() {}

    /**
     * element : applicationVisibilities of type {http://soap.sforce.com/2006/04/metadata}ProfileApplicationVisibility
     * java type: com.sforce.soap.metadata.ProfileApplicationVisibility[]
     */
    private static final com.sforce.ws.bind.TypeInfo applicationVisibilities__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","applicationVisibilities","http://soap.sforce.com/2006/04/metadata","ProfileApplicationVisibility",0,-1,true);

    private boolean applicationVisibilities__is_set = false;

    private com.sforce.soap.metadata.ProfileApplicationVisibility[] applicationVisibilities = new com.sforce.soap.metadata.ProfileApplicationVisibility[0];

    public com.sforce.soap.metadata.ProfileApplicationVisibility[] getApplicationVisibilities() {
      return applicationVisibilities;
    }

    public void setApplicationVisibilities(com.sforce.soap.metadata.ProfileApplicationVisibility[] applicationVisibilities) {
      this.applicationVisibilities = applicationVisibilities;
      applicationVisibilities__is_set = true;
    }

    protected void setApplicationVisibilities(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, applicationVisibilities__typeInfo)) {
        setApplicationVisibilities((com.sforce.soap.metadata.ProfileApplicationVisibility[])__typeMapper.readObject(__in, applicationVisibilities__typeInfo, com.sforce.soap.metadata.ProfileApplicationVisibility[].class));
      }
    }

    /**
     * element : classAccesses of type {http://soap.sforce.com/2006/04/metadata}ProfileApexClassAccess
     * java type: com.sforce.soap.metadata.ProfileApexClassAccess[]
     */
    private static final com.sforce.ws.bind.TypeInfo classAccesses__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","classAccesses","http://soap.sforce.com/2006/04/metadata","ProfileApexClassAccess",0,-1,true);

    private boolean classAccesses__is_set = false;

    private com.sforce.soap.metadata.ProfileApexClassAccess[] classAccesses = new com.sforce.soap.metadata.ProfileApexClassAccess[0];

    public com.sforce.soap.metadata.ProfileApexClassAccess[] getClassAccesses() {
      return classAccesses;
    }

    public void setClassAccesses(com.sforce.soap.metadata.ProfileApexClassAccess[] classAccesses) {
      this.classAccesses = classAccesses;
      classAccesses__is_set = true;
    }

    protected void setClassAccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, classAccesses__typeInfo)) {
        setClassAccesses((com.sforce.soap.metadata.ProfileApexClassAccess[])__typeMapper.readObject(__in, classAccesses__typeInfo, com.sforce.soap.metadata.ProfileApexClassAccess[].class));
      }
    }

    /**
     * element : custom of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo custom__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","custom","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean custom__is_set = false;

    private boolean custom;

    public boolean getCustom() {
      return custom;
    }

    public boolean isCustom() {
      return custom;
    }

    public void setCustom(boolean custom) {
      this.custom = custom;
      custom__is_set = true;
    }

    protected void setCustom(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, custom__typeInfo)) {
        setCustom(__typeMapper.readBoolean(__in, custom__typeInfo, boolean.class));
      }
    }

    /**
     * element : customPermissions of type {http://soap.sforce.com/2006/04/metadata}ProfileCustomPermissions
     * java type: com.sforce.soap.metadata.ProfileCustomPermissions[]
     */
    private static final com.sforce.ws.bind.TypeInfo customPermissions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","customPermissions","http://soap.sforce.com/2006/04/metadata","ProfileCustomPermissions",0,-1,true);

    private boolean customPermissions__is_set = false;

    private com.sforce.soap.metadata.ProfileCustomPermissions[] customPermissions = new com.sforce.soap.metadata.ProfileCustomPermissions[0];

    public com.sforce.soap.metadata.ProfileCustomPermissions[] getCustomPermissions() {
      return customPermissions;
    }

    public void setCustomPermissions(com.sforce.soap.metadata.ProfileCustomPermissions[] customPermissions) {
      this.customPermissions = customPermissions;
      customPermissions__is_set = true;
    }

    protected void setCustomPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, customPermissions__typeInfo)) {
        setCustomPermissions((com.sforce.soap.metadata.ProfileCustomPermissions[])__typeMapper.readObject(__in, customPermissions__typeInfo, com.sforce.soap.metadata.ProfileCustomPermissions[].class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : externalDataSourceAccesses of type {http://soap.sforce.com/2006/04/metadata}ProfileExternalDataSourceAccess
     * java type: com.sforce.soap.metadata.ProfileExternalDataSourceAccess[]
     */
    private static final com.sforce.ws.bind.TypeInfo externalDataSourceAccesses__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","externalDataSourceAccesses","http://soap.sforce.com/2006/04/metadata","ProfileExternalDataSourceAccess",0,-1,true);

    private boolean externalDataSourceAccesses__is_set = false;

    private com.sforce.soap.metadata.ProfileExternalDataSourceAccess[] externalDataSourceAccesses = new com.sforce.soap.metadata.ProfileExternalDataSourceAccess[0];

    public com.sforce.soap.metadata.ProfileExternalDataSourceAccess[] getExternalDataSourceAccesses() {
      return externalDataSourceAccesses;
    }

    public void setExternalDataSourceAccesses(com.sforce.soap.metadata.ProfileExternalDataSourceAccess[] externalDataSourceAccesses) {
      this.externalDataSourceAccesses = externalDataSourceAccesses;
      externalDataSourceAccesses__is_set = true;
    }

    protected void setExternalDataSourceAccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, externalDataSourceAccesses__typeInfo)) {
        setExternalDataSourceAccesses((com.sforce.soap.metadata.ProfileExternalDataSourceAccess[])__typeMapper.readObject(__in, externalDataSourceAccesses__typeInfo, com.sforce.soap.metadata.ProfileExternalDataSourceAccess[].class));
      }
    }

    /**
     * element : fieldPermissions of type {http://soap.sforce.com/2006/04/metadata}ProfileFieldLevelSecurity
     * java type: com.sforce.soap.metadata.ProfileFieldLevelSecurity[]
     */
    private static final com.sforce.ws.bind.TypeInfo fieldPermissions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fieldPermissions","http://soap.sforce.com/2006/04/metadata","ProfileFieldLevelSecurity",0,-1,true);

    private boolean fieldPermissions__is_set = false;

    private com.sforce.soap.metadata.ProfileFieldLevelSecurity[] fieldPermissions = new com.sforce.soap.metadata.ProfileFieldLevelSecurity[0];

    public com.sforce.soap.metadata.ProfileFieldLevelSecurity[] getFieldPermissions() {
      return fieldPermissions;
    }

    public void setFieldPermissions(com.sforce.soap.metadata.ProfileFieldLevelSecurity[] fieldPermissions) {
      this.fieldPermissions = fieldPermissions;
      fieldPermissions__is_set = true;
    }

    protected void setFieldPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fieldPermissions__typeInfo)) {
        setFieldPermissions((com.sforce.soap.metadata.ProfileFieldLevelSecurity[])__typeMapper.readObject(__in, fieldPermissions__typeInfo, com.sforce.soap.metadata.ProfileFieldLevelSecurity[].class));
      }
    }

    /**
     * element : layoutAssignments of type {http://soap.sforce.com/2006/04/metadata}ProfileLayoutAssignment
     * java type: com.sforce.soap.metadata.ProfileLayoutAssignment[]
     */
    private static final com.sforce.ws.bind.TypeInfo layoutAssignments__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","layoutAssignments","http://soap.sforce.com/2006/04/metadata","ProfileLayoutAssignment",0,-1,true);

    private boolean layoutAssignments__is_set = false;

    private com.sforce.soap.metadata.ProfileLayoutAssignment[] layoutAssignments = new com.sforce.soap.metadata.ProfileLayoutAssignment[0];

    public com.sforce.soap.metadata.ProfileLayoutAssignment[] getLayoutAssignments() {
      return layoutAssignments;
    }

    public void setLayoutAssignments(com.sforce.soap.metadata.ProfileLayoutAssignment[] layoutAssignments) {
      this.layoutAssignments = layoutAssignments;
      layoutAssignments__is_set = true;
    }

    protected void setLayoutAssignments(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, layoutAssignments__typeInfo)) {
        setLayoutAssignments((com.sforce.soap.metadata.ProfileLayoutAssignment[])__typeMapper.readObject(__in, layoutAssignments__typeInfo, com.sforce.soap.metadata.ProfileLayoutAssignment[].class));
      }
    }

    /**
     * element : loginHours of type {http://soap.sforce.com/2006/04/metadata}ProfileLoginHours
     * java type: com.sforce.soap.metadata.ProfileLoginHours
     */
    private static final com.sforce.ws.bind.TypeInfo loginHours__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","loginHours","http://soap.sforce.com/2006/04/metadata","ProfileLoginHours",0,1,true);

    private boolean loginHours__is_set = false;

    private com.sforce.soap.metadata.ProfileLoginHours loginHours;

    public com.sforce.soap.metadata.ProfileLoginHours getLoginHours() {
      return loginHours;
    }

    public void setLoginHours(com.sforce.soap.metadata.ProfileLoginHours loginHours) {
      this.loginHours = loginHours;
      loginHours__is_set = true;
    }

    protected void setLoginHours(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, loginHours__typeInfo)) {
        setLoginHours((com.sforce.soap.metadata.ProfileLoginHours)__typeMapper.readObject(__in, loginHours__typeInfo, com.sforce.soap.metadata.ProfileLoginHours.class));
      }
    }

    /**
     * element : loginIpRanges of type {http://soap.sforce.com/2006/04/metadata}ProfileLoginIpRange
     * java type: com.sforce.soap.metadata.ProfileLoginIpRange[]
     */
    private static final com.sforce.ws.bind.TypeInfo loginIpRanges__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","loginIpRanges","http://soap.sforce.com/2006/04/metadata","ProfileLoginIpRange",0,-1,true);

    private boolean loginIpRanges__is_set = false;

    private com.sforce.soap.metadata.ProfileLoginIpRange[] loginIpRanges = new com.sforce.soap.metadata.ProfileLoginIpRange[0];

    public com.sforce.soap.metadata.ProfileLoginIpRange[] getLoginIpRanges() {
      return loginIpRanges;
    }

    public void setLoginIpRanges(com.sforce.soap.metadata.ProfileLoginIpRange[] loginIpRanges) {
      this.loginIpRanges = loginIpRanges;
      loginIpRanges__is_set = true;
    }

    protected void setLoginIpRanges(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, loginIpRanges__typeInfo)) {
        setLoginIpRanges((com.sforce.soap.metadata.ProfileLoginIpRange[])__typeMapper.readObject(__in, loginIpRanges__typeInfo, com.sforce.soap.metadata.ProfileLoginIpRange[].class));
      }
    }

    /**
     * element : objectPermissions of type {http://soap.sforce.com/2006/04/metadata}ProfileObjectPermissions
     * java type: com.sforce.soap.metadata.ProfileObjectPermissions[]
     */
    private static final com.sforce.ws.bind.TypeInfo objectPermissions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","objectPermissions","http://soap.sforce.com/2006/04/metadata","ProfileObjectPermissions",0,-1,true);

    private boolean objectPermissions__is_set = false;

    private com.sforce.soap.metadata.ProfileObjectPermissions[] objectPermissions = new com.sforce.soap.metadata.ProfileObjectPermissions[0];

    public com.sforce.soap.metadata.ProfileObjectPermissions[] getObjectPermissions() {
      return objectPermissions;
    }

    public void setObjectPermissions(com.sforce.soap.metadata.ProfileObjectPermissions[] objectPermissions) {
      this.objectPermissions = objectPermissions;
      objectPermissions__is_set = true;
    }

    protected void setObjectPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, objectPermissions__typeInfo)) {
        setObjectPermissions((com.sforce.soap.metadata.ProfileObjectPermissions[])__typeMapper.readObject(__in, objectPermissions__typeInfo, com.sforce.soap.metadata.ProfileObjectPermissions[].class));
      }
    }

    /**
     * element : pageAccesses of type {http://soap.sforce.com/2006/04/metadata}ProfileApexPageAccess
     * java type: com.sforce.soap.metadata.ProfileApexPageAccess[]
     */
    private static final com.sforce.ws.bind.TypeInfo pageAccesses__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","pageAccesses","http://soap.sforce.com/2006/04/metadata","ProfileApexPageAccess",0,-1,true);

    private boolean pageAccesses__is_set = false;

    private com.sforce.soap.metadata.ProfileApexPageAccess[] pageAccesses = new com.sforce.soap.metadata.ProfileApexPageAccess[0];

    public com.sforce.soap.metadata.ProfileApexPageAccess[] getPageAccesses() {
      return pageAccesses;
    }

    public void setPageAccesses(com.sforce.soap.metadata.ProfileApexPageAccess[] pageAccesses) {
      this.pageAccesses = pageAccesses;
      pageAccesses__is_set = true;
    }

    protected void setPageAccesses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, pageAccesses__typeInfo)) {
        setPageAccesses((com.sforce.soap.metadata.ProfileApexPageAccess[])__typeMapper.readObject(__in, pageAccesses__typeInfo, com.sforce.soap.metadata.ProfileApexPageAccess[].class));
      }
    }

    /**
     * element : recordTypeVisibilities of type {http://soap.sforce.com/2006/04/metadata}ProfileRecordTypeVisibility
     * java type: com.sforce.soap.metadata.ProfileRecordTypeVisibility[]
     */
    private static final com.sforce.ws.bind.TypeInfo recordTypeVisibilities__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","recordTypeVisibilities","http://soap.sforce.com/2006/04/metadata","ProfileRecordTypeVisibility",0,-1,true);

    private boolean recordTypeVisibilities__is_set = false;

    private com.sforce.soap.metadata.ProfileRecordTypeVisibility[] recordTypeVisibilities = new com.sforce.soap.metadata.ProfileRecordTypeVisibility[0];

    public com.sforce.soap.metadata.ProfileRecordTypeVisibility[] getRecordTypeVisibilities() {
      return recordTypeVisibilities;
    }

    public void setRecordTypeVisibilities(com.sforce.soap.metadata.ProfileRecordTypeVisibility[] recordTypeVisibilities) {
      this.recordTypeVisibilities = recordTypeVisibilities;
      recordTypeVisibilities__is_set = true;
    }

    protected void setRecordTypeVisibilities(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, recordTypeVisibilities__typeInfo)) {
        setRecordTypeVisibilities((com.sforce.soap.metadata.ProfileRecordTypeVisibility[])__typeMapper.readObject(__in, recordTypeVisibilities__typeInfo, com.sforce.soap.metadata.ProfileRecordTypeVisibility[].class));
      }
    }

    /**
     * element : tabVisibilities of type {http://soap.sforce.com/2006/04/metadata}ProfileTabVisibility
     * java type: com.sforce.soap.metadata.ProfileTabVisibility[]
     */
    private static final com.sforce.ws.bind.TypeInfo tabVisibilities__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","tabVisibilities","http://soap.sforce.com/2006/04/metadata","ProfileTabVisibility",0,-1,true);

    private boolean tabVisibilities__is_set = false;

    private com.sforce.soap.metadata.ProfileTabVisibility[] tabVisibilities = new com.sforce.soap.metadata.ProfileTabVisibility[0];

    public com.sforce.soap.metadata.ProfileTabVisibility[] getTabVisibilities() {
      return tabVisibilities;
    }

    public void setTabVisibilities(com.sforce.soap.metadata.ProfileTabVisibility[] tabVisibilities) {
      this.tabVisibilities = tabVisibilities;
      tabVisibilities__is_set = true;
    }

    protected void setTabVisibilities(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, tabVisibilities__typeInfo)) {
        setTabVisibilities((com.sforce.soap.metadata.ProfileTabVisibility[])__typeMapper.readObject(__in, tabVisibilities__typeInfo, com.sforce.soap.metadata.ProfileTabVisibility[].class));
      }
    }

    /**
     * element : userLicense of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo userLicense__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","userLicense","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean userLicense__is_set = false;

    private java.lang.String userLicense;

    public java.lang.String getUserLicense() {
      return userLicense;
    }

    public void setUserLicense(java.lang.String userLicense) {
      this.userLicense = userLicense;
      userLicense__is_set = true;
    }

    protected void setUserLicense(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, userLicense__typeInfo)) {
        setUserLicense(__typeMapper.readString(__in, userLicense__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : userPermissions of type {http://soap.sforce.com/2006/04/metadata}ProfileUserPermission
     * java type: com.sforce.soap.metadata.ProfileUserPermission[]
     */
    private static final com.sforce.ws.bind.TypeInfo userPermissions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","userPermissions","http://soap.sforce.com/2006/04/metadata","ProfileUserPermission",0,-1,true);

    private boolean userPermissions__is_set = false;

    private com.sforce.soap.metadata.ProfileUserPermission[] userPermissions = new com.sforce.soap.metadata.ProfileUserPermission[0];

    public com.sforce.soap.metadata.ProfileUserPermission[] getUserPermissions() {
      return userPermissions;
    }

    public void setUserPermissions(com.sforce.soap.metadata.ProfileUserPermission[] userPermissions) {
      this.userPermissions = userPermissions;
      userPermissions__is_set = true;
    }

    protected void setUserPermissions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, userPermissions__typeInfo)) {
        setUserPermissions((com.sforce.soap.metadata.ProfileUserPermission[])__typeMapper.readObject(__in, userPermissions__typeInfo, com.sforce.soap.metadata.ProfileUserPermission[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "Profile");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, applicationVisibilities__typeInfo, applicationVisibilities, applicationVisibilities__is_set);
       __typeMapper.writeObject(__out, classAccesses__typeInfo, classAccesses, classAccesses__is_set);
       __typeMapper.writeBoolean(__out, custom__typeInfo, custom, custom__is_set);
       __typeMapper.writeObject(__out, customPermissions__typeInfo, customPermissions, customPermissions__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeObject(__out, externalDataSourceAccesses__typeInfo, externalDataSourceAccesses, externalDataSourceAccesses__is_set);
       __typeMapper.writeObject(__out, fieldPermissions__typeInfo, fieldPermissions, fieldPermissions__is_set);
       __typeMapper.writeObject(__out, layoutAssignments__typeInfo, layoutAssignments, layoutAssignments__is_set);
       __typeMapper.writeObject(__out, loginHours__typeInfo, loginHours, loginHours__is_set);
       __typeMapper.writeObject(__out, loginIpRanges__typeInfo, loginIpRanges, loginIpRanges__is_set);
       __typeMapper.writeObject(__out, objectPermissions__typeInfo, objectPermissions, objectPermissions__is_set);
       __typeMapper.writeObject(__out, pageAccesses__typeInfo, pageAccesses, pageAccesses__is_set);
       __typeMapper.writeObject(__out, recordTypeVisibilities__typeInfo, recordTypeVisibilities, recordTypeVisibilities__is_set);
       __typeMapper.writeObject(__out, tabVisibilities__typeInfo, tabVisibilities, tabVisibilities__is_set);
       __typeMapper.writeString(__out, userLicense__typeInfo, userLicense, userLicense__is_set);
       __typeMapper.writeObject(__out, userPermissions__typeInfo, userPermissions, userPermissions__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setApplicationVisibilities(__in, __typeMapper);
        setClassAccesses(__in, __typeMapper);
        setCustom(__in, __typeMapper);
        setCustomPermissions(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setExternalDataSourceAccesses(__in, __typeMapper);
        setFieldPermissions(__in, __typeMapper);
        setLayoutAssignments(__in, __typeMapper);
        setLoginHours(__in, __typeMapper);
        setLoginIpRanges(__in, __typeMapper);
        setObjectPermissions(__in, __typeMapper);
        setPageAccesses(__in, __typeMapper);
        setRecordTypeVisibilities(__in, __typeMapper);
        setTabVisibilities(__in, __typeMapper);
        setUserLicense(__in, __typeMapper);
        setUserPermissions(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Profile ");
      sb.append(super.toString());sb.append(" applicationVisibilities='").append(com.sforce.ws.util.Verbose.toString(applicationVisibilities)).append("'\n");
      sb.append(" classAccesses='").append(com.sforce.ws.util.Verbose.toString(classAccesses)).append("'\n");
      sb.append(" custom='").append(com.sforce.ws.util.Verbose.toString(custom)).append("'\n");
      sb.append(" customPermissions='").append(com.sforce.ws.util.Verbose.toString(customPermissions)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" externalDataSourceAccesses='").append(com.sforce.ws.util.Verbose.toString(externalDataSourceAccesses)).append("'\n");
      sb.append(" fieldPermissions='").append(com.sforce.ws.util.Verbose.toString(fieldPermissions)).append("'\n");
      sb.append(" layoutAssignments='").append(com.sforce.ws.util.Verbose.toString(layoutAssignments)).append("'\n");
      sb.append(" loginHours='").append(com.sforce.ws.util.Verbose.toString(loginHours)).append("'\n");
      sb.append(" loginIpRanges='").append(com.sforce.ws.util.Verbose.toString(loginIpRanges)).append("'\n");
      sb.append(" objectPermissions='").append(com.sforce.ws.util.Verbose.toString(objectPermissions)).append("'\n");
      sb.append(" pageAccesses='").append(com.sforce.ws.util.Verbose.toString(pageAccesses)).append("'\n");
      sb.append(" recordTypeVisibilities='").append(com.sforce.ws.util.Verbose.toString(recordTypeVisibilities)).append("'\n");
      sb.append(" tabVisibilities='").append(com.sforce.ws.util.Verbose.toString(tabVisibilities)).append("'\n");
      sb.append(" userLicense='").append(com.sforce.ws.util.Verbose.toString(userLicense)).append("'\n");
      sb.append(" userPermissions='").append(com.sforce.ws.util.Verbose.toString(userPermissions)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
