package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class LiveChatSensitiveDataRule extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public LiveChatSensitiveDataRule() {}

    /**
     * element : actionType of type {http://soap.sforce.com/2006/04/metadata}SensitiveDataActionType
     * java type: com.sforce.soap.metadata.SensitiveDataActionType
     */
    private static final com.sforce.ws.bind.TypeInfo actionType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","actionType","http://soap.sforce.com/2006/04/metadata","SensitiveDataActionType",1,1,true);

    private boolean actionType__is_set = false;

    private com.sforce.soap.metadata.SensitiveDataActionType actionType;

    public com.sforce.soap.metadata.SensitiveDataActionType getActionType() {
      return actionType;
    }

    public void setActionType(com.sforce.soap.metadata.SensitiveDataActionType actionType) {
      this.actionType = actionType;
      actionType__is_set = true;
    }

    protected void setActionType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, actionType__typeInfo)) {
        setActionType((com.sforce.soap.metadata.SensitiveDataActionType)__typeMapper.readObject(__in, actionType__typeInfo, com.sforce.soap.metadata.SensitiveDataActionType.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : enforceOn of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo enforceOn__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enforceOn","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean enforceOn__is_set = false;

    private int enforceOn;

    public int getEnforceOn() {
      return enforceOn;
    }

    public void setEnforceOn(int enforceOn) {
      this.enforceOn = enforceOn;
      enforceOn__is_set = true;
    }

    protected void setEnforceOn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, enforceOn__typeInfo)) {
        setEnforceOn((int)__typeMapper.readInt(__in, enforceOn__typeInfo, int.class));
      }
    }

    /**
     * element : isEnabled of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isEnabled__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isEnabled","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean isEnabled__is_set = false;

    private boolean isEnabled;

    public boolean getIsEnabled() {
      return isEnabled;
    }

    public boolean isIsEnabled() {
      return isEnabled;
    }

    public void setIsEnabled(boolean isEnabled) {
      this.isEnabled = isEnabled;
      isEnabled__is_set = true;
    }

    protected void setIsEnabled(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, isEnabled__typeInfo)) {
        setIsEnabled(__typeMapper.readBoolean(__in, isEnabled__typeInfo, boolean.class));
      }
    }

    /**
     * element : pattern of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pattern__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","pattern","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean pattern__is_set = false;

    private java.lang.String pattern;

    public java.lang.String getPattern() {
      return pattern;
    }

    public void setPattern(java.lang.String pattern) {
      this.pattern = pattern;
      pattern__is_set = true;
    }

    protected void setPattern(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, pattern__typeInfo)) {
        setPattern(__typeMapper.readString(__in, pattern__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : replacement of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo replacement__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","replacement","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean replacement__is_set = false;

    private java.lang.String replacement;

    public java.lang.String getReplacement() {
      return replacement;
    }

    public void setReplacement(java.lang.String replacement) {
      this.replacement = replacement;
      replacement__is_set = true;
    }

    protected void setReplacement(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, replacement__typeInfo)) {
        setReplacement(__typeMapper.readString(__in, replacement__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "LiveChatSensitiveDataRule");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, actionType__typeInfo, actionType, actionType__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeInt(__out, enforceOn__typeInfo, enforceOn, enforceOn__is_set);
       __typeMapper.writeBoolean(__out, isEnabled__typeInfo, isEnabled, isEnabled__is_set);
       __typeMapper.writeString(__out, pattern__typeInfo, pattern, pattern__is_set);
       __typeMapper.writeString(__out, replacement__typeInfo, replacement, replacement__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setActionType(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setEnforceOn(__in, __typeMapper);
        setIsEnabled(__in, __typeMapper);
        setPattern(__in, __typeMapper);
        setReplacement(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LiveChatSensitiveDataRule ");
      sb.append(super.toString());sb.append(" actionType='").append(com.sforce.ws.util.Verbose.toString(actionType)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" enforceOn='").append(com.sforce.ws.util.Verbose.toString(enforceOn)).append("'\n");
      sb.append(" isEnabled='").append(com.sforce.ws.util.Verbose.toString(isEnabled)).append("'\n");
      sb.append(" pattern='").append(com.sforce.ws.util.Verbose.toString(pattern)).append("'\n");
      sb.append(" replacement='").append(com.sforce.ws.util.Verbose.toString(replacement)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
