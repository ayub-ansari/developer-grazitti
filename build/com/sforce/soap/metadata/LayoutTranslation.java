package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class LayoutTranslation implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public LayoutTranslation() {}

    /**
     * element : layout of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo layout__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","layout","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean layout__is_set = false;

    private java.lang.String layout;

    public java.lang.String getLayout() {
      return layout;
    }

    public void setLayout(java.lang.String layout) {
      this.layout = layout;
      layout__is_set = true;
    }

    protected void setLayout(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, layout__typeInfo)) {
        setLayout(__typeMapper.readString(__in, layout__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : layoutType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo layoutType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","layoutType","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean layoutType__is_set = false;

    private java.lang.String layoutType;

    public java.lang.String getLayoutType() {
      return layoutType;
    }

    public void setLayoutType(java.lang.String layoutType) {
      this.layoutType = layoutType;
      layoutType__is_set = true;
    }

    protected void setLayoutType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, layoutType__typeInfo)) {
        setLayoutType(__typeMapper.readString(__in, layoutType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : sections of type {http://soap.sforce.com/2006/04/metadata}LayoutSectionTranslation
     * java type: com.sforce.soap.metadata.LayoutSectionTranslation[]
     */
    private static final com.sforce.ws.bind.TypeInfo sections__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sections","http://soap.sforce.com/2006/04/metadata","LayoutSectionTranslation",0,-1,true);

    private boolean sections__is_set = false;

    private com.sforce.soap.metadata.LayoutSectionTranslation[] sections = new com.sforce.soap.metadata.LayoutSectionTranslation[0];

    public com.sforce.soap.metadata.LayoutSectionTranslation[] getSections() {
      return sections;
    }

    public void setSections(com.sforce.soap.metadata.LayoutSectionTranslation[] sections) {
      this.sections = sections;
      sections__is_set = true;
    }

    protected void setSections(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sections__typeInfo)) {
        setSections((com.sforce.soap.metadata.LayoutSectionTranslation[])__typeMapper.readObject(__in, sections__typeInfo, com.sforce.soap.metadata.LayoutSectionTranslation[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, layout__typeInfo, layout, layout__is_set);
       __typeMapper.writeString(__out, layoutType__typeInfo, layoutType, layoutType__is_set);
       __typeMapper.writeObject(__out, sections__typeInfo, sections, sections__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setLayout(__in, __typeMapper);
        setLayoutType(__in, __typeMapper);
        setSections(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LayoutTranslation ");
      sb.append(" layout='").append(com.sforce.ws.util.Verbose.toString(layout)).append("'\n");
      sb.append(" layoutType='").append(com.sforce.ws.util.Verbose.toString(layoutType)).append("'\n");
      sb.append(" sections='").append(com.sforce.ws.util.Verbose.toString(sections)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
