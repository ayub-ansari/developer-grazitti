package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class CustomTab extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public CustomTab() {}

    /**
     * element : auraComponent of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo auraComponent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","auraComponent","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean auraComponent__is_set = false;

    private java.lang.String auraComponent;

    public java.lang.String getAuraComponent() {
      return auraComponent;
    }

    public void setAuraComponent(java.lang.String auraComponent) {
      this.auraComponent = auraComponent;
      auraComponent__is_set = true;
    }

    protected void setAuraComponent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, auraComponent__typeInfo)) {
        setAuraComponent(__typeMapper.readString(__in, auraComponent__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : customObject of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo customObject__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","customObject","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean customObject__is_set = false;

    private boolean customObject;

    public boolean getCustomObject() {
      return customObject;
    }

    public boolean isCustomObject() {
      return customObject;
    }

    public void setCustomObject(boolean customObject) {
      this.customObject = customObject;
      customObject__is_set = true;
    }

    protected void setCustomObject(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, customObject__typeInfo)) {
        setCustomObject(__typeMapper.readBoolean(__in, customObject__typeInfo, boolean.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : flexiPage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo flexiPage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","flexiPage","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean flexiPage__is_set = false;

    private java.lang.String flexiPage;

    public java.lang.String getFlexiPage() {
      return flexiPage;
    }

    public void setFlexiPage(java.lang.String flexiPage) {
      this.flexiPage = flexiPage;
      flexiPage__is_set = true;
    }

    protected void setFlexiPage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, flexiPage__typeInfo)) {
        setFlexiPage(__typeMapper.readString(__in, flexiPage__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : frameHeight of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo frameHeight__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","frameHeight","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean frameHeight__is_set = false;

    private int frameHeight;

    public int getFrameHeight() {
      return frameHeight;
    }

    public void setFrameHeight(int frameHeight) {
      this.frameHeight = frameHeight;
      frameHeight__is_set = true;
    }

    protected void setFrameHeight(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, frameHeight__typeInfo)) {
        setFrameHeight((int)__typeMapper.readInt(__in, frameHeight__typeInfo, int.class));
      }
    }

    /**
     * element : hasSidebar of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo hasSidebar__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","hasSidebar","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean hasSidebar__is_set = false;

    private boolean hasSidebar;

    public boolean getHasSidebar() {
      return hasSidebar;
    }

    public boolean isHasSidebar() {
      return hasSidebar;
    }

    public void setHasSidebar(boolean hasSidebar) {
      this.hasSidebar = hasSidebar;
      hasSidebar__is_set = true;
    }

    protected void setHasSidebar(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, hasSidebar__typeInfo)) {
        setHasSidebar(__typeMapper.readBoolean(__in, hasSidebar__typeInfo, boolean.class));
      }
    }

    /**
     * element : icon of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo icon__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","icon","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean icon__is_set = false;

    private java.lang.String icon;

    public java.lang.String getIcon() {
      return icon;
    }

    public void setIcon(java.lang.String icon) {
      this.icon = icon;
      icon__is_set = true;
    }

    protected void setIcon(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, icon__typeInfo)) {
        setIcon(__typeMapper.readString(__in, icon__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : mobileReady of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo mobileReady__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","mobileReady","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean mobileReady__is_set = false;

    private boolean mobileReady;

    public boolean getMobileReady() {
      return mobileReady;
    }

    public boolean isMobileReady() {
      return mobileReady;
    }

    public void setMobileReady(boolean mobileReady) {
      this.mobileReady = mobileReady;
      mobileReady__is_set = true;
    }

    protected void setMobileReady(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, mobileReady__typeInfo)) {
        setMobileReady(__typeMapper.readBoolean(__in, mobileReady__typeInfo, boolean.class));
      }
    }

    /**
     * element : motif of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo motif__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","motif","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean motif__is_set = false;

    private java.lang.String motif;

    public java.lang.String getMotif() {
      return motif;
    }

    public void setMotif(java.lang.String motif) {
      this.motif = motif;
      motif__is_set = true;
    }

    protected void setMotif(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, motif__typeInfo)) {
        setMotif(__typeMapper.readString(__in, motif__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : page of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo page__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","page","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean page__is_set = false;

    private java.lang.String page;

    public java.lang.String getPage() {
      return page;
    }

    public void setPage(java.lang.String page) {
      this.page = page;
      page__is_set = true;
    }

    protected void setPage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, page__typeInfo)) {
        setPage(__typeMapper.readString(__in, page__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : scontrol of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo scontrol__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","scontrol","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean scontrol__is_set = false;

    private java.lang.String scontrol;

    public java.lang.String getScontrol() {
      return scontrol;
    }

    public void setScontrol(java.lang.String scontrol) {
      this.scontrol = scontrol;
      scontrol__is_set = true;
    }

    protected void setScontrol(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, scontrol__typeInfo)) {
        setScontrol(__typeMapper.readString(__in, scontrol__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : splashPageLink of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo splashPageLink__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","splashPageLink","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean splashPageLink__is_set = false;

    private java.lang.String splashPageLink;

    public java.lang.String getSplashPageLink() {
      return splashPageLink;
    }

    public void setSplashPageLink(java.lang.String splashPageLink) {
      this.splashPageLink = splashPageLink;
      splashPageLink__is_set = true;
    }

    protected void setSplashPageLink(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, splashPageLink__typeInfo)) {
        setSplashPageLink(__typeMapper.readString(__in, splashPageLink__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : url of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo url__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","url","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean url__is_set = false;

    private java.lang.String url;

    public java.lang.String getUrl() {
      return url;
    }

    public void setUrl(java.lang.String url) {
      this.url = url;
      url__is_set = true;
    }

    protected void setUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, url__typeInfo)) {
        setUrl(__typeMapper.readString(__in, url__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : urlEncodingKey of type {http://soap.sforce.com/2006/04/metadata}Encoding
     * java type: com.sforce.soap.metadata.Encoding
     */
    private static final com.sforce.ws.bind.TypeInfo urlEncodingKey__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","urlEncodingKey","http://soap.sforce.com/2006/04/metadata","Encoding",0,1,true);

    private boolean urlEncodingKey__is_set = false;

    private com.sforce.soap.metadata.Encoding urlEncodingKey;

    public com.sforce.soap.metadata.Encoding getUrlEncodingKey() {
      return urlEncodingKey;
    }

    public void setUrlEncodingKey(com.sforce.soap.metadata.Encoding urlEncodingKey) {
      this.urlEncodingKey = urlEncodingKey;
      urlEncodingKey__is_set = true;
    }

    protected void setUrlEncodingKey(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, urlEncodingKey__typeInfo)) {
        setUrlEncodingKey((com.sforce.soap.metadata.Encoding)__typeMapper.readObject(__in, urlEncodingKey__typeInfo, com.sforce.soap.metadata.Encoding.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "CustomTab");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, auraComponent__typeInfo, auraComponent, auraComponent__is_set);
       __typeMapper.writeBoolean(__out, customObject__typeInfo, customObject, customObject__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, flexiPage__typeInfo, flexiPage, flexiPage__is_set);
       __typeMapper.writeInt(__out, frameHeight__typeInfo, frameHeight, frameHeight__is_set);
       __typeMapper.writeBoolean(__out, hasSidebar__typeInfo, hasSidebar, hasSidebar__is_set);
       __typeMapper.writeString(__out, icon__typeInfo, icon, icon__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeBoolean(__out, mobileReady__typeInfo, mobileReady, mobileReady__is_set);
       __typeMapper.writeString(__out, motif__typeInfo, motif, motif__is_set);
       __typeMapper.writeString(__out, page__typeInfo, page, page__is_set);
       __typeMapper.writeString(__out, scontrol__typeInfo, scontrol, scontrol__is_set);
       __typeMapper.writeString(__out, splashPageLink__typeInfo, splashPageLink, splashPageLink__is_set);
       __typeMapper.writeString(__out, url__typeInfo, url, url__is_set);
       __typeMapper.writeObject(__out, urlEncodingKey__typeInfo, urlEncodingKey, urlEncodingKey__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAuraComponent(__in, __typeMapper);
        setCustomObject(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setFlexiPage(__in, __typeMapper);
        setFrameHeight(__in, __typeMapper);
        setHasSidebar(__in, __typeMapper);
        setIcon(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setMobileReady(__in, __typeMapper);
        setMotif(__in, __typeMapper);
        setPage(__in, __typeMapper);
        setScontrol(__in, __typeMapper);
        setSplashPageLink(__in, __typeMapper);
        setUrl(__in, __typeMapper);
        setUrlEncodingKey(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CustomTab ");
      sb.append(super.toString());sb.append(" auraComponent='").append(com.sforce.ws.util.Verbose.toString(auraComponent)).append("'\n");
      sb.append(" customObject='").append(com.sforce.ws.util.Verbose.toString(customObject)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" flexiPage='").append(com.sforce.ws.util.Verbose.toString(flexiPage)).append("'\n");
      sb.append(" frameHeight='").append(com.sforce.ws.util.Verbose.toString(frameHeight)).append("'\n");
      sb.append(" hasSidebar='").append(com.sforce.ws.util.Verbose.toString(hasSidebar)).append("'\n");
      sb.append(" icon='").append(com.sforce.ws.util.Verbose.toString(icon)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" mobileReady='").append(com.sforce.ws.util.Verbose.toString(mobileReady)).append("'\n");
      sb.append(" motif='").append(com.sforce.ws.util.Verbose.toString(motif)).append("'\n");
      sb.append(" page='").append(com.sforce.ws.util.Verbose.toString(page)).append("'\n");
      sb.append(" scontrol='").append(com.sforce.ws.util.Verbose.toString(scontrol)).append("'\n");
      sb.append(" splashPageLink='").append(com.sforce.ws.util.Verbose.toString(splashPageLink)).append("'\n");
      sb.append(" url='").append(com.sforce.ws.util.Verbose.toString(url)).append("'\n");
      sb.append(" urlEncodingKey='").append(com.sforce.ws.util.Verbose.toString(urlEncodingKey)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
