package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class AuraDefinitionBundle extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public AuraDefinitionBundle() {}

    /**
     * element : SVGContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo SVGContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","SVGContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean SVGContent__is_set = false;

    private byte[] SVGContent;

    public byte[] getSVGContent() {
      return SVGContent;
    }

    public void setSVGContent(byte[] SVGContent) {
      this.SVGContent = SVGContent;
      SVGContent__is_set = true;
    }

    protected void setSVGContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, SVGContent__typeInfo)) {
        setSVGContent((byte[])__typeMapper.readObject(__in, SVGContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : apiVersion of type {http://www.w3.org/2001/XMLSchema}double
     * java type: double
     */
    private static final com.sforce.ws.bind.TypeInfo apiVersion__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","apiVersion","http://www.w3.org/2001/XMLSchema","double",0,1,true);

    private boolean apiVersion__is_set = false;

    private double apiVersion;

    public double getApiVersion() {
      return apiVersion;
    }

    public void setApiVersion(double apiVersion) {
      this.apiVersion = apiVersion;
      apiVersion__is_set = true;
    }

    protected void setApiVersion(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, apiVersion__typeInfo)) {
        setApiVersion((double)__typeMapper.readDouble(__in, apiVersion__typeInfo, double.class));
      }
    }

    /**
     * element : controllerContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo controllerContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","controllerContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean controllerContent__is_set = false;

    private byte[] controllerContent;

    public byte[] getControllerContent() {
      return controllerContent;
    }

    public void setControllerContent(byte[] controllerContent) {
      this.controllerContent = controllerContent;
      controllerContent__is_set = true;
    }

    protected void setControllerContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, controllerContent__typeInfo)) {
        setControllerContent((byte[])__typeMapper.readObject(__in, controllerContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : designContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo designContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","designContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean designContent__is_set = false;

    private byte[] designContent;

    public byte[] getDesignContent() {
      return designContent;
    }

    public void setDesignContent(byte[] designContent) {
      this.designContent = designContent;
      designContent__is_set = true;
    }

    protected void setDesignContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, designContent__typeInfo)) {
        setDesignContent((byte[])__typeMapper.readObject(__in, designContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : documentationContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo documentationContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","documentationContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean documentationContent__is_set = false;

    private byte[] documentationContent;

    public byte[] getDocumentationContent() {
      return documentationContent;
    }

    public void setDocumentationContent(byte[] documentationContent) {
      this.documentationContent = documentationContent;
      documentationContent__is_set = true;
    }

    protected void setDocumentationContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, documentationContent__typeInfo)) {
        setDocumentationContent((byte[])__typeMapper.readObject(__in, documentationContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : helperContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo helperContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","helperContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean helperContent__is_set = false;

    private byte[] helperContent;

    public byte[] getHelperContent() {
      return helperContent;
    }

    public void setHelperContent(byte[] helperContent) {
      this.helperContent = helperContent;
      helperContent__is_set = true;
    }

    protected void setHelperContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, helperContent__typeInfo)) {
        setHelperContent((byte[])__typeMapper.readObject(__in, helperContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : markup of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo markup__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","markup","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean markup__is_set = false;

    private byte[] markup;

    public byte[] getMarkup() {
      return markup;
    }

    public void setMarkup(byte[] markup) {
      this.markup = markup;
      markup__is_set = true;
    }

    protected void setMarkup(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, markup__typeInfo)) {
        setMarkup((byte[])__typeMapper.readObject(__in, markup__typeInfo, byte[].class));
      }
    }

    /**
     * element : modelContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo modelContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","modelContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean modelContent__is_set = false;

    private byte[] modelContent;

    public byte[] getModelContent() {
      return modelContent;
    }

    public void setModelContent(byte[] modelContent) {
      this.modelContent = modelContent;
      modelContent__is_set = true;
    }

    protected void setModelContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, modelContent__typeInfo)) {
        setModelContent((byte[])__typeMapper.readObject(__in, modelContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : packageVersions of type {http://soap.sforce.com/2006/04/metadata}PackageVersion
     * java type: com.sforce.soap.metadata.PackageVersion[]
     */
    private static final com.sforce.ws.bind.TypeInfo packageVersions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","packageVersions","http://soap.sforce.com/2006/04/metadata","PackageVersion",0,-1,true);

    private boolean packageVersions__is_set = false;

    private com.sforce.soap.metadata.PackageVersion[] packageVersions = new com.sforce.soap.metadata.PackageVersion[0];

    public com.sforce.soap.metadata.PackageVersion[] getPackageVersions() {
      return packageVersions;
    }

    public void setPackageVersions(com.sforce.soap.metadata.PackageVersion[] packageVersions) {
      this.packageVersions = packageVersions;
      packageVersions__is_set = true;
    }

    protected void setPackageVersions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, packageVersions__typeInfo)) {
        setPackageVersions((com.sforce.soap.metadata.PackageVersion[])__typeMapper.readObject(__in, packageVersions__typeInfo, com.sforce.soap.metadata.PackageVersion[].class));
      }
    }

    /**
     * element : rendererContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo rendererContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","rendererContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean rendererContent__is_set = false;

    private byte[] rendererContent;

    public byte[] getRendererContent() {
      return rendererContent;
    }

    public void setRendererContent(byte[] rendererContent) {
      this.rendererContent = rendererContent;
      rendererContent__is_set = true;
    }

    protected void setRendererContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, rendererContent__typeInfo)) {
        setRendererContent((byte[])__typeMapper.readObject(__in, rendererContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : styleContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo styleContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","styleContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean styleContent__is_set = false;

    private byte[] styleContent;

    public byte[] getStyleContent() {
      return styleContent;
    }

    public void setStyleContent(byte[] styleContent) {
      this.styleContent = styleContent;
      styleContent__is_set = true;
    }

    protected void setStyleContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, styleContent__typeInfo)) {
        setStyleContent((byte[])__typeMapper.readObject(__in, styleContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : testsuiteContent of type {http://www.w3.org/2001/XMLSchema}base64Binary
     * java type: byte[]
     */
    private static final com.sforce.ws.bind.TypeInfo testsuiteContent__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","testsuiteContent","http://www.w3.org/2001/XMLSchema","base64Binary",0,1,true);

    private boolean testsuiteContent__is_set = false;

    private byte[] testsuiteContent;

    public byte[] getTestsuiteContent() {
      return testsuiteContent;
    }

    public void setTestsuiteContent(byte[] testsuiteContent) {
      this.testsuiteContent = testsuiteContent;
      testsuiteContent__is_set = true;
    }

    protected void setTestsuiteContent(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, testsuiteContent__typeInfo)) {
        setTestsuiteContent((byte[])__typeMapper.readObject(__in, testsuiteContent__typeInfo, byte[].class));
      }
    }

    /**
     * element : type of type {http://soap.sforce.com/2006/04/metadata}AuraBundleType
     * java type: com.sforce.soap.metadata.AuraBundleType
     */
    private static final com.sforce.ws.bind.TypeInfo type__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","type","http://soap.sforce.com/2006/04/metadata","AuraBundleType",0,1,true);

    private boolean type__is_set = false;

    private com.sforce.soap.metadata.AuraBundleType type;

    public com.sforce.soap.metadata.AuraBundleType getType() {
      return type;
    }

    public void setType(com.sforce.soap.metadata.AuraBundleType type) {
      this.type = type;
      type__is_set = true;
    }

    protected void setType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, type__typeInfo)) {
        setType((com.sforce.soap.metadata.AuraBundleType)__typeMapper.readObject(__in, type__typeInfo, com.sforce.soap.metadata.AuraBundleType.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "AuraDefinitionBundle");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, SVGContent__typeInfo, SVGContent, SVGContent__is_set);
       __typeMapper.writeDouble(__out, apiVersion__typeInfo, apiVersion, apiVersion__is_set);
       __typeMapper.writeObject(__out, controllerContent__typeInfo, controllerContent, controllerContent__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeObject(__out, designContent__typeInfo, designContent, designContent__is_set);
       __typeMapper.writeObject(__out, documentationContent__typeInfo, documentationContent, documentationContent__is_set);
       __typeMapper.writeObject(__out, helperContent__typeInfo, helperContent, helperContent__is_set);
       __typeMapper.writeObject(__out, markup__typeInfo, markup, markup__is_set);
       __typeMapper.writeObject(__out, modelContent__typeInfo, modelContent, modelContent__is_set);
       __typeMapper.writeObject(__out, packageVersions__typeInfo, packageVersions, packageVersions__is_set);
       __typeMapper.writeObject(__out, rendererContent__typeInfo, rendererContent, rendererContent__is_set);
       __typeMapper.writeObject(__out, styleContent__typeInfo, styleContent, styleContent__is_set);
       __typeMapper.writeObject(__out, testsuiteContent__typeInfo, testsuiteContent, testsuiteContent__is_set);
       __typeMapper.writeObject(__out, type__typeInfo, type, type__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setSVGContent(__in, __typeMapper);
        setApiVersion(__in, __typeMapper);
        setControllerContent(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setDesignContent(__in, __typeMapper);
        setDocumentationContent(__in, __typeMapper);
        setHelperContent(__in, __typeMapper);
        setMarkup(__in, __typeMapper);
        setModelContent(__in, __typeMapper);
        setPackageVersions(__in, __typeMapper);
        setRendererContent(__in, __typeMapper);
        setStyleContent(__in, __typeMapper);
        setTestsuiteContent(__in, __typeMapper);
        setType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[AuraDefinitionBundle ");
      sb.append(super.toString());sb.append(" SVGContent='").append(com.sforce.ws.util.Verbose.toString(SVGContent)).append("'\n");
      sb.append(" apiVersion='").append(com.sforce.ws.util.Verbose.toString(apiVersion)).append("'\n");
      sb.append(" controllerContent='").append(com.sforce.ws.util.Verbose.toString(controllerContent)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" designContent='").append(com.sforce.ws.util.Verbose.toString(designContent)).append("'\n");
      sb.append(" documentationContent='").append(com.sforce.ws.util.Verbose.toString(documentationContent)).append("'\n");
      sb.append(" helperContent='").append(com.sforce.ws.util.Verbose.toString(helperContent)).append("'\n");
      sb.append(" markup='").append(com.sforce.ws.util.Verbose.toString(markup)).append("'\n");
      sb.append(" modelContent='").append(com.sforce.ws.util.Verbose.toString(modelContent)).append("'\n");
      sb.append(" packageVersions='").append(com.sforce.ws.util.Verbose.toString(packageVersions)).append("'\n");
      sb.append(" rendererContent='").append(com.sforce.ws.util.Verbose.toString(rendererContent)).append("'\n");
      sb.append(" styleContent='").append(com.sforce.ws.util.Verbose.toString(styleContent)).append("'\n");
      sb.append(" testsuiteContent='").append(com.sforce.ws.util.Verbose.toString(testsuiteContent)).append("'\n");
      sb.append(" type='").append(com.sforce.ws.util.Verbose.toString(type)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
