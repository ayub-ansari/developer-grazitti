package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class SharedTo implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public SharedTo() {}

    /**
     * element : allCustomerPortalUsers of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo allCustomerPortalUsers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allCustomerPortalUsers","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean allCustomerPortalUsers__is_set = false;

    private java.lang.String allCustomerPortalUsers;

    public java.lang.String getAllCustomerPortalUsers() {
      return allCustomerPortalUsers;
    }

    public void setAllCustomerPortalUsers(java.lang.String allCustomerPortalUsers) {
      this.allCustomerPortalUsers = allCustomerPortalUsers;
      allCustomerPortalUsers__is_set = true;
    }

    protected void setAllCustomerPortalUsers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allCustomerPortalUsers__typeInfo)) {
        setAllCustomerPortalUsers(__typeMapper.readString(__in, allCustomerPortalUsers__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : allInternalUsers of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo allInternalUsers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allInternalUsers","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean allInternalUsers__is_set = false;

    private java.lang.String allInternalUsers;

    public java.lang.String getAllInternalUsers() {
      return allInternalUsers;
    }

    public void setAllInternalUsers(java.lang.String allInternalUsers) {
      this.allInternalUsers = allInternalUsers;
      allInternalUsers__is_set = true;
    }

    protected void setAllInternalUsers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allInternalUsers__typeInfo)) {
        setAllInternalUsers(__typeMapper.readString(__in, allInternalUsers__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : allPartnerUsers of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo allPartnerUsers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allPartnerUsers","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean allPartnerUsers__is_set = false;

    private java.lang.String allPartnerUsers;

    public java.lang.String getAllPartnerUsers() {
      return allPartnerUsers;
    }

    public void setAllPartnerUsers(java.lang.String allPartnerUsers) {
      this.allPartnerUsers = allPartnerUsers;
      allPartnerUsers__is_set = true;
    }

    protected void setAllPartnerUsers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allPartnerUsers__typeInfo)) {
        setAllPartnerUsers(__typeMapper.readString(__in, allPartnerUsers__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : group of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo group__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","group","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean group__is_set = false;

    private java.lang.String[] group = new java.lang.String[0];

    public java.lang.String[] getGroup() {
      return group;
    }

    public void setGroup(java.lang.String[] group) {
      this.group = group;
      group__is_set = true;
    }

    protected void setGroup(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, group__typeInfo)) {
        setGroup((java.lang.String[])__typeMapper.readObject(__in, group__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : groups of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo groups__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","groups","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean groups__is_set = false;

    private java.lang.String[] groups = new java.lang.String[0];

    public java.lang.String[] getGroups() {
      return groups;
    }

    public void setGroups(java.lang.String[] groups) {
      this.groups = groups;
      groups__is_set = true;
    }

    protected void setGroups(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, groups__typeInfo)) {
        setGroups((java.lang.String[])__typeMapper.readObject(__in, groups__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : managerSubordinates of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo managerSubordinates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","managerSubordinates","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean managerSubordinates__is_set = false;

    private java.lang.String[] managerSubordinates = new java.lang.String[0];

    public java.lang.String[] getManagerSubordinates() {
      return managerSubordinates;
    }

    public void setManagerSubordinates(java.lang.String[] managerSubordinates) {
      this.managerSubordinates = managerSubordinates;
      managerSubordinates__is_set = true;
    }

    protected void setManagerSubordinates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, managerSubordinates__typeInfo)) {
        setManagerSubordinates((java.lang.String[])__typeMapper.readObject(__in, managerSubordinates__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : managers of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo managers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","managers","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean managers__is_set = false;

    private java.lang.String[] managers = new java.lang.String[0];

    public java.lang.String[] getManagers() {
      return managers;
    }

    public void setManagers(java.lang.String[] managers) {
      this.managers = managers;
      managers__is_set = true;
    }

    protected void setManagers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, managers__typeInfo)) {
        setManagers((java.lang.String[])__typeMapper.readObject(__in, managers__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : portalRole of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo portalRole__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","portalRole","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean portalRole__is_set = false;

    private java.lang.String[] portalRole = new java.lang.String[0];

    public java.lang.String[] getPortalRole() {
      return portalRole;
    }

    public void setPortalRole(java.lang.String[] portalRole) {
      this.portalRole = portalRole;
      portalRole__is_set = true;
    }

    protected void setPortalRole(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, portalRole__typeInfo)) {
        setPortalRole((java.lang.String[])__typeMapper.readObject(__in, portalRole__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : portalRoleAndSubordinates of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo portalRoleAndSubordinates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","portalRoleAndSubordinates","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean portalRoleAndSubordinates__is_set = false;

    private java.lang.String[] portalRoleAndSubordinates = new java.lang.String[0];

    public java.lang.String[] getPortalRoleAndSubordinates() {
      return portalRoleAndSubordinates;
    }

    public void setPortalRoleAndSubordinates(java.lang.String[] portalRoleAndSubordinates) {
      this.portalRoleAndSubordinates = portalRoleAndSubordinates;
      portalRoleAndSubordinates__is_set = true;
    }

    protected void setPortalRoleAndSubordinates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, portalRoleAndSubordinates__typeInfo)) {
        setPortalRoleAndSubordinates((java.lang.String[])__typeMapper.readObject(__in, portalRoleAndSubordinates__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : queue of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo queue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","queue","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean queue__is_set = false;

    private java.lang.String[] queue = new java.lang.String[0];

    public java.lang.String[] getQueue() {
      return queue;
    }

    public void setQueue(java.lang.String[] queue) {
      this.queue = queue;
      queue__is_set = true;
    }

    protected void setQueue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, queue__typeInfo)) {
        setQueue((java.lang.String[])__typeMapper.readObject(__in, queue__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : role of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo role__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","role","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean role__is_set = false;

    private java.lang.String[] role = new java.lang.String[0];

    public java.lang.String[] getRole() {
      return role;
    }

    public void setRole(java.lang.String[] role) {
      this.role = role;
      role__is_set = true;
    }

    protected void setRole(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, role__typeInfo)) {
        setRole((java.lang.String[])__typeMapper.readObject(__in, role__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : roleAndSubordinates of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo roleAndSubordinates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","roleAndSubordinates","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean roleAndSubordinates__is_set = false;

    private java.lang.String[] roleAndSubordinates = new java.lang.String[0];

    public java.lang.String[] getRoleAndSubordinates() {
      return roleAndSubordinates;
    }

    public void setRoleAndSubordinates(java.lang.String[] roleAndSubordinates) {
      this.roleAndSubordinates = roleAndSubordinates;
      roleAndSubordinates__is_set = true;
    }

    protected void setRoleAndSubordinates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, roleAndSubordinates__typeInfo)) {
        setRoleAndSubordinates((java.lang.String[])__typeMapper.readObject(__in, roleAndSubordinates__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : roleAndSubordinatesInternal of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo roleAndSubordinatesInternal__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","roleAndSubordinatesInternal","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean roleAndSubordinatesInternal__is_set = false;

    private java.lang.String[] roleAndSubordinatesInternal = new java.lang.String[0];

    public java.lang.String[] getRoleAndSubordinatesInternal() {
      return roleAndSubordinatesInternal;
    }

    public void setRoleAndSubordinatesInternal(java.lang.String[] roleAndSubordinatesInternal) {
      this.roleAndSubordinatesInternal = roleAndSubordinatesInternal;
      roleAndSubordinatesInternal__is_set = true;
    }

    protected void setRoleAndSubordinatesInternal(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, roleAndSubordinatesInternal__typeInfo)) {
        setRoleAndSubordinatesInternal((java.lang.String[])__typeMapper.readObject(__in, roleAndSubordinatesInternal__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : roles of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo roles__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","roles","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean roles__is_set = false;

    private java.lang.String[] roles = new java.lang.String[0];

    public java.lang.String[] getRoles() {
      return roles;
    }

    public void setRoles(java.lang.String[] roles) {
      this.roles = roles;
      roles__is_set = true;
    }

    protected void setRoles(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, roles__typeInfo)) {
        setRoles((java.lang.String[])__typeMapper.readObject(__in, roles__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : rolesAndSubordinates of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo rolesAndSubordinates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","rolesAndSubordinates","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean rolesAndSubordinates__is_set = false;

    private java.lang.String[] rolesAndSubordinates = new java.lang.String[0];

    public java.lang.String[] getRolesAndSubordinates() {
      return rolesAndSubordinates;
    }

    public void setRolesAndSubordinates(java.lang.String[] rolesAndSubordinates) {
      this.rolesAndSubordinates = rolesAndSubordinates;
      rolesAndSubordinates__is_set = true;
    }

    protected void setRolesAndSubordinates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, rolesAndSubordinates__typeInfo)) {
        setRolesAndSubordinates((java.lang.String[])__typeMapper.readObject(__in, rolesAndSubordinates__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : territories of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo territories__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","territories","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean territories__is_set = false;

    private java.lang.String[] territories = new java.lang.String[0];

    public java.lang.String[] getTerritories() {
      return territories;
    }

    public void setTerritories(java.lang.String[] territories) {
      this.territories = territories;
      territories__is_set = true;
    }

    protected void setTerritories(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, territories__typeInfo)) {
        setTerritories((java.lang.String[])__typeMapper.readObject(__in, territories__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : territoriesAndSubordinates of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo territoriesAndSubordinates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","territoriesAndSubordinates","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean territoriesAndSubordinates__is_set = false;

    private java.lang.String[] territoriesAndSubordinates = new java.lang.String[0];

    public java.lang.String[] getTerritoriesAndSubordinates() {
      return territoriesAndSubordinates;
    }

    public void setTerritoriesAndSubordinates(java.lang.String[] territoriesAndSubordinates) {
      this.territoriesAndSubordinates = territoriesAndSubordinates;
      territoriesAndSubordinates__is_set = true;
    }

    protected void setTerritoriesAndSubordinates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, territoriesAndSubordinates__typeInfo)) {
        setTerritoriesAndSubordinates((java.lang.String[])__typeMapper.readObject(__in, territoriesAndSubordinates__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : territory of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo territory__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","territory","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean territory__is_set = false;

    private java.lang.String[] territory = new java.lang.String[0];

    public java.lang.String[] getTerritory() {
      return territory;
    }

    public void setTerritory(java.lang.String[] territory) {
      this.territory = territory;
      territory__is_set = true;
    }

    protected void setTerritory(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, territory__typeInfo)) {
        setTerritory((java.lang.String[])__typeMapper.readObject(__in, territory__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : territoryAndSubordinates of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo territoryAndSubordinates__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","territoryAndSubordinates","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean territoryAndSubordinates__is_set = false;

    private java.lang.String[] territoryAndSubordinates = new java.lang.String[0];

    public java.lang.String[] getTerritoryAndSubordinates() {
      return territoryAndSubordinates;
    }

    public void setTerritoryAndSubordinates(java.lang.String[] territoryAndSubordinates) {
      this.territoryAndSubordinates = territoryAndSubordinates;
      territoryAndSubordinates__is_set = true;
    }

    protected void setTerritoryAndSubordinates(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, territoryAndSubordinates__typeInfo)) {
        setTerritoryAndSubordinates((java.lang.String[])__typeMapper.readObject(__in, territoryAndSubordinates__typeInfo, java.lang.String[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, allCustomerPortalUsers__typeInfo, allCustomerPortalUsers, allCustomerPortalUsers__is_set);
       __typeMapper.writeString(__out, allInternalUsers__typeInfo, allInternalUsers, allInternalUsers__is_set);
       __typeMapper.writeString(__out, allPartnerUsers__typeInfo, allPartnerUsers, allPartnerUsers__is_set);
       __typeMapper.writeObject(__out, group__typeInfo, group, group__is_set);
       __typeMapper.writeObject(__out, groups__typeInfo, groups, groups__is_set);
       __typeMapper.writeObject(__out, managerSubordinates__typeInfo, managerSubordinates, managerSubordinates__is_set);
       __typeMapper.writeObject(__out, managers__typeInfo, managers, managers__is_set);
       __typeMapper.writeObject(__out, portalRole__typeInfo, portalRole, portalRole__is_set);
       __typeMapper.writeObject(__out, portalRoleAndSubordinates__typeInfo, portalRoleAndSubordinates, portalRoleAndSubordinates__is_set);
       __typeMapper.writeObject(__out, queue__typeInfo, queue, queue__is_set);
       __typeMapper.writeObject(__out, role__typeInfo, role, role__is_set);
       __typeMapper.writeObject(__out, roleAndSubordinates__typeInfo, roleAndSubordinates, roleAndSubordinates__is_set);
       __typeMapper.writeObject(__out, roleAndSubordinatesInternal__typeInfo, roleAndSubordinatesInternal, roleAndSubordinatesInternal__is_set);
       __typeMapper.writeObject(__out, roles__typeInfo, roles, roles__is_set);
       __typeMapper.writeObject(__out, rolesAndSubordinates__typeInfo, rolesAndSubordinates, rolesAndSubordinates__is_set);
       __typeMapper.writeObject(__out, territories__typeInfo, territories, territories__is_set);
       __typeMapper.writeObject(__out, territoriesAndSubordinates__typeInfo, territoriesAndSubordinates, territoriesAndSubordinates__is_set);
       __typeMapper.writeObject(__out, territory__typeInfo, territory, territory__is_set);
       __typeMapper.writeObject(__out, territoryAndSubordinates__typeInfo, territoryAndSubordinates, territoryAndSubordinates__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAllCustomerPortalUsers(__in, __typeMapper);
        setAllInternalUsers(__in, __typeMapper);
        setAllPartnerUsers(__in, __typeMapper);
        setGroup(__in, __typeMapper);
        setGroups(__in, __typeMapper);
        setManagerSubordinates(__in, __typeMapper);
        setManagers(__in, __typeMapper);
        setPortalRole(__in, __typeMapper);
        setPortalRoleAndSubordinates(__in, __typeMapper);
        setQueue(__in, __typeMapper);
        setRole(__in, __typeMapper);
        setRoleAndSubordinates(__in, __typeMapper);
        setRoleAndSubordinatesInternal(__in, __typeMapper);
        setRoles(__in, __typeMapper);
        setRolesAndSubordinates(__in, __typeMapper);
        setTerritories(__in, __typeMapper);
        setTerritoriesAndSubordinates(__in, __typeMapper);
        setTerritory(__in, __typeMapper);
        setTerritoryAndSubordinates(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[SharedTo ");
      sb.append(" allCustomerPortalUsers='").append(com.sforce.ws.util.Verbose.toString(allCustomerPortalUsers)).append("'\n");
      sb.append(" allInternalUsers='").append(com.sforce.ws.util.Verbose.toString(allInternalUsers)).append("'\n");
      sb.append(" allPartnerUsers='").append(com.sforce.ws.util.Verbose.toString(allPartnerUsers)).append("'\n");
      sb.append(" group='").append(com.sforce.ws.util.Verbose.toString(group)).append("'\n");
      sb.append(" groups='").append(com.sforce.ws.util.Verbose.toString(groups)).append("'\n");
      sb.append(" managerSubordinates='").append(com.sforce.ws.util.Verbose.toString(managerSubordinates)).append("'\n");
      sb.append(" managers='").append(com.sforce.ws.util.Verbose.toString(managers)).append("'\n");
      sb.append(" portalRole='").append(com.sforce.ws.util.Verbose.toString(portalRole)).append("'\n");
      sb.append(" portalRoleAndSubordinates='").append(com.sforce.ws.util.Verbose.toString(portalRoleAndSubordinates)).append("'\n");
      sb.append(" queue='").append(com.sforce.ws.util.Verbose.toString(queue)).append("'\n");
      sb.append(" role='").append(com.sforce.ws.util.Verbose.toString(role)).append("'\n");
      sb.append(" roleAndSubordinates='").append(com.sforce.ws.util.Verbose.toString(roleAndSubordinates)).append("'\n");
      sb.append(" roleAndSubordinatesInternal='").append(com.sforce.ws.util.Verbose.toString(roleAndSubordinatesInternal)).append("'\n");
      sb.append(" roles='").append(com.sforce.ws.util.Verbose.toString(roles)).append("'\n");
      sb.append(" rolesAndSubordinates='").append(com.sforce.ws.util.Verbose.toString(rolesAndSubordinates)).append("'\n");
      sb.append(" territories='").append(com.sforce.ws.util.Verbose.toString(territories)).append("'\n");
      sb.append(" territoriesAndSubordinates='").append(com.sforce.ws.util.Verbose.toString(territoriesAndSubordinates)).append("'\n");
      sb.append(" territory='").append(com.sforce.ws.util.Verbose.toString(territory)).append("'\n");
      sb.append(" territoryAndSubordinates='").append(com.sforce.ws.util.Verbose.toString(territoryAndSubordinates)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
