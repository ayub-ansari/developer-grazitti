package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class WorkflowRule extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public WorkflowRule() {}

    /**
     * element : actions of type {http://soap.sforce.com/2006/04/metadata}WorkflowActionReference
     * java type: com.sforce.soap.metadata.WorkflowActionReference[]
     */
    private static final com.sforce.ws.bind.TypeInfo actions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","actions","http://soap.sforce.com/2006/04/metadata","WorkflowActionReference",0,-1,true);

    private boolean actions__is_set = false;

    private com.sforce.soap.metadata.WorkflowActionReference[] actions = new com.sforce.soap.metadata.WorkflowActionReference[0];

    public com.sforce.soap.metadata.WorkflowActionReference[] getActions() {
      return actions;
    }

    public void setActions(com.sforce.soap.metadata.WorkflowActionReference[] actions) {
      this.actions = actions;
      actions__is_set = true;
    }

    protected void setActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, actions__typeInfo)) {
        setActions((com.sforce.soap.metadata.WorkflowActionReference[])__typeMapper.readObject(__in, actions__typeInfo, com.sforce.soap.metadata.WorkflowActionReference[].class));
      }
    }

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean active__is_set = false;

    private boolean active;

    public boolean getActive() {
      return active;
    }

    public boolean isActive() {
      return active;
    }

    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : booleanFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo booleanFilter__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean booleanFilter__is_set = false;

    private java.lang.String booleanFilter;

    public java.lang.String getBooleanFilter() {
      return booleanFilter;
    }

    public void setBooleanFilter(java.lang.String booleanFilter) {
      this.booleanFilter = booleanFilter;
      booleanFilter__is_set = true;
    }

    protected void setBooleanFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, booleanFilter__typeInfo)) {
        setBooleanFilter(__typeMapper.readString(__in, booleanFilter__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : criteriaItems of type {http://soap.sforce.com/2006/04/metadata}FilterItem
     * java type: com.sforce.soap.metadata.FilterItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo criteriaItems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","criteriaItems","http://soap.sforce.com/2006/04/metadata","FilterItem",0,-1,true);

    private boolean criteriaItems__is_set = false;

    private com.sforce.soap.metadata.FilterItem[] criteriaItems = new com.sforce.soap.metadata.FilterItem[0];

    public com.sforce.soap.metadata.FilterItem[] getCriteriaItems() {
      return criteriaItems;
    }

    public void setCriteriaItems(com.sforce.soap.metadata.FilterItem[] criteriaItems) {
      this.criteriaItems = criteriaItems;
      criteriaItems__is_set = true;
    }

    protected void setCriteriaItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, criteriaItems__typeInfo)) {
        setCriteriaItems((com.sforce.soap.metadata.FilterItem[])__typeMapper.readObject(__in, criteriaItems__typeInfo, com.sforce.soap.metadata.FilterItem[].class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : formula of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo formula__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","formula","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean formula__is_set = false;

    private java.lang.String formula;

    public java.lang.String getFormula() {
      return formula;
    }

    public void setFormula(java.lang.String formula) {
      this.formula = formula;
      formula__is_set = true;
    }

    protected void setFormula(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, formula__typeInfo)) {
        setFormula(__typeMapper.readString(__in, formula__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : triggerType of type {http://soap.sforce.com/2006/04/metadata}WorkflowTriggerTypes
     * java type: com.sforce.soap.metadata.WorkflowTriggerTypes
     */
    private static final com.sforce.ws.bind.TypeInfo triggerType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","triggerType","http://soap.sforce.com/2006/04/metadata","WorkflowTriggerTypes",1,1,true);

    private boolean triggerType__is_set = false;

    private com.sforce.soap.metadata.WorkflowTriggerTypes triggerType;

    public com.sforce.soap.metadata.WorkflowTriggerTypes getTriggerType() {
      return triggerType;
    }

    public void setTriggerType(com.sforce.soap.metadata.WorkflowTriggerTypes triggerType) {
      this.triggerType = triggerType;
      triggerType__is_set = true;
    }

    protected void setTriggerType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, triggerType__typeInfo)) {
        setTriggerType((com.sforce.soap.metadata.WorkflowTriggerTypes)__typeMapper.readObject(__in, triggerType__typeInfo, com.sforce.soap.metadata.WorkflowTriggerTypes.class));
      }
    }

    /**
     * element : workflowTimeTriggers of type {http://soap.sforce.com/2006/04/metadata}WorkflowTimeTrigger
     * java type: com.sforce.soap.metadata.WorkflowTimeTrigger[]
     */
    private static final com.sforce.ws.bind.TypeInfo workflowTimeTriggers__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","workflowTimeTriggers","http://soap.sforce.com/2006/04/metadata","WorkflowTimeTrigger",0,-1,true);

    private boolean workflowTimeTriggers__is_set = false;

    private com.sforce.soap.metadata.WorkflowTimeTrigger[] workflowTimeTriggers = new com.sforce.soap.metadata.WorkflowTimeTrigger[0];

    public com.sforce.soap.metadata.WorkflowTimeTrigger[] getWorkflowTimeTriggers() {
      return workflowTimeTriggers;
    }

    public void setWorkflowTimeTriggers(com.sforce.soap.metadata.WorkflowTimeTrigger[] workflowTimeTriggers) {
      this.workflowTimeTriggers = workflowTimeTriggers;
      workflowTimeTriggers__is_set = true;
    }

    protected void setWorkflowTimeTriggers(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, workflowTimeTriggers__typeInfo)) {
        setWorkflowTimeTriggers((com.sforce.soap.metadata.WorkflowTimeTrigger[])__typeMapper.readObject(__in, workflowTimeTriggers__typeInfo, com.sforce.soap.metadata.WorkflowTimeTrigger[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "WorkflowRule");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, actions__typeInfo, actions, actions__is_set);
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeString(__out, booleanFilter__typeInfo, booleanFilter, booleanFilter__is_set);
       __typeMapper.writeObject(__out, criteriaItems__typeInfo, criteriaItems, criteriaItems__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, formula__typeInfo, formula, formula__is_set);
       __typeMapper.writeObject(__out, triggerType__typeInfo, triggerType, triggerType__is_set);
       __typeMapper.writeObject(__out, workflowTimeTriggers__typeInfo, workflowTimeTriggers, workflowTimeTriggers__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setActions(__in, __typeMapper);
        setActive(__in, __typeMapper);
        setBooleanFilter(__in, __typeMapper);
        setCriteriaItems(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setFormula(__in, __typeMapper);
        setTriggerType(__in, __typeMapper);
        setWorkflowTimeTriggers(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[WorkflowRule ");
      sb.append(super.toString());sb.append(" actions='").append(com.sforce.ws.util.Verbose.toString(actions)).append("'\n");
      sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" booleanFilter='").append(com.sforce.ws.util.Verbose.toString(booleanFilter)).append("'\n");
      sb.append(" criteriaItems='").append(com.sforce.ws.util.Verbose.toString(criteriaItems)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" formula='").append(com.sforce.ws.util.Verbose.toString(formula)).append("'\n");
      sb.append(" triggerType='").append(com.sforce.ws.util.Verbose.toString(triggerType)).append("'\n");
      sb.append(" workflowTimeTriggers='").append(com.sforce.ws.util.Verbose.toString(workflowTimeTriggers)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
