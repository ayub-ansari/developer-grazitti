package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ForecastRangeSettings implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ForecastRangeSettings() {}

    /**
     * element : beginning of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo beginning__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","beginning","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean beginning__is_set = false;

    private int beginning;

    public int getBeginning() {
      return beginning;
    }

    public void setBeginning(int beginning) {
      this.beginning = beginning;
      beginning__is_set = true;
    }

    protected void setBeginning(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, beginning__typeInfo)) {
        setBeginning((int)__typeMapper.readInt(__in, beginning__typeInfo, int.class));
      }
    }

    /**
     * element : displaying of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo displaying__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","displaying","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean displaying__is_set = false;

    private int displaying;

    public int getDisplaying() {
      return displaying;
    }

    public void setDisplaying(int displaying) {
      this.displaying = displaying;
      displaying__is_set = true;
    }

    protected void setDisplaying(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, displaying__typeInfo)) {
        setDisplaying((int)__typeMapper.readInt(__in, displaying__typeInfo, int.class));
      }
    }

    /**
     * element : periodType of type {http://soap.sforce.com/2006/04/metadata}PeriodTypes
     * java type: com.sforce.soap.metadata.PeriodTypes
     */
    private static final com.sforce.ws.bind.TypeInfo periodType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","periodType","http://soap.sforce.com/2006/04/metadata","PeriodTypes",1,1,true);

    private boolean periodType__is_set = false;

    private com.sforce.soap.metadata.PeriodTypes periodType;

    public com.sforce.soap.metadata.PeriodTypes getPeriodType() {
      return periodType;
    }

    public void setPeriodType(com.sforce.soap.metadata.PeriodTypes periodType) {
      this.periodType = periodType;
      periodType__is_set = true;
    }

    protected void setPeriodType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, periodType__typeInfo)) {
        setPeriodType((com.sforce.soap.metadata.PeriodTypes)__typeMapper.readObject(__in, periodType__typeInfo, com.sforce.soap.metadata.PeriodTypes.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeInt(__out, beginning__typeInfo, beginning, beginning__is_set);
       __typeMapper.writeInt(__out, displaying__typeInfo, displaying, displaying__is_set);
       __typeMapper.writeObject(__out, periodType__typeInfo, periodType, periodType__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setBeginning(__in, __typeMapper);
        setDisplaying(__in, __typeMapper);
        setPeriodType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ForecastRangeSettings ");
      sb.append(" beginning='").append(com.sforce.ws.util.Verbose.toString(beginning)).append("'\n");
      sb.append(" displaying='").append(com.sforce.ws.util.Verbose.toString(displaying)).append("'\n");
      sb.append(" periodType='").append(com.sforce.ws.util.Verbose.toString(periodType)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
