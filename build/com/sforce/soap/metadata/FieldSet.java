package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FieldSet extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public FieldSet() {}

    /**
     * element : availableFields of type {http://soap.sforce.com/2006/04/metadata}FieldSetItem
     * java type: com.sforce.soap.metadata.FieldSetItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo availableFields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","availableFields","http://soap.sforce.com/2006/04/metadata","FieldSetItem",0,-1,true);

    private boolean availableFields__is_set = false;

    private com.sforce.soap.metadata.FieldSetItem[] availableFields = new com.sforce.soap.metadata.FieldSetItem[0];

    public com.sforce.soap.metadata.FieldSetItem[] getAvailableFields() {
      return availableFields;
    }

    public void setAvailableFields(com.sforce.soap.metadata.FieldSetItem[] availableFields) {
      this.availableFields = availableFields;
      availableFields__is_set = true;
    }

    protected void setAvailableFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, availableFields__typeInfo)) {
        setAvailableFields((com.sforce.soap.metadata.FieldSetItem[])__typeMapper.readObject(__in, availableFields__typeInfo, com.sforce.soap.metadata.FieldSetItem[].class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : displayedFields of type {http://soap.sforce.com/2006/04/metadata}FieldSetItem
     * java type: com.sforce.soap.metadata.FieldSetItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo displayedFields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","displayedFields","http://soap.sforce.com/2006/04/metadata","FieldSetItem",0,-1,true);

    private boolean displayedFields__is_set = false;

    private com.sforce.soap.metadata.FieldSetItem[] displayedFields = new com.sforce.soap.metadata.FieldSetItem[0];

    public com.sforce.soap.metadata.FieldSetItem[] getDisplayedFields() {
      return displayedFields;
    }

    public void setDisplayedFields(com.sforce.soap.metadata.FieldSetItem[] displayedFields) {
      this.displayedFields = displayedFields;
      displayedFields__is_set = true;
    }

    protected void setDisplayedFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, displayedFields__typeInfo)) {
        setDisplayedFields((com.sforce.soap.metadata.FieldSetItem[])__typeMapper.readObject(__in, displayedFields__typeInfo, com.sforce.soap.metadata.FieldSetItem[].class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "FieldSet");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, availableFields__typeInfo, availableFields, availableFields__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeObject(__out, displayedFields__typeInfo, displayedFields, displayedFields__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAvailableFields(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setDisplayedFields(__in, __typeMapper);
        setLabel(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FieldSet ");
      sb.append(super.toString());sb.append(" availableFields='").append(com.sforce.ws.util.Verbose.toString(availableFields)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" displayedFields='").append(com.sforce.ws.util.Verbose.toString(displayedFields)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
