package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ManagedTopic extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public ManagedTopic() {}

    /**
     * element : managedTopicType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo managedTopicType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","managedTopicType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean managedTopicType__is_set = false;

    private java.lang.String managedTopicType;

    public java.lang.String getManagedTopicType() {
      return managedTopicType;
    }

    public void setManagedTopicType(java.lang.String managedTopicType) {
      this.managedTopicType = managedTopicType;
      managedTopicType__is_set = true;
    }

    protected void setManagedTopicType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, managedTopicType__typeInfo)) {
        setManagedTopicType(__typeMapper.readString(__in, managedTopicType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : parentName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo parentName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","parentName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean parentName__is_set = false;

    private java.lang.String parentName;

    public java.lang.String getParentName() {
      return parentName;
    }

    public void setParentName(java.lang.String parentName) {
      this.parentName = parentName;
      parentName__is_set = true;
    }

    protected void setParentName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, parentName__typeInfo)) {
        setParentName(__typeMapper.readString(__in, parentName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : position of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo position__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","position","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean position__is_set = false;

    private int position;

    public int getPosition() {
      return position;
    }

    public void setPosition(int position) {
      this.position = position;
      position__is_set = true;
    }

    protected void setPosition(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, position__typeInfo)) {
        setPosition((int)__typeMapper.readInt(__in, position__typeInfo, int.class));
      }
    }

    /**
     * element : topicDescription of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo topicDescription__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","topicDescription","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean topicDescription__is_set = false;

    private java.lang.String topicDescription;

    public java.lang.String getTopicDescription() {
      return topicDescription;
    }

    public void setTopicDescription(java.lang.String topicDescription) {
      this.topicDescription = topicDescription;
      topicDescription__is_set = true;
    }

    protected void setTopicDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, topicDescription__typeInfo)) {
        setTopicDescription(__typeMapper.readString(__in, topicDescription__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "ManagedTopic");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, managedTopicType__typeInfo, managedTopicType, managedTopicType__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeString(__out, parentName__typeInfo, parentName, parentName__is_set);
       __typeMapper.writeInt(__out, position__typeInfo, position, position__is_set);
       __typeMapper.writeString(__out, topicDescription__typeInfo, topicDescription, topicDescription__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setManagedTopicType(__in, __typeMapper);
        setName(__in, __typeMapper);
        setParentName(__in, __typeMapper);
        setPosition(__in, __typeMapper);
        setTopicDescription(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ManagedTopic ");
      sb.append(super.toString());sb.append(" managedTopicType='").append(com.sforce.ws.util.Verbose.toString(managedTopicType)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" parentName='").append(com.sforce.ws.util.Verbose.toString(parentName)).append("'\n");
      sb.append(" position='").append(com.sforce.ws.util.Verbose.toString(position)).append("'\n");
      sb.append(" topicDescription='").append(com.sforce.ws.util.Verbose.toString(topicDescription)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
