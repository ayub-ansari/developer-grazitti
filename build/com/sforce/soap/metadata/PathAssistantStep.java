package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class PathAssistantStep implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public PathAssistantStep() {}

    /**
     * element : fieldNames of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo fieldNames__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fieldNames","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean fieldNames__is_set = false;

    private java.lang.String[] fieldNames = new java.lang.String[0];

    public java.lang.String[] getFieldNames() {
      return fieldNames;
    }

    public void setFieldNames(java.lang.String[] fieldNames) {
      this.fieldNames = fieldNames;
      fieldNames__is_set = true;
    }

    protected void setFieldNames(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fieldNames__typeInfo)) {
        setFieldNames((java.lang.String[])__typeMapper.readObject(__in, fieldNames__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : info of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo info__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","info","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean info__is_set = false;

    private java.lang.String info;

    public java.lang.String getInfo() {
      return info;
    }

    public void setInfo(java.lang.String info) {
      this.info = info;
      info__is_set = true;
    }

    protected void setInfo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, info__typeInfo)) {
        setInfo(__typeMapper.readString(__in, info__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : picklistValueName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo picklistValueName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","picklistValueName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean picklistValueName__is_set = false;

    private java.lang.String picklistValueName;

    public java.lang.String getPicklistValueName() {
      return picklistValueName;
    }

    public void setPicklistValueName(java.lang.String picklistValueName) {
      this.picklistValueName = picklistValueName;
      picklistValueName__is_set = true;
    }

    protected void setPicklistValueName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, picklistValueName__typeInfo)) {
        setPicklistValueName(__typeMapper.readString(__in, picklistValueName__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, fieldNames__typeInfo, fieldNames, fieldNames__is_set);
       __typeMapper.writeString(__out, info__typeInfo, info, info__is_set);
       __typeMapper.writeString(__out, picklistValueName__typeInfo, picklistValueName, picklistValueName__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setFieldNames(__in, __typeMapper);
        setInfo(__in, __typeMapper);
        setPicklistValueName(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[PathAssistantStep ");
      sb.append(" fieldNames='").append(com.sforce.ws.util.Verbose.toString(fieldNames)).append("'\n");
      sb.append(" info='").append(com.sforce.ws.util.Verbose.toString(info)).append("'\n");
      sb.append(" picklistValueName='").append(com.sforce.ws.util.Verbose.toString(picklistValueName)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
