package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlowChoiceUserInput extends com.sforce.soap.metadata.FlowBaseElement {

    /**
     * Constructor
     */
    public FlowChoiceUserInput() {}

    /**
     * element : isRequired of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isRequired__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isRequired","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean isRequired__is_set = false;

    private boolean isRequired;

    public boolean getIsRequired() {
      return isRequired;
    }

    public boolean isIsRequired() {
      return isRequired;
    }

    public void setIsRequired(boolean isRequired) {
      this.isRequired = isRequired;
      isRequired__is_set = true;
    }

    protected void setIsRequired(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, isRequired__typeInfo)) {
        setIsRequired(__typeMapper.readBoolean(__in, isRequired__typeInfo, boolean.class));
      }
    }

    /**
     * element : promptText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo promptText__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","promptText","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean promptText__is_set = false;

    private java.lang.String promptText;

    public java.lang.String getPromptText() {
      return promptText;
    }

    public void setPromptText(java.lang.String promptText) {
      this.promptText = promptText;
      promptText__is_set = true;
    }

    protected void setPromptText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, promptText__typeInfo)) {
        setPromptText(__typeMapper.readString(__in, promptText__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : validationRule of type {http://soap.sforce.com/2006/04/metadata}FlowInputValidationRule
     * java type: com.sforce.soap.metadata.FlowInputValidationRule
     */
    private static final com.sforce.ws.bind.TypeInfo validationRule__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","validationRule","http://soap.sforce.com/2006/04/metadata","FlowInputValidationRule",0,1,true);

    private boolean validationRule__is_set = false;

    private com.sforce.soap.metadata.FlowInputValidationRule validationRule;

    public com.sforce.soap.metadata.FlowInputValidationRule getValidationRule() {
      return validationRule;
    }

    public void setValidationRule(com.sforce.soap.metadata.FlowInputValidationRule validationRule) {
      this.validationRule = validationRule;
      validationRule__is_set = true;
    }

    protected void setValidationRule(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, validationRule__typeInfo)) {
        setValidationRule((com.sforce.soap.metadata.FlowInputValidationRule)__typeMapper.readObject(__in, validationRule__typeInfo, com.sforce.soap.metadata.FlowInputValidationRule.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "FlowChoiceUserInput");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, isRequired__typeInfo, isRequired, isRequired__is_set);
       __typeMapper.writeString(__out, promptText__typeInfo, promptText, promptText__is_set);
       __typeMapper.writeObject(__out, validationRule__typeInfo, validationRule, validationRule__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setIsRequired(__in, __typeMapper);
        setPromptText(__in, __typeMapper);
        setValidationRule(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowChoiceUserInput ");
      sb.append(super.toString());sb.append(" isRequired='").append(com.sforce.ws.util.Verbose.toString(isRequired)).append("'\n");
      sb.append(" promptText='").append(com.sforce.ws.util.Verbose.toString(promptText)).append("'\n");
      sb.append(" validationRule='").append(com.sforce.ws.util.Verbose.toString(validationRule)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
