package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ForecastingSettings extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public ForecastingSettings() {}

    /**
     * element : displayCurrency of type {http://soap.sforce.com/2006/04/metadata}DisplayCurrency
     * java type: com.sforce.soap.metadata.DisplayCurrency
     */
    private static final com.sforce.ws.bind.TypeInfo displayCurrency__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","displayCurrency","http://soap.sforce.com/2006/04/metadata","DisplayCurrency",0,1,true);

    private boolean displayCurrency__is_set = false;

    private com.sforce.soap.metadata.DisplayCurrency displayCurrency;

    public com.sforce.soap.metadata.DisplayCurrency getDisplayCurrency() {
      return displayCurrency;
    }

    public void setDisplayCurrency(com.sforce.soap.metadata.DisplayCurrency displayCurrency) {
      this.displayCurrency = displayCurrency;
      displayCurrency__is_set = true;
    }

    protected void setDisplayCurrency(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, displayCurrency__typeInfo)) {
        setDisplayCurrency((com.sforce.soap.metadata.DisplayCurrency)__typeMapper.readObject(__in, displayCurrency__typeInfo, com.sforce.soap.metadata.DisplayCurrency.class));
      }
    }

    /**
     * element : enableForecasts of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableForecasts__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableForecasts","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableForecasts__is_set = false;

    private boolean enableForecasts;

    public boolean getEnableForecasts() {
      return enableForecasts;
    }

    public boolean isEnableForecasts() {
      return enableForecasts;
    }

    public void setEnableForecasts(boolean enableForecasts) {
      this.enableForecasts = enableForecasts;
      enableForecasts__is_set = true;
    }

    protected void setEnableForecasts(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableForecasts__typeInfo)) {
        setEnableForecasts(__typeMapper.readBoolean(__in, enableForecasts__typeInfo, boolean.class));
      }
    }

    /**
     * element : forecastingCategoryMappings of type {http://soap.sforce.com/2006/04/metadata}ForecastingCategoryMapping
     * java type: com.sforce.soap.metadata.ForecastingCategoryMapping[]
     */
    private static final com.sforce.ws.bind.TypeInfo forecastingCategoryMappings__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","forecastingCategoryMappings","http://soap.sforce.com/2006/04/metadata","ForecastingCategoryMapping",0,-1,true);

    private boolean forecastingCategoryMappings__is_set = false;

    private com.sforce.soap.metadata.ForecastingCategoryMapping[] forecastingCategoryMappings = new com.sforce.soap.metadata.ForecastingCategoryMapping[0];

    public com.sforce.soap.metadata.ForecastingCategoryMapping[] getForecastingCategoryMappings() {
      return forecastingCategoryMappings;
    }

    public void setForecastingCategoryMappings(com.sforce.soap.metadata.ForecastingCategoryMapping[] forecastingCategoryMappings) {
      this.forecastingCategoryMappings = forecastingCategoryMappings;
      forecastingCategoryMappings__is_set = true;
    }

    protected void setForecastingCategoryMappings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, forecastingCategoryMappings__typeInfo)) {
        setForecastingCategoryMappings((com.sforce.soap.metadata.ForecastingCategoryMapping[])__typeMapper.readObject(__in, forecastingCategoryMappings__typeInfo, com.sforce.soap.metadata.ForecastingCategoryMapping[].class));
      }
    }

    /**
     * element : forecastingTypeSettings of type {http://soap.sforce.com/2006/04/metadata}ForecastingTypeSettings
     * java type: com.sforce.soap.metadata.ForecastingTypeSettings[]
     */
    private static final com.sforce.ws.bind.TypeInfo forecastingTypeSettings__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","forecastingTypeSettings","http://soap.sforce.com/2006/04/metadata","ForecastingTypeSettings",0,-1,true);

    private boolean forecastingTypeSettings__is_set = false;

    private com.sforce.soap.metadata.ForecastingTypeSettings[] forecastingTypeSettings = new com.sforce.soap.metadata.ForecastingTypeSettings[0];

    public com.sforce.soap.metadata.ForecastingTypeSettings[] getForecastingTypeSettings() {
      return forecastingTypeSettings;
    }

    public void setForecastingTypeSettings(com.sforce.soap.metadata.ForecastingTypeSettings[] forecastingTypeSettings) {
      this.forecastingTypeSettings = forecastingTypeSettings;
      forecastingTypeSettings__is_set = true;
    }

    protected void setForecastingTypeSettings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, forecastingTypeSettings__typeInfo)) {
        setForecastingTypeSettings((com.sforce.soap.metadata.ForecastingTypeSettings[])__typeMapper.readObject(__in, forecastingTypeSettings__typeInfo, com.sforce.soap.metadata.ForecastingTypeSettings[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "ForecastingSettings");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, displayCurrency__typeInfo, displayCurrency, displayCurrency__is_set);
       __typeMapper.writeBoolean(__out, enableForecasts__typeInfo, enableForecasts, enableForecasts__is_set);
       __typeMapper.writeObject(__out, forecastingCategoryMappings__typeInfo, forecastingCategoryMappings, forecastingCategoryMappings__is_set);
       __typeMapper.writeObject(__out, forecastingTypeSettings__typeInfo, forecastingTypeSettings, forecastingTypeSettings__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setDisplayCurrency(__in, __typeMapper);
        setEnableForecasts(__in, __typeMapper);
        setForecastingCategoryMappings(__in, __typeMapper);
        setForecastingTypeSettings(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ForecastingSettings ");
      sb.append(super.toString());sb.append(" displayCurrency='").append(com.sforce.ws.util.Verbose.toString(displayCurrency)).append("'\n");
      sb.append(" enableForecasts='").append(com.sforce.ws.util.Verbose.toString(enableForecasts)).append("'\n");
      sb.append(" forecastingCategoryMappings='").append(com.sforce.ws.util.Verbose.toString(forecastingCategoryMappings)).append("'\n");
      sb.append(" forecastingTypeSettings='").append(com.sforce.ws.util.Verbose.toString(forecastingTypeSettings)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
