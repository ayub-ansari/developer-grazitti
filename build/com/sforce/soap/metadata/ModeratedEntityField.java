package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ModeratedEntityField implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ModeratedEntityField() {}

    /**
     * element : entityName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo entityName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","entityName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean entityName__is_set = false;

    private java.lang.String entityName;

    public java.lang.String getEntityName() {
      return entityName;
    }

    public void setEntityName(java.lang.String entityName) {
      this.entityName = entityName;
      entityName__is_set = true;
    }

    protected void setEntityName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, entityName__typeInfo)) {
        setEntityName(__typeMapper.readString(__in, entityName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : fieldName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo fieldName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","fieldName","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean fieldName__is_set = false;

    private java.lang.String fieldName;

    public java.lang.String getFieldName() {
      return fieldName;
    }

    public void setFieldName(java.lang.String fieldName) {
      this.fieldName = fieldName;
      fieldName__is_set = true;
    }

    protected void setFieldName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fieldName__typeInfo)) {
        setFieldName(__typeMapper.readString(__in, fieldName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : keywordList of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo keywordList__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","keywordList","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean keywordList__is_set = false;

    private java.lang.String keywordList;

    public java.lang.String getKeywordList() {
      return keywordList;
    }

    public void setKeywordList(java.lang.String keywordList) {
      this.keywordList = keywordList;
      keywordList__is_set = true;
    }

    protected void setKeywordList(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, keywordList__typeInfo)) {
        setKeywordList(__typeMapper.readString(__in, keywordList__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, entityName__typeInfo, entityName, entityName__is_set);
       __typeMapper.writeString(__out, fieldName__typeInfo, fieldName, fieldName__is_set);
       __typeMapper.writeString(__out, keywordList__typeInfo, keywordList, keywordList__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setEntityName(__in, __typeMapper);
        setFieldName(__in, __typeMapper);
        setKeywordList(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ModeratedEntityField ");
      sb.append(" entityName='").append(com.sforce.ws.util.Verbose.toString(entityName)).append("'\n");
      sb.append(" fieldName='").append(com.sforce.ws.util.Verbose.toString(fieldName)).append("'\n");
      sb.append(" keywordList='").append(com.sforce.ws.util.Verbose.toString(keywordList)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
