package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class SharingCriteriaRule extends com.sforce.soap.metadata.SharingBaseRule {

    /**
     * Constructor
     */
    public SharingCriteriaRule() {}

    /**
     * element : booleanFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo booleanFilter__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean booleanFilter__is_set = false;

    private java.lang.String booleanFilter;

    public java.lang.String getBooleanFilter() {
      return booleanFilter;
    }

    public void setBooleanFilter(java.lang.String booleanFilter) {
      this.booleanFilter = booleanFilter;
      booleanFilter__is_set = true;
    }

    protected void setBooleanFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, booleanFilter__typeInfo)) {
        setBooleanFilter(__typeMapper.readString(__in, booleanFilter__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : criteriaItems of type {http://soap.sforce.com/2006/04/metadata}FilterItem
     * java type: com.sforce.soap.metadata.FilterItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo criteriaItems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","criteriaItems","http://soap.sforce.com/2006/04/metadata","FilterItem",0,-1,true);

    private boolean criteriaItems__is_set = false;

    private com.sforce.soap.metadata.FilterItem[] criteriaItems = new com.sforce.soap.metadata.FilterItem[0];

    public com.sforce.soap.metadata.FilterItem[] getCriteriaItems() {
      return criteriaItems;
    }

    public void setCriteriaItems(com.sforce.soap.metadata.FilterItem[] criteriaItems) {
      this.criteriaItems = criteriaItems;
      criteriaItems__is_set = true;
    }

    protected void setCriteriaItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, criteriaItems__typeInfo)) {
        setCriteriaItems((com.sforce.soap.metadata.FilterItem[])__typeMapper.readObject(__in, criteriaItems__typeInfo, com.sforce.soap.metadata.FilterItem[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "SharingCriteriaRule");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, booleanFilter__typeInfo, booleanFilter, booleanFilter__is_set);
       __typeMapper.writeObject(__out, criteriaItems__typeInfo, criteriaItems, criteriaItems__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setBooleanFilter(__in, __typeMapper);
        setCriteriaItems(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[SharingCriteriaRule ");
      sb.append(super.toString());sb.append(" booleanFilter='").append(com.sforce.ws.util.Verbose.toString(booleanFilter)).append("'\n");
      sb.append(" criteriaItems='").append(com.sforce.ws.util.Verbose.toString(criteriaItems)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
