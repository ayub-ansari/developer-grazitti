package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class EntitlementSettings extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public EntitlementSettings() {}

    /**
     * element : assetLookupLimitedToActiveEntitlementsOnAccount of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo assetLookupLimitedToActiveEntitlementsOnAccount__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","assetLookupLimitedToActiveEntitlementsOnAccount","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean assetLookupLimitedToActiveEntitlementsOnAccount__is_set = false;

    private boolean assetLookupLimitedToActiveEntitlementsOnAccount;

    public boolean getAssetLookupLimitedToActiveEntitlementsOnAccount() {
      return assetLookupLimitedToActiveEntitlementsOnAccount;
    }

    public boolean isAssetLookupLimitedToActiveEntitlementsOnAccount() {
      return assetLookupLimitedToActiveEntitlementsOnAccount;
    }

    public void setAssetLookupLimitedToActiveEntitlementsOnAccount(boolean assetLookupLimitedToActiveEntitlementsOnAccount) {
      this.assetLookupLimitedToActiveEntitlementsOnAccount = assetLookupLimitedToActiveEntitlementsOnAccount;
      assetLookupLimitedToActiveEntitlementsOnAccount__is_set = true;
    }

    protected void setAssetLookupLimitedToActiveEntitlementsOnAccount(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, assetLookupLimitedToActiveEntitlementsOnAccount__typeInfo)) {
        setAssetLookupLimitedToActiveEntitlementsOnAccount(__typeMapper.readBoolean(__in, assetLookupLimitedToActiveEntitlementsOnAccount__typeInfo, boolean.class));
      }
    }

    /**
     * element : assetLookupLimitedToActiveEntitlementsOnContact of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo assetLookupLimitedToActiveEntitlementsOnContact__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","assetLookupLimitedToActiveEntitlementsOnContact","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean assetLookupLimitedToActiveEntitlementsOnContact__is_set = false;

    private boolean assetLookupLimitedToActiveEntitlementsOnContact;

    public boolean getAssetLookupLimitedToActiveEntitlementsOnContact() {
      return assetLookupLimitedToActiveEntitlementsOnContact;
    }

    public boolean isAssetLookupLimitedToActiveEntitlementsOnContact() {
      return assetLookupLimitedToActiveEntitlementsOnContact;
    }

    public void setAssetLookupLimitedToActiveEntitlementsOnContact(boolean assetLookupLimitedToActiveEntitlementsOnContact) {
      this.assetLookupLimitedToActiveEntitlementsOnContact = assetLookupLimitedToActiveEntitlementsOnContact;
      assetLookupLimitedToActiveEntitlementsOnContact__is_set = true;
    }

    protected void setAssetLookupLimitedToActiveEntitlementsOnContact(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, assetLookupLimitedToActiveEntitlementsOnContact__typeInfo)) {
        setAssetLookupLimitedToActiveEntitlementsOnContact(__typeMapper.readBoolean(__in, assetLookupLimitedToActiveEntitlementsOnContact__typeInfo, boolean.class));
      }
    }

    /**
     * element : assetLookupLimitedToSameAccount of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo assetLookupLimitedToSameAccount__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","assetLookupLimitedToSameAccount","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean assetLookupLimitedToSameAccount__is_set = false;

    private boolean assetLookupLimitedToSameAccount;

    public boolean getAssetLookupLimitedToSameAccount() {
      return assetLookupLimitedToSameAccount;
    }

    public boolean isAssetLookupLimitedToSameAccount() {
      return assetLookupLimitedToSameAccount;
    }

    public void setAssetLookupLimitedToSameAccount(boolean assetLookupLimitedToSameAccount) {
      this.assetLookupLimitedToSameAccount = assetLookupLimitedToSameAccount;
      assetLookupLimitedToSameAccount__is_set = true;
    }

    protected void setAssetLookupLimitedToSameAccount(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, assetLookupLimitedToSameAccount__typeInfo)) {
        setAssetLookupLimitedToSameAccount(__typeMapper.readBoolean(__in, assetLookupLimitedToSameAccount__typeInfo, boolean.class));
      }
    }

    /**
     * element : assetLookupLimitedToSameContact of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo assetLookupLimitedToSameContact__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","assetLookupLimitedToSameContact","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean assetLookupLimitedToSameContact__is_set = false;

    private boolean assetLookupLimitedToSameContact;

    public boolean getAssetLookupLimitedToSameContact() {
      return assetLookupLimitedToSameContact;
    }

    public boolean isAssetLookupLimitedToSameContact() {
      return assetLookupLimitedToSameContact;
    }

    public void setAssetLookupLimitedToSameContact(boolean assetLookupLimitedToSameContact) {
      this.assetLookupLimitedToSameContact = assetLookupLimitedToSameContact;
      assetLookupLimitedToSameContact__is_set = true;
    }

    protected void setAssetLookupLimitedToSameContact(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, assetLookupLimitedToSameContact__typeInfo)) {
        setAssetLookupLimitedToSameContact(__typeMapper.readBoolean(__in, assetLookupLimitedToSameContact__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableEntitlementVersioning of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableEntitlementVersioning__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableEntitlementVersioning","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean enableEntitlementVersioning__is_set = false;

    private boolean enableEntitlementVersioning;

    public boolean getEnableEntitlementVersioning() {
      return enableEntitlementVersioning;
    }

    public boolean isEnableEntitlementVersioning() {
      return enableEntitlementVersioning;
    }

    public void setEnableEntitlementVersioning(boolean enableEntitlementVersioning) {
      this.enableEntitlementVersioning = enableEntitlementVersioning;
      enableEntitlementVersioning__is_set = true;
    }

    protected void setEnableEntitlementVersioning(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, enableEntitlementVersioning__typeInfo)) {
        setEnableEntitlementVersioning(__typeMapper.readBoolean(__in, enableEntitlementVersioning__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableEntitlements of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableEntitlements__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableEntitlements","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean enableEntitlements__is_set = false;

    private boolean enableEntitlements;

    public boolean getEnableEntitlements() {
      return enableEntitlements;
    }

    public boolean isEnableEntitlements() {
      return enableEntitlements;
    }

    public void setEnableEntitlements(boolean enableEntitlements) {
      this.enableEntitlements = enableEntitlements;
      enableEntitlements__is_set = true;
    }

    protected void setEnableEntitlements(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, enableEntitlements__typeInfo)) {
        setEnableEntitlements(__typeMapper.readBoolean(__in, enableEntitlements__typeInfo, boolean.class));
      }
    }

    /**
     * element : entitlementLookupLimitedToActiveStatus of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo entitlementLookupLimitedToActiveStatus__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","entitlementLookupLimitedToActiveStatus","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean entitlementLookupLimitedToActiveStatus__is_set = false;

    private boolean entitlementLookupLimitedToActiveStatus;

    public boolean getEntitlementLookupLimitedToActiveStatus() {
      return entitlementLookupLimitedToActiveStatus;
    }

    public boolean isEntitlementLookupLimitedToActiveStatus() {
      return entitlementLookupLimitedToActiveStatus;
    }

    public void setEntitlementLookupLimitedToActiveStatus(boolean entitlementLookupLimitedToActiveStatus) {
      this.entitlementLookupLimitedToActiveStatus = entitlementLookupLimitedToActiveStatus;
      entitlementLookupLimitedToActiveStatus__is_set = true;
    }

    protected void setEntitlementLookupLimitedToActiveStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, entitlementLookupLimitedToActiveStatus__typeInfo)) {
        setEntitlementLookupLimitedToActiveStatus(__typeMapper.readBoolean(__in, entitlementLookupLimitedToActiveStatus__typeInfo, boolean.class));
      }
    }

    /**
     * element : entitlementLookupLimitedToSameAccount of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo entitlementLookupLimitedToSameAccount__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","entitlementLookupLimitedToSameAccount","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean entitlementLookupLimitedToSameAccount__is_set = false;

    private boolean entitlementLookupLimitedToSameAccount;

    public boolean getEntitlementLookupLimitedToSameAccount() {
      return entitlementLookupLimitedToSameAccount;
    }

    public boolean isEntitlementLookupLimitedToSameAccount() {
      return entitlementLookupLimitedToSameAccount;
    }

    public void setEntitlementLookupLimitedToSameAccount(boolean entitlementLookupLimitedToSameAccount) {
      this.entitlementLookupLimitedToSameAccount = entitlementLookupLimitedToSameAccount;
      entitlementLookupLimitedToSameAccount__is_set = true;
    }

    protected void setEntitlementLookupLimitedToSameAccount(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, entitlementLookupLimitedToSameAccount__typeInfo)) {
        setEntitlementLookupLimitedToSameAccount(__typeMapper.readBoolean(__in, entitlementLookupLimitedToSameAccount__typeInfo, boolean.class));
      }
    }

    /**
     * element : entitlementLookupLimitedToSameAsset of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo entitlementLookupLimitedToSameAsset__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","entitlementLookupLimitedToSameAsset","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean entitlementLookupLimitedToSameAsset__is_set = false;

    private boolean entitlementLookupLimitedToSameAsset;

    public boolean getEntitlementLookupLimitedToSameAsset() {
      return entitlementLookupLimitedToSameAsset;
    }

    public boolean isEntitlementLookupLimitedToSameAsset() {
      return entitlementLookupLimitedToSameAsset;
    }

    public void setEntitlementLookupLimitedToSameAsset(boolean entitlementLookupLimitedToSameAsset) {
      this.entitlementLookupLimitedToSameAsset = entitlementLookupLimitedToSameAsset;
      entitlementLookupLimitedToSameAsset__is_set = true;
    }

    protected void setEntitlementLookupLimitedToSameAsset(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, entitlementLookupLimitedToSameAsset__typeInfo)) {
        setEntitlementLookupLimitedToSameAsset(__typeMapper.readBoolean(__in, entitlementLookupLimitedToSameAsset__typeInfo, boolean.class));
      }
    }

    /**
     * element : entitlementLookupLimitedToSameContact of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo entitlementLookupLimitedToSameContact__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","entitlementLookupLimitedToSameContact","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean entitlementLookupLimitedToSameContact__is_set = false;

    private boolean entitlementLookupLimitedToSameContact;

    public boolean getEntitlementLookupLimitedToSameContact() {
      return entitlementLookupLimitedToSameContact;
    }

    public boolean isEntitlementLookupLimitedToSameContact() {
      return entitlementLookupLimitedToSameContact;
    }

    public void setEntitlementLookupLimitedToSameContact(boolean entitlementLookupLimitedToSameContact) {
      this.entitlementLookupLimitedToSameContact = entitlementLookupLimitedToSameContact;
      entitlementLookupLimitedToSameContact__is_set = true;
    }

    protected void setEntitlementLookupLimitedToSameContact(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, entitlementLookupLimitedToSameContact__typeInfo)) {
        setEntitlementLookupLimitedToSameContact(__typeMapper.readBoolean(__in, entitlementLookupLimitedToSameContact__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "EntitlementSettings");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, assetLookupLimitedToActiveEntitlementsOnAccount__typeInfo, assetLookupLimitedToActiveEntitlementsOnAccount, assetLookupLimitedToActiveEntitlementsOnAccount__is_set);
       __typeMapper.writeBoolean(__out, assetLookupLimitedToActiveEntitlementsOnContact__typeInfo, assetLookupLimitedToActiveEntitlementsOnContact, assetLookupLimitedToActiveEntitlementsOnContact__is_set);
       __typeMapper.writeBoolean(__out, assetLookupLimitedToSameAccount__typeInfo, assetLookupLimitedToSameAccount, assetLookupLimitedToSameAccount__is_set);
       __typeMapper.writeBoolean(__out, assetLookupLimitedToSameContact__typeInfo, assetLookupLimitedToSameContact, assetLookupLimitedToSameContact__is_set);
       __typeMapper.writeBoolean(__out, enableEntitlementVersioning__typeInfo, enableEntitlementVersioning, enableEntitlementVersioning__is_set);
       __typeMapper.writeBoolean(__out, enableEntitlements__typeInfo, enableEntitlements, enableEntitlements__is_set);
       __typeMapper.writeBoolean(__out, entitlementLookupLimitedToActiveStatus__typeInfo, entitlementLookupLimitedToActiveStatus, entitlementLookupLimitedToActiveStatus__is_set);
       __typeMapper.writeBoolean(__out, entitlementLookupLimitedToSameAccount__typeInfo, entitlementLookupLimitedToSameAccount, entitlementLookupLimitedToSameAccount__is_set);
       __typeMapper.writeBoolean(__out, entitlementLookupLimitedToSameAsset__typeInfo, entitlementLookupLimitedToSameAsset, entitlementLookupLimitedToSameAsset__is_set);
       __typeMapper.writeBoolean(__out, entitlementLookupLimitedToSameContact__typeInfo, entitlementLookupLimitedToSameContact, entitlementLookupLimitedToSameContact__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAssetLookupLimitedToActiveEntitlementsOnAccount(__in, __typeMapper);
        setAssetLookupLimitedToActiveEntitlementsOnContact(__in, __typeMapper);
        setAssetLookupLimitedToSameAccount(__in, __typeMapper);
        setAssetLookupLimitedToSameContact(__in, __typeMapper);
        setEnableEntitlementVersioning(__in, __typeMapper);
        setEnableEntitlements(__in, __typeMapper);
        setEntitlementLookupLimitedToActiveStatus(__in, __typeMapper);
        setEntitlementLookupLimitedToSameAccount(__in, __typeMapper);
        setEntitlementLookupLimitedToSameAsset(__in, __typeMapper);
        setEntitlementLookupLimitedToSameContact(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EntitlementSettings ");
      sb.append(super.toString());sb.append(" assetLookupLimitedToActiveEntitlementsOnAccount='").append(com.sforce.ws.util.Verbose.toString(assetLookupLimitedToActiveEntitlementsOnAccount)).append("'\n");
      sb.append(" assetLookupLimitedToActiveEntitlementsOnContact='").append(com.sforce.ws.util.Verbose.toString(assetLookupLimitedToActiveEntitlementsOnContact)).append("'\n");
      sb.append(" assetLookupLimitedToSameAccount='").append(com.sforce.ws.util.Verbose.toString(assetLookupLimitedToSameAccount)).append("'\n");
      sb.append(" assetLookupLimitedToSameContact='").append(com.sforce.ws.util.Verbose.toString(assetLookupLimitedToSameContact)).append("'\n");
      sb.append(" enableEntitlementVersioning='").append(com.sforce.ws.util.Verbose.toString(enableEntitlementVersioning)).append("'\n");
      sb.append(" enableEntitlements='").append(com.sforce.ws.util.Verbose.toString(enableEntitlements)).append("'\n");
      sb.append(" entitlementLookupLimitedToActiveStatus='").append(com.sforce.ws.util.Verbose.toString(entitlementLookupLimitedToActiveStatus)).append("'\n");
      sb.append(" entitlementLookupLimitedToSameAccount='").append(com.sforce.ws.util.Verbose.toString(entitlementLookupLimitedToSameAccount)).append("'\n");
      sb.append(" entitlementLookupLimitedToSameAsset='").append(com.sforce.ws.util.Verbose.toString(entitlementLookupLimitedToSameAsset)).append("'\n");
      sb.append(" entitlementLookupLimitedToSameContact='").append(com.sforce.ws.util.Verbose.toString(entitlementLookupLimitedToSameContact)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
