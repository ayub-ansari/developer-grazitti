package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FolderShare implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public FolderShare() {}

    /**
     * element : accessLevel of type {http://soap.sforce.com/2006/04/metadata}FolderShareAccessLevel
     * java type: com.sforce.soap.metadata.FolderShareAccessLevel
     */
    private static final com.sforce.ws.bind.TypeInfo accessLevel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","accessLevel","http://soap.sforce.com/2006/04/metadata","FolderShareAccessLevel",1,1,true);

    private boolean accessLevel__is_set = false;

    private com.sforce.soap.metadata.FolderShareAccessLevel accessLevel;

    public com.sforce.soap.metadata.FolderShareAccessLevel getAccessLevel() {
      return accessLevel;
    }

    public void setAccessLevel(com.sforce.soap.metadata.FolderShareAccessLevel accessLevel) {
      this.accessLevel = accessLevel;
      accessLevel__is_set = true;
    }

    protected void setAccessLevel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, accessLevel__typeInfo)) {
        setAccessLevel((com.sforce.soap.metadata.FolderShareAccessLevel)__typeMapper.readObject(__in, accessLevel__typeInfo, com.sforce.soap.metadata.FolderShareAccessLevel.class));
      }
    }

    /**
     * element : sharedTo of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo sharedTo__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sharedTo","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean sharedTo__is_set = false;

    private java.lang.String sharedTo;

    public java.lang.String getSharedTo() {
      return sharedTo;
    }

    public void setSharedTo(java.lang.String sharedTo) {
      this.sharedTo = sharedTo;
      sharedTo__is_set = true;
    }

    protected void setSharedTo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, sharedTo__typeInfo)) {
        setSharedTo(__typeMapper.readString(__in, sharedTo__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : sharedToType of type {http://soap.sforce.com/2006/04/metadata}FolderSharedToType
     * java type: com.sforce.soap.metadata.FolderSharedToType
     */
    private static final com.sforce.ws.bind.TypeInfo sharedToType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sharedToType","http://soap.sforce.com/2006/04/metadata","FolderSharedToType",1,1,true);

    private boolean sharedToType__is_set = false;

    private com.sforce.soap.metadata.FolderSharedToType sharedToType;

    public com.sforce.soap.metadata.FolderSharedToType getSharedToType() {
      return sharedToType;
    }

    public void setSharedToType(com.sforce.soap.metadata.FolderSharedToType sharedToType) {
      this.sharedToType = sharedToType;
      sharedToType__is_set = true;
    }

    protected void setSharedToType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, sharedToType__typeInfo)) {
        setSharedToType((com.sforce.soap.metadata.FolderSharedToType)__typeMapper.readObject(__in, sharedToType__typeInfo, com.sforce.soap.metadata.FolderSharedToType.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, accessLevel__typeInfo, accessLevel, accessLevel__is_set);
       __typeMapper.writeString(__out, sharedTo__typeInfo, sharedTo, sharedTo__is_set);
       __typeMapper.writeObject(__out, sharedToType__typeInfo, sharedToType, sharedToType__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAccessLevel(__in, __typeMapper);
        setSharedTo(__in, __typeMapper);
        setSharedToType(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FolderShare ");
      sb.append(" accessLevel='").append(com.sforce.ws.util.Verbose.toString(accessLevel)).append("'\n");
      sb.append(" sharedTo='").append(com.sforce.ws.util.Verbose.toString(sharedTo)).append("'\n");
      sb.append(" sharedToType='").append(com.sforce.ws.util.Verbose.toString(sharedToType)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
