package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribeMetadataObject implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public DescribeMetadataObject() {}

    /**
     * element : childXmlNames of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo childXmlNames__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","childXmlNames","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean childXmlNames__is_set = false;

    private java.lang.String[] childXmlNames = new java.lang.String[0];

    public java.lang.String[] getChildXmlNames() {
      return childXmlNames;
    }

    public void setChildXmlNames(java.lang.String[] childXmlNames) {
      this.childXmlNames = childXmlNames;
      childXmlNames__is_set = true;
    }

    protected void setChildXmlNames(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, childXmlNames__typeInfo)) {
        setChildXmlNames((java.lang.String[])__typeMapper.readObject(__in, childXmlNames__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : directoryName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo directoryName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","directoryName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean directoryName__is_set = false;

    private java.lang.String directoryName;

    public java.lang.String getDirectoryName() {
      return directoryName;
    }

    public void setDirectoryName(java.lang.String directoryName) {
      this.directoryName = directoryName;
      directoryName__is_set = true;
    }

    protected void setDirectoryName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, directoryName__typeInfo)) {
        setDirectoryName(__typeMapper.readString(__in, directoryName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : inFolder of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo inFolder__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","inFolder","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean inFolder__is_set = false;

    private boolean inFolder;

    public boolean getInFolder() {
      return inFolder;
    }

    public boolean isInFolder() {
      return inFolder;
    }

    public void setInFolder(boolean inFolder) {
      this.inFolder = inFolder;
      inFolder__is_set = true;
    }

    protected void setInFolder(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, inFolder__typeInfo)) {
        setInFolder(__typeMapper.readBoolean(__in, inFolder__typeInfo, boolean.class));
      }
    }

    /**
     * element : metaFile of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo metaFile__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","metaFile","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean metaFile__is_set = false;

    private boolean metaFile;

    public boolean getMetaFile() {
      return metaFile;
    }

    public boolean isMetaFile() {
      return metaFile;
    }

    public void setMetaFile(boolean metaFile) {
      this.metaFile = metaFile;
      metaFile__is_set = true;
    }

    protected void setMetaFile(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, metaFile__typeInfo)) {
        setMetaFile(__typeMapper.readBoolean(__in, metaFile__typeInfo, boolean.class));
      }
    }

    /**
     * element : suffix of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo suffix__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","suffix","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean suffix__is_set = false;

    private java.lang.String suffix;

    public java.lang.String getSuffix() {
      return suffix;
    }

    public void setSuffix(java.lang.String suffix) {
      this.suffix = suffix;
      suffix__is_set = true;
    }

    protected void setSuffix(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, suffix__typeInfo)) {
        setSuffix(__typeMapper.readString(__in, suffix__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : xmlName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo xmlName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","xmlName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean xmlName__is_set = false;

    private java.lang.String xmlName;

    public java.lang.String getXmlName() {
      return xmlName;
    }

    public void setXmlName(java.lang.String xmlName) {
      this.xmlName = xmlName;
      xmlName__is_set = true;
    }

    protected void setXmlName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, xmlName__typeInfo)) {
        setXmlName(__typeMapper.readString(__in, xmlName__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, childXmlNames__typeInfo, childXmlNames, childXmlNames__is_set);
       __typeMapper.writeString(__out, directoryName__typeInfo, directoryName, directoryName__is_set);
       __typeMapper.writeBoolean(__out, inFolder__typeInfo, inFolder, inFolder__is_set);
       __typeMapper.writeBoolean(__out, metaFile__typeInfo, metaFile, metaFile__is_set);
       __typeMapper.writeString(__out, suffix__typeInfo, suffix, suffix__is_set);
       __typeMapper.writeString(__out, xmlName__typeInfo, xmlName, xmlName__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setChildXmlNames(__in, __typeMapper);
        setDirectoryName(__in, __typeMapper);
        setInFolder(__in, __typeMapper);
        setMetaFile(__in, __typeMapper);
        setSuffix(__in, __typeMapper);
        setXmlName(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribeMetadataObject ");
      sb.append(" childXmlNames='").append(com.sforce.ws.util.Verbose.toString(childXmlNames)).append("'\n");
      sb.append(" directoryName='").append(com.sforce.ws.util.Verbose.toString(directoryName)).append("'\n");
      sb.append(" inFolder='").append(com.sforce.ws.util.Verbose.toString(inFolder)).append("'\n");
      sb.append(" metaFile='").append(com.sforce.ws.util.Verbose.toString(metaFile)).append("'\n");
      sb.append(" suffix='").append(com.sforce.ws.util.Verbose.toString(suffix)).append("'\n");
      sb.append(" xmlName='").append(com.sforce.ws.util.Verbose.toString(xmlName)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
