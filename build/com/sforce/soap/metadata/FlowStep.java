package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlowStep extends com.sforce.soap.metadata.FlowNode {

    /**
     * Constructor
     */
    public FlowStep() {}

    /**
     * element : connectors of type {http://soap.sforce.com/2006/04/metadata}FlowConnector
     * java type: com.sforce.soap.metadata.FlowConnector[]
     */
    private static final com.sforce.ws.bind.TypeInfo connectors__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","connectors","http://soap.sforce.com/2006/04/metadata","FlowConnector",0,-1,true);

    private boolean connectors__is_set = false;

    private com.sforce.soap.metadata.FlowConnector[] connectors = new com.sforce.soap.metadata.FlowConnector[0];

    public com.sforce.soap.metadata.FlowConnector[] getConnectors() {
      return connectors;
    }

    public void setConnectors(com.sforce.soap.metadata.FlowConnector[] connectors) {
      this.connectors = connectors;
      connectors__is_set = true;
    }

    protected void setConnectors(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, connectors__typeInfo)) {
        setConnectors((com.sforce.soap.metadata.FlowConnector[])__typeMapper.readObject(__in, connectors__typeInfo, com.sforce.soap.metadata.FlowConnector[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "FlowStep");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, connectors__typeInfo, connectors, connectors__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setConnectors(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowStep ");
      sb.append(super.toString());sb.append(" connectors='").append(com.sforce.ws.util.Verbose.toString(connectors)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
