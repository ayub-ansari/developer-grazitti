package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class Folder extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public Folder() {}

    /**
     * element : accessType of type {http://soap.sforce.com/2006/04/metadata}FolderAccessTypes
     * java type: com.sforce.soap.metadata.FolderAccessTypes
     */
    private static final com.sforce.ws.bind.TypeInfo accessType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","accessType","http://soap.sforce.com/2006/04/metadata","FolderAccessTypes",0,1,true);

    private boolean accessType__is_set = false;

    private com.sforce.soap.metadata.FolderAccessTypes accessType;

    public com.sforce.soap.metadata.FolderAccessTypes getAccessType() {
      return accessType;
    }

    public void setAccessType(com.sforce.soap.metadata.FolderAccessTypes accessType) {
      this.accessType = accessType;
      accessType__is_set = true;
    }

    protected void setAccessType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, accessType__typeInfo)) {
        setAccessType((com.sforce.soap.metadata.FolderAccessTypes)__typeMapper.readObject(__in, accessType__typeInfo, com.sforce.soap.metadata.FolderAccessTypes.class));
      }
    }

    /**
     * element : folderShares of type {http://soap.sforce.com/2006/04/metadata}FolderShare
     * java type: com.sforce.soap.metadata.FolderShare[]
     */
    private static final com.sforce.ws.bind.TypeInfo folderShares__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","folderShares","http://soap.sforce.com/2006/04/metadata","FolderShare",0,-1,true);

    private boolean folderShares__is_set = false;

    private com.sforce.soap.metadata.FolderShare[] folderShares = new com.sforce.soap.metadata.FolderShare[0];

    public com.sforce.soap.metadata.FolderShare[] getFolderShares() {
      return folderShares;
    }

    public void setFolderShares(com.sforce.soap.metadata.FolderShare[] folderShares) {
      this.folderShares = folderShares;
      folderShares__is_set = true;
    }

    protected void setFolderShares(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, folderShares__typeInfo)) {
        setFolderShares((com.sforce.soap.metadata.FolderShare[])__typeMapper.readObject(__in, folderShares__typeInfo, com.sforce.soap.metadata.FolderShare[].class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : publicFolderAccess of type {http://soap.sforce.com/2006/04/metadata}PublicFolderAccess
     * java type: com.sforce.soap.metadata.PublicFolderAccess
     */
    private static final com.sforce.ws.bind.TypeInfo publicFolderAccess__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","publicFolderAccess","http://soap.sforce.com/2006/04/metadata","PublicFolderAccess",0,1,true);

    private boolean publicFolderAccess__is_set = false;

    private com.sforce.soap.metadata.PublicFolderAccess publicFolderAccess;

    public com.sforce.soap.metadata.PublicFolderAccess getPublicFolderAccess() {
      return publicFolderAccess;
    }

    public void setPublicFolderAccess(com.sforce.soap.metadata.PublicFolderAccess publicFolderAccess) {
      this.publicFolderAccess = publicFolderAccess;
      publicFolderAccess__is_set = true;
    }

    protected void setPublicFolderAccess(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, publicFolderAccess__typeInfo)) {
        setPublicFolderAccess((com.sforce.soap.metadata.PublicFolderAccess)__typeMapper.readObject(__in, publicFolderAccess__typeInfo, com.sforce.soap.metadata.PublicFolderAccess.class));
      }
    }

    /**
     * element : sharedTo of type {http://soap.sforce.com/2006/04/metadata}SharedTo
     * java type: com.sforce.soap.metadata.SharedTo
     */
    private static final com.sforce.ws.bind.TypeInfo sharedTo__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sharedTo","http://soap.sforce.com/2006/04/metadata","SharedTo",0,1,true);

    private boolean sharedTo__is_set = false;

    private com.sforce.soap.metadata.SharedTo sharedTo;

    public com.sforce.soap.metadata.SharedTo getSharedTo() {
      return sharedTo;
    }

    public void setSharedTo(com.sforce.soap.metadata.SharedTo sharedTo) {
      this.sharedTo = sharedTo;
      sharedTo__is_set = true;
    }

    protected void setSharedTo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sharedTo__typeInfo)) {
        setSharedTo((com.sforce.soap.metadata.SharedTo)__typeMapper.readObject(__in, sharedTo__typeInfo, com.sforce.soap.metadata.SharedTo.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "Folder");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeObject(__out, accessType__typeInfo, accessType, accessType__is_set);
       __typeMapper.writeObject(__out, folderShares__typeInfo, folderShares, folderShares__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeObject(__out, publicFolderAccess__typeInfo, publicFolderAccess, publicFolderAccess__is_set);
       __typeMapper.writeObject(__out, sharedTo__typeInfo, sharedTo, sharedTo__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAccessType(__in, __typeMapper);
        setFolderShares(__in, __typeMapper);
        setName(__in, __typeMapper);
        setPublicFolderAccess(__in, __typeMapper);
        setSharedTo(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[Folder ");
      sb.append(super.toString());sb.append(" accessType='").append(com.sforce.ws.util.Verbose.toString(accessType)).append("'\n");
      sb.append(" folderShares='").append(com.sforce.ws.util.Verbose.toString(folderShares)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" publicFolderAccess='").append(com.sforce.ws.util.Verbose.toString(publicFolderAccess)).append("'\n");
      sb.append(" sharedTo='").append(com.sforce.ws.util.Verbose.toString(sharedTo)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
