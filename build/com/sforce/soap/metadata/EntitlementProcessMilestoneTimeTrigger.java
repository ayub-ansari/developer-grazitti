package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class EntitlementProcessMilestoneTimeTrigger implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public EntitlementProcessMilestoneTimeTrigger() {}

    /**
     * element : actions of type {http://soap.sforce.com/2006/04/metadata}WorkflowActionReference
     * java type: com.sforce.soap.metadata.WorkflowActionReference[]
     */
    private static final com.sforce.ws.bind.TypeInfo actions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","actions","http://soap.sforce.com/2006/04/metadata","WorkflowActionReference",0,-1,true);

    private boolean actions__is_set = false;

    private com.sforce.soap.metadata.WorkflowActionReference[] actions = new com.sforce.soap.metadata.WorkflowActionReference[0];

    public com.sforce.soap.metadata.WorkflowActionReference[] getActions() {
      return actions;
    }

    public void setActions(com.sforce.soap.metadata.WorkflowActionReference[] actions) {
      this.actions = actions;
      actions__is_set = true;
    }

    protected void setActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, actions__typeInfo)) {
        setActions((com.sforce.soap.metadata.WorkflowActionReference[])__typeMapper.readObject(__in, actions__typeInfo, com.sforce.soap.metadata.WorkflowActionReference[].class));
      }
    }

    /**
     * element : timeLength of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo timeLength__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","timeLength","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean timeLength__is_set = false;

    private int timeLength;

    public int getTimeLength() {
      return timeLength;
    }

    public void setTimeLength(int timeLength) {
      this.timeLength = timeLength;
      timeLength__is_set = true;
    }

    protected void setTimeLength(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, timeLength__typeInfo)) {
        setTimeLength((int)__typeMapper.readInt(__in, timeLength__typeInfo, int.class));
      }
    }

    /**
     * element : workflowTimeTriggerUnit of type {http://soap.sforce.com/2006/04/metadata}MilestoneTimeUnits
     * java type: com.sforce.soap.metadata.MilestoneTimeUnits
     */
    private static final com.sforce.ws.bind.TypeInfo workflowTimeTriggerUnit__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","workflowTimeTriggerUnit","http://soap.sforce.com/2006/04/metadata","MilestoneTimeUnits",1,1,true);

    private boolean workflowTimeTriggerUnit__is_set = false;

    private com.sforce.soap.metadata.MilestoneTimeUnits workflowTimeTriggerUnit;

    public com.sforce.soap.metadata.MilestoneTimeUnits getWorkflowTimeTriggerUnit() {
      return workflowTimeTriggerUnit;
    }

    public void setWorkflowTimeTriggerUnit(com.sforce.soap.metadata.MilestoneTimeUnits workflowTimeTriggerUnit) {
      this.workflowTimeTriggerUnit = workflowTimeTriggerUnit;
      workflowTimeTriggerUnit__is_set = true;
    }

    protected void setWorkflowTimeTriggerUnit(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, workflowTimeTriggerUnit__typeInfo)) {
        setWorkflowTimeTriggerUnit((com.sforce.soap.metadata.MilestoneTimeUnits)__typeMapper.readObject(__in, workflowTimeTriggerUnit__typeInfo, com.sforce.soap.metadata.MilestoneTimeUnits.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, actions__typeInfo, actions, actions__is_set);
       __typeMapper.writeInt(__out, timeLength__typeInfo, timeLength, timeLength__is_set);
       __typeMapper.writeObject(__out, workflowTimeTriggerUnit__typeInfo, workflowTimeTriggerUnit, workflowTimeTriggerUnit__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActions(__in, __typeMapper);
        setTimeLength(__in, __typeMapper);
        setWorkflowTimeTriggerUnit(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EntitlementProcessMilestoneTimeTrigger ");
      sb.append(" actions='").append(com.sforce.ws.util.Verbose.toString(actions)).append("'\n");
      sb.append(" timeLength='").append(com.sforce.ws.util.Verbose.toString(timeLength)).append("'\n");
      sb.append(" workflowTimeTriggerUnit='").append(com.sforce.ws.util.Verbose.toString(workflowTimeTriggerUnit)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
