package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class MatchingRule extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public MatchingRule() {}

    /**
     * element : booleanFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo booleanFilter__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean booleanFilter__is_set = false;

    private java.lang.String booleanFilter;

    public java.lang.String getBooleanFilter() {
      return booleanFilter;
    }

    public void setBooleanFilter(java.lang.String booleanFilter) {
      this.booleanFilter = booleanFilter;
      booleanFilter__is_set = true;
    }

    protected void setBooleanFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, booleanFilter__typeInfo)) {
        setBooleanFilter(__typeMapper.readString(__in, booleanFilter__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : matchingRuleItems of type {http://soap.sforce.com/2006/04/metadata}MatchingRuleItem
     * java type: com.sforce.soap.metadata.MatchingRuleItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo matchingRuleItems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","matchingRuleItems","http://soap.sforce.com/2006/04/metadata","MatchingRuleItem",0,-1,true);

    private boolean matchingRuleItems__is_set = false;

    private com.sforce.soap.metadata.MatchingRuleItem[] matchingRuleItems = new com.sforce.soap.metadata.MatchingRuleItem[0];

    public com.sforce.soap.metadata.MatchingRuleItem[] getMatchingRuleItems() {
      return matchingRuleItems;
    }

    public void setMatchingRuleItems(com.sforce.soap.metadata.MatchingRuleItem[] matchingRuleItems) {
      this.matchingRuleItems = matchingRuleItems;
      matchingRuleItems__is_set = true;
    }

    protected void setMatchingRuleItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, matchingRuleItems__typeInfo)) {
        setMatchingRuleItems((com.sforce.soap.metadata.MatchingRuleItem[])__typeMapper.readObject(__in, matchingRuleItems__typeInfo, com.sforce.soap.metadata.MatchingRuleItem[].class));
      }
    }

    /**
     * element : ruleStatus of type {http://soap.sforce.com/2006/04/metadata}MatchingRuleStatus
     * java type: com.sforce.soap.metadata.MatchingRuleStatus
     */
    private static final com.sforce.ws.bind.TypeInfo ruleStatus__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","ruleStatus","http://soap.sforce.com/2006/04/metadata","MatchingRuleStatus",1,1,true);

    private boolean ruleStatus__is_set = false;

    private com.sforce.soap.metadata.MatchingRuleStatus ruleStatus;

    public com.sforce.soap.metadata.MatchingRuleStatus getRuleStatus() {
      return ruleStatus;
    }

    public void setRuleStatus(com.sforce.soap.metadata.MatchingRuleStatus ruleStatus) {
      this.ruleStatus = ruleStatus;
      ruleStatus__is_set = true;
    }

    protected void setRuleStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, ruleStatus__typeInfo)) {
        setRuleStatus((com.sforce.soap.metadata.MatchingRuleStatus)__typeMapper.readObject(__in, ruleStatus__typeInfo, com.sforce.soap.metadata.MatchingRuleStatus.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "MatchingRule");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, booleanFilter__typeInfo, booleanFilter, booleanFilter__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeObject(__out, matchingRuleItems__typeInfo, matchingRuleItems, matchingRuleItems__is_set);
       __typeMapper.writeObject(__out, ruleStatus__typeInfo, ruleStatus, ruleStatus__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setBooleanFilter(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setMatchingRuleItems(__in, __typeMapper);
        setRuleStatus(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[MatchingRule ");
      sb.append(super.toString());sb.append(" booleanFilter='").append(com.sforce.ws.util.Verbose.toString(booleanFilter)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" matchingRuleItems='").append(com.sforce.ws.util.Verbose.toString(matchingRuleItems)).append("'\n");
      sb.append(" ruleStatus='").append(com.sforce.ws.util.Verbose.toString(ruleStatus)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
