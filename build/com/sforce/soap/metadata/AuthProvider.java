package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class AuthProvider extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public AuthProvider() {}

    /**
     * element : authorizeUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo authorizeUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","authorizeUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean authorizeUrl__is_set = false;

    private java.lang.String authorizeUrl;

    public java.lang.String getAuthorizeUrl() {
      return authorizeUrl;
    }

    public void setAuthorizeUrl(java.lang.String authorizeUrl) {
      this.authorizeUrl = authorizeUrl;
      authorizeUrl__is_set = true;
    }

    protected void setAuthorizeUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, authorizeUrl__typeInfo)) {
        setAuthorizeUrl(__typeMapper.readString(__in, authorizeUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : consumerKey of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo consumerKey__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","consumerKey","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean consumerKey__is_set = false;

    private java.lang.String consumerKey;

    public java.lang.String getConsumerKey() {
      return consumerKey;
    }

    public void setConsumerKey(java.lang.String consumerKey) {
      this.consumerKey = consumerKey;
      consumerKey__is_set = true;
    }

    protected void setConsumerKey(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, consumerKey__typeInfo)) {
        setConsumerKey(__typeMapper.readString(__in, consumerKey__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : consumerSecret of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo consumerSecret__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","consumerSecret","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean consumerSecret__is_set = false;

    private java.lang.String consumerSecret;

    public java.lang.String getConsumerSecret() {
      return consumerSecret;
    }

    public void setConsumerSecret(java.lang.String consumerSecret) {
      this.consumerSecret = consumerSecret;
      consumerSecret__is_set = true;
    }

    protected void setConsumerSecret(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, consumerSecret__typeInfo)) {
        setConsumerSecret(__typeMapper.readString(__in, consumerSecret__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : customMetadataTypeRecord of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo customMetadataTypeRecord__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","customMetadataTypeRecord","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean customMetadataTypeRecord__is_set = false;

    private java.lang.String customMetadataTypeRecord;

    public java.lang.String getCustomMetadataTypeRecord() {
      return customMetadataTypeRecord;
    }

    public void setCustomMetadataTypeRecord(java.lang.String customMetadataTypeRecord) {
      this.customMetadataTypeRecord = customMetadataTypeRecord;
      customMetadataTypeRecord__is_set = true;
    }

    protected void setCustomMetadataTypeRecord(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, customMetadataTypeRecord__typeInfo)) {
        setCustomMetadataTypeRecord(__typeMapper.readString(__in, customMetadataTypeRecord__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : defaultScopes of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo defaultScopes__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","defaultScopes","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean defaultScopes__is_set = false;

    private java.lang.String defaultScopes;

    public java.lang.String getDefaultScopes() {
      return defaultScopes;
    }

    public void setDefaultScopes(java.lang.String defaultScopes) {
      this.defaultScopes = defaultScopes;
      defaultScopes__is_set = true;
    }

    protected void setDefaultScopes(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, defaultScopes__typeInfo)) {
        setDefaultScopes(__typeMapper.readString(__in, defaultScopes__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : errorUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo errorUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","errorUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean errorUrl__is_set = false;

    private java.lang.String errorUrl;

    public java.lang.String getErrorUrl() {
      return errorUrl;
    }

    public void setErrorUrl(java.lang.String errorUrl) {
      this.errorUrl = errorUrl;
      errorUrl__is_set = true;
    }

    protected void setErrorUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, errorUrl__typeInfo)) {
        setErrorUrl(__typeMapper.readString(__in, errorUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : executionUser of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo executionUser__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","executionUser","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean executionUser__is_set = false;

    private java.lang.String executionUser;

    public java.lang.String getExecutionUser() {
      return executionUser;
    }

    public void setExecutionUser(java.lang.String executionUser) {
      this.executionUser = executionUser;
      executionUser__is_set = true;
    }

    protected void setExecutionUser(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, executionUser__typeInfo)) {
        setExecutionUser(__typeMapper.readString(__in, executionUser__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : friendlyName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo friendlyName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","friendlyName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean friendlyName__is_set = false;

    private java.lang.String friendlyName;

    public java.lang.String getFriendlyName() {
      return friendlyName;
    }

    public void setFriendlyName(java.lang.String friendlyName) {
      this.friendlyName = friendlyName;
      friendlyName__is_set = true;
    }

    protected void setFriendlyName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, friendlyName__typeInfo)) {
        setFriendlyName(__typeMapper.readString(__in, friendlyName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : iconUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo iconUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","iconUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean iconUrl__is_set = false;

    private java.lang.String iconUrl;

    public java.lang.String getIconUrl() {
      return iconUrl;
    }

    public void setIconUrl(java.lang.String iconUrl) {
      this.iconUrl = iconUrl;
      iconUrl__is_set = true;
    }

    protected void setIconUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, iconUrl__typeInfo)) {
        setIconUrl(__typeMapper.readString(__in, iconUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : idTokenIssuer of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo idTokenIssuer__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","idTokenIssuer","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean idTokenIssuer__is_set = false;

    private java.lang.String idTokenIssuer;

    public java.lang.String getIdTokenIssuer() {
      return idTokenIssuer;
    }

    public void setIdTokenIssuer(java.lang.String idTokenIssuer) {
      this.idTokenIssuer = idTokenIssuer;
      idTokenIssuer__is_set = true;
    }

    protected void setIdTokenIssuer(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, idTokenIssuer__typeInfo)) {
        setIdTokenIssuer(__typeMapper.readString(__in, idTokenIssuer__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : includeOrgIdInIdentifier of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo includeOrgIdInIdentifier__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","includeOrgIdInIdentifier","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean includeOrgIdInIdentifier__is_set = false;

    private boolean includeOrgIdInIdentifier;

    public boolean getIncludeOrgIdInIdentifier() {
      return includeOrgIdInIdentifier;
    }

    public boolean isIncludeOrgIdInIdentifier() {
      return includeOrgIdInIdentifier;
    }

    public void setIncludeOrgIdInIdentifier(boolean includeOrgIdInIdentifier) {
      this.includeOrgIdInIdentifier = includeOrgIdInIdentifier;
      includeOrgIdInIdentifier__is_set = true;
    }

    protected void setIncludeOrgIdInIdentifier(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, includeOrgIdInIdentifier__typeInfo)) {
        setIncludeOrgIdInIdentifier(__typeMapper.readBoolean(__in, includeOrgIdInIdentifier__typeInfo, boolean.class));
      }
    }

    /**
     * element : logoutUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo logoutUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","logoutUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean logoutUrl__is_set = false;

    private java.lang.String logoutUrl;

    public java.lang.String getLogoutUrl() {
      return logoutUrl;
    }

    public void setLogoutUrl(java.lang.String logoutUrl) {
      this.logoutUrl = logoutUrl;
      logoutUrl__is_set = true;
    }

    protected void setLogoutUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, logoutUrl__typeInfo)) {
        setLogoutUrl(__typeMapper.readString(__in, logoutUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : plugin of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo plugin__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","plugin","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean plugin__is_set = false;

    private java.lang.String plugin;

    public java.lang.String getPlugin() {
      return plugin;
    }

    public void setPlugin(java.lang.String plugin) {
      this.plugin = plugin;
      plugin__is_set = true;
    }

    protected void setPlugin(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, plugin__typeInfo)) {
        setPlugin(__typeMapper.readString(__in, plugin__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : portal of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo portal__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","portal","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean portal__is_set = false;

    private java.lang.String portal;

    public java.lang.String getPortal() {
      return portal;
    }

    public void setPortal(java.lang.String portal) {
      this.portal = portal;
      portal__is_set = true;
    }

    protected void setPortal(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, portal__typeInfo)) {
        setPortal(__typeMapper.readString(__in, portal__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : providerType of type {http://soap.sforce.com/2006/04/metadata}AuthProviderType
     * java type: com.sforce.soap.metadata.AuthProviderType
     */
    private static final com.sforce.ws.bind.TypeInfo providerType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","providerType","http://soap.sforce.com/2006/04/metadata","AuthProviderType",1,1,true);

    private boolean providerType__is_set = false;

    private com.sforce.soap.metadata.AuthProviderType providerType;

    public com.sforce.soap.metadata.AuthProviderType getProviderType() {
      return providerType;
    }

    public void setProviderType(com.sforce.soap.metadata.AuthProviderType providerType) {
      this.providerType = providerType;
      providerType__is_set = true;
    }

    protected void setProviderType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, providerType__typeInfo)) {
        setProviderType((com.sforce.soap.metadata.AuthProviderType)__typeMapper.readObject(__in, providerType__typeInfo, com.sforce.soap.metadata.AuthProviderType.class));
      }
    }

    /**
     * element : registrationHandler of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo registrationHandler__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","registrationHandler","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean registrationHandler__is_set = false;

    private java.lang.String registrationHandler;

    public java.lang.String getRegistrationHandler() {
      return registrationHandler;
    }

    public void setRegistrationHandler(java.lang.String registrationHandler) {
      this.registrationHandler = registrationHandler;
      registrationHandler__is_set = true;
    }

    protected void setRegistrationHandler(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, registrationHandler__typeInfo)) {
        setRegistrationHandler(__typeMapper.readString(__in, registrationHandler__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : sendAccessTokenInHeader of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo sendAccessTokenInHeader__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sendAccessTokenInHeader","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean sendAccessTokenInHeader__is_set = false;

    private boolean sendAccessTokenInHeader;

    public boolean getSendAccessTokenInHeader() {
      return sendAccessTokenInHeader;
    }

    public boolean isSendAccessTokenInHeader() {
      return sendAccessTokenInHeader;
    }

    public void setSendAccessTokenInHeader(boolean sendAccessTokenInHeader) {
      this.sendAccessTokenInHeader = sendAccessTokenInHeader;
      sendAccessTokenInHeader__is_set = true;
    }

    protected void setSendAccessTokenInHeader(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sendAccessTokenInHeader__typeInfo)) {
        setSendAccessTokenInHeader(__typeMapper.readBoolean(__in, sendAccessTokenInHeader__typeInfo, boolean.class));
      }
    }

    /**
     * element : sendClientCredentialsInHeader of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo sendClientCredentialsInHeader__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","sendClientCredentialsInHeader","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean sendClientCredentialsInHeader__is_set = false;

    private boolean sendClientCredentialsInHeader;

    public boolean getSendClientCredentialsInHeader() {
      return sendClientCredentialsInHeader;
    }

    public boolean isSendClientCredentialsInHeader() {
      return sendClientCredentialsInHeader;
    }

    public void setSendClientCredentialsInHeader(boolean sendClientCredentialsInHeader) {
      this.sendClientCredentialsInHeader = sendClientCredentialsInHeader;
      sendClientCredentialsInHeader__is_set = true;
    }

    protected void setSendClientCredentialsInHeader(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, sendClientCredentialsInHeader__typeInfo)) {
        setSendClientCredentialsInHeader(__typeMapper.readBoolean(__in, sendClientCredentialsInHeader__typeInfo, boolean.class));
      }
    }

    /**
     * element : tokenUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo tokenUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","tokenUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean tokenUrl__is_set = false;

    private java.lang.String tokenUrl;

    public java.lang.String getTokenUrl() {
      return tokenUrl;
    }

    public void setTokenUrl(java.lang.String tokenUrl) {
      this.tokenUrl = tokenUrl;
      tokenUrl__is_set = true;
    }

    protected void setTokenUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, tokenUrl__typeInfo)) {
        setTokenUrl(__typeMapper.readString(__in, tokenUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : userInfoUrl of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo userInfoUrl__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","userInfoUrl","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean userInfoUrl__is_set = false;

    private java.lang.String userInfoUrl;

    public java.lang.String getUserInfoUrl() {
      return userInfoUrl;
    }

    public void setUserInfoUrl(java.lang.String userInfoUrl) {
      this.userInfoUrl = userInfoUrl;
      userInfoUrl__is_set = true;
    }

    protected void setUserInfoUrl(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, userInfoUrl__typeInfo)) {
        setUserInfoUrl(__typeMapper.readString(__in, userInfoUrl__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "AuthProvider");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeString(__out, authorizeUrl__typeInfo, authorizeUrl, authorizeUrl__is_set);
       __typeMapper.writeString(__out, consumerKey__typeInfo, consumerKey, consumerKey__is_set);
       __typeMapper.writeString(__out, consumerSecret__typeInfo, consumerSecret, consumerSecret__is_set);
       __typeMapper.writeString(__out, customMetadataTypeRecord__typeInfo, customMetadataTypeRecord, customMetadataTypeRecord__is_set);
       __typeMapper.writeString(__out, defaultScopes__typeInfo, defaultScopes, defaultScopes__is_set);
       __typeMapper.writeString(__out, errorUrl__typeInfo, errorUrl, errorUrl__is_set);
       __typeMapper.writeString(__out, executionUser__typeInfo, executionUser, executionUser__is_set);
       __typeMapper.writeString(__out, friendlyName__typeInfo, friendlyName, friendlyName__is_set);
       __typeMapper.writeString(__out, iconUrl__typeInfo, iconUrl, iconUrl__is_set);
       __typeMapper.writeString(__out, idTokenIssuer__typeInfo, idTokenIssuer, idTokenIssuer__is_set);
       __typeMapper.writeBoolean(__out, includeOrgIdInIdentifier__typeInfo, includeOrgIdInIdentifier, includeOrgIdInIdentifier__is_set);
       __typeMapper.writeString(__out, logoutUrl__typeInfo, logoutUrl, logoutUrl__is_set);
       __typeMapper.writeString(__out, plugin__typeInfo, plugin, plugin__is_set);
       __typeMapper.writeString(__out, portal__typeInfo, portal, portal__is_set);
       __typeMapper.writeObject(__out, providerType__typeInfo, providerType, providerType__is_set);
       __typeMapper.writeString(__out, registrationHandler__typeInfo, registrationHandler, registrationHandler__is_set);
       __typeMapper.writeBoolean(__out, sendAccessTokenInHeader__typeInfo, sendAccessTokenInHeader, sendAccessTokenInHeader__is_set);
       __typeMapper.writeBoolean(__out, sendClientCredentialsInHeader__typeInfo, sendClientCredentialsInHeader, sendClientCredentialsInHeader__is_set);
       __typeMapper.writeString(__out, tokenUrl__typeInfo, tokenUrl, tokenUrl__is_set);
       __typeMapper.writeString(__out, userInfoUrl__typeInfo, userInfoUrl, userInfoUrl__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAuthorizeUrl(__in, __typeMapper);
        setConsumerKey(__in, __typeMapper);
        setConsumerSecret(__in, __typeMapper);
        setCustomMetadataTypeRecord(__in, __typeMapper);
        setDefaultScopes(__in, __typeMapper);
        setErrorUrl(__in, __typeMapper);
        setExecutionUser(__in, __typeMapper);
        setFriendlyName(__in, __typeMapper);
        setIconUrl(__in, __typeMapper);
        setIdTokenIssuer(__in, __typeMapper);
        setIncludeOrgIdInIdentifier(__in, __typeMapper);
        setLogoutUrl(__in, __typeMapper);
        setPlugin(__in, __typeMapper);
        setPortal(__in, __typeMapper);
        setProviderType(__in, __typeMapper);
        setRegistrationHandler(__in, __typeMapper);
        setSendAccessTokenInHeader(__in, __typeMapper);
        setSendClientCredentialsInHeader(__in, __typeMapper);
        setTokenUrl(__in, __typeMapper);
        setUserInfoUrl(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[AuthProvider ");
      sb.append(super.toString());sb.append(" authorizeUrl='").append(com.sforce.ws.util.Verbose.toString(authorizeUrl)).append("'\n");
      sb.append(" consumerKey='").append(com.sforce.ws.util.Verbose.toString(consumerKey)).append("'\n");
      sb.append(" consumerSecret='").append(com.sforce.ws.util.Verbose.toString(consumerSecret)).append("'\n");
      sb.append(" customMetadataTypeRecord='").append(com.sforce.ws.util.Verbose.toString(customMetadataTypeRecord)).append("'\n");
      sb.append(" defaultScopes='").append(com.sforce.ws.util.Verbose.toString(defaultScopes)).append("'\n");
      sb.append(" errorUrl='").append(com.sforce.ws.util.Verbose.toString(errorUrl)).append("'\n");
      sb.append(" executionUser='").append(com.sforce.ws.util.Verbose.toString(executionUser)).append("'\n");
      sb.append(" friendlyName='").append(com.sforce.ws.util.Verbose.toString(friendlyName)).append("'\n");
      sb.append(" iconUrl='").append(com.sforce.ws.util.Verbose.toString(iconUrl)).append("'\n");
      sb.append(" idTokenIssuer='").append(com.sforce.ws.util.Verbose.toString(idTokenIssuer)).append("'\n");
      sb.append(" includeOrgIdInIdentifier='").append(com.sforce.ws.util.Verbose.toString(includeOrgIdInIdentifier)).append("'\n");
      sb.append(" logoutUrl='").append(com.sforce.ws.util.Verbose.toString(logoutUrl)).append("'\n");
      sb.append(" plugin='").append(com.sforce.ws.util.Verbose.toString(plugin)).append("'\n");
      sb.append(" portal='").append(com.sforce.ws.util.Verbose.toString(portal)).append("'\n");
      sb.append(" providerType='").append(com.sforce.ws.util.Verbose.toString(providerType)).append("'\n");
      sb.append(" registrationHandler='").append(com.sforce.ws.util.Verbose.toString(registrationHandler)).append("'\n");
      sb.append(" sendAccessTokenInHeader='").append(com.sforce.ws.util.Verbose.toString(sendAccessTokenInHeader)).append("'\n");
      sb.append(" sendClientCredentialsInHeader='").append(com.sforce.ws.util.Verbose.toString(sendClientCredentialsInHeader)).append("'\n");
      sb.append(" tokenUrl='").append(com.sforce.ws.util.Verbose.toString(tokenUrl)).append("'\n");
      sb.append(" userInfoUrl='").append(com.sforce.ws.util.Verbose.toString(userInfoUrl)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
