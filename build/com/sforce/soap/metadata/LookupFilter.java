package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class LookupFilter implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public LookupFilter() {}

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean active__is_set = false;

    private boolean active;

    public boolean getActive() {
      return active;
    }

    public boolean isActive() {
      return active;
    }

    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : booleanFilter of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo booleanFilter__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","booleanFilter","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean booleanFilter__is_set = false;

    private java.lang.String booleanFilter;

    public java.lang.String getBooleanFilter() {
      return booleanFilter;
    }

    public void setBooleanFilter(java.lang.String booleanFilter) {
      this.booleanFilter = booleanFilter;
      booleanFilter__is_set = true;
    }

    protected void setBooleanFilter(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, booleanFilter__typeInfo)) {
        setBooleanFilter(__typeMapper.readString(__in, booleanFilter__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : errorMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo errorMessage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","errorMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean errorMessage__is_set = false;

    private java.lang.String errorMessage;

    public java.lang.String getErrorMessage() {
      return errorMessage;
    }

    public void setErrorMessage(java.lang.String errorMessage) {
      this.errorMessage = errorMessage;
      errorMessage__is_set = true;
    }

    protected void setErrorMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, errorMessage__typeInfo)) {
        setErrorMessage(__typeMapper.readString(__in, errorMessage__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : filterItems of type {http://soap.sforce.com/2006/04/metadata}FilterItem
     * java type: com.sforce.soap.metadata.FilterItem[]
     */
    private static final com.sforce.ws.bind.TypeInfo filterItems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","filterItems","http://soap.sforce.com/2006/04/metadata","FilterItem",0,-1,true);

    private boolean filterItems__is_set = false;

    private com.sforce.soap.metadata.FilterItem[] filterItems = new com.sforce.soap.metadata.FilterItem[0];

    public com.sforce.soap.metadata.FilterItem[] getFilterItems() {
      return filterItems;
    }

    public void setFilterItems(com.sforce.soap.metadata.FilterItem[] filterItems) {
      this.filterItems = filterItems;
      filterItems__is_set = true;
    }

    protected void setFilterItems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, filterItems__typeInfo)) {
        setFilterItems((com.sforce.soap.metadata.FilterItem[])__typeMapper.readObject(__in, filterItems__typeInfo, com.sforce.soap.metadata.FilterItem[].class));
      }
    }

    /**
     * element : infoMessage of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo infoMessage__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","infoMessage","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean infoMessage__is_set = false;

    private java.lang.String infoMessage;

    public java.lang.String getInfoMessage() {
      return infoMessage;
    }

    public void setInfoMessage(java.lang.String infoMessage) {
      this.infoMessage = infoMessage;
      infoMessage__is_set = true;
    }

    protected void setInfoMessage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, infoMessage__typeInfo)) {
        setInfoMessage(__typeMapper.readString(__in, infoMessage__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : isOptional of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isOptional__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isOptional","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean isOptional__is_set = false;

    private boolean isOptional;

    public boolean getIsOptional() {
      return isOptional;
    }

    public boolean isIsOptional() {
      return isOptional;
    }

    public void setIsOptional(boolean isOptional) {
      this.isOptional = isOptional;
      isOptional__is_set = true;
    }

    protected void setIsOptional(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, isOptional__typeInfo)) {
        setIsOptional(__typeMapper.readBoolean(__in, isOptional__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeString(__out, booleanFilter__typeInfo, booleanFilter, booleanFilter__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, errorMessage__typeInfo, errorMessage, errorMessage__is_set);
       __typeMapper.writeObject(__out, filterItems__typeInfo, filterItems, filterItems__is_set);
       __typeMapper.writeString(__out, infoMessage__typeInfo, infoMessage, infoMessage__is_set);
       __typeMapper.writeBoolean(__out, isOptional__typeInfo, isOptional, isOptional__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActive(__in, __typeMapper);
        setBooleanFilter(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setErrorMessage(__in, __typeMapper);
        setFilterItems(__in, __typeMapper);
        setInfoMessage(__in, __typeMapper);
        setIsOptional(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LookupFilter ");
      sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" booleanFilter='").append(com.sforce.ws.util.Verbose.toString(booleanFilter)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" errorMessage='").append(com.sforce.ws.util.Verbose.toString(errorMessage)).append("'\n");
      sb.append(" filterItems='").append(com.sforce.ws.util.Verbose.toString(filterItems)).append("'\n");
      sb.append(" infoMessage='").append(com.sforce.ws.util.Verbose.toString(infoMessage)).append("'\n");
      sb.append(" isOptional='").append(com.sforce.ws.util.Verbose.toString(isOptional)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
