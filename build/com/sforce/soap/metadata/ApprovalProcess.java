package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ApprovalProcess extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public ApprovalProcess() {}

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean active__is_set = false;

    private boolean active;

    public boolean getActive() {
      return active;
    }

    public boolean isActive() {
      return active;
    }

    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : allowRecall of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowRecall__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowRecall","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean allowRecall__is_set = false;

    private boolean allowRecall;

    public boolean getAllowRecall() {
      return allowRecall;
    }

    public boolean isAllowRecall() {
      return allowRecall;
    }

    public void setAllowRecall(boolean allowRecall) {
      this.allowRecall = allowRecall;
      allowRecall__is_set = true;
    }

    protected void setAllowRecall(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allowRecall__typeInfo)) {
        setAllowRecall(__typeMapper.readBoolean(__in, allowRecall__typeInfo, boolean.class));
      }
    }

    /**
     * element : allowedSubmitters of type {http://soap.sforce.com/2006/04/metadata}ApprovalSubmitter
     * java type: com.sforce.soap.metadata.ApprovalSubmitter[]
     */
    private static final com.sforce.ws.bind.TypeInfo allowedSubmitters__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowedSubmitters","http://soap.sforce.com/2006/04/metadata","ApprovalSubmitter",0,-1,true);

    private boolean allowedSubmitters__is_set = false;

    private com.sforce.soap.metadata.ApprovalSubmitter[] allowedSubmitters = new com.sforce.soap.metadata.ApprovalSubmitter[0];

    public com.sforce.soap.metadata.ApprovalSubmitter[] getAllowedSubmitters() {
      return allowedSubmitters;
    }

    public void setAllowedSubmitters(com.sforce.soap.metadata.ApprovalSubmitter[] allowedSubmitters) {
      this.allowedSubmitters = allowedSubmitters;
      allowedSubmitters__is_set = true;
    }

    protected void setAllowedSubmitters(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allowedSubmitters__typeInfo)) {
        setAllowedSubmitters((com.sforce.soap.metadata.ApprovalSubmitter[])__typeMapper.readObject(__in, allowedSubmitters__typeInfo, com.sforce.soap.metadata.ApprovalSubmitter[].class));
      }
    }

    /**
     * element : approvalPageFields of type {http://soap.sforce.com/2006/04/metadata}ApprovalPageField
     * java type: com.sforce.soap.metadata.ApprovalPageField
     */
    private static final com.sforce.ws.bind.TypeInfo approvalPageFields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","approvalPageFields","http://soap.sforce.com/2006/04/metadata","ApprovalPageField",0,1,true);

    private boolean approvalPageFields__is_set = false;

    private com.sforce.soap.metadata.ApprovalPageField approvalPageFields;

    public com.sforce.soap.metadata.ApprovalPageField getApprovalPageFields() {
      return approvalPageFields;
    }

    public void setApprovalPageFields(com.sforce.soap.metadata.ApprovalPageField approvalPageFields) {
      this.approvalPageFields = approvalPageFields;
      approvalPageFields__is_set = true;
    }

    protected void setApprovalPageFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, approvalPageFields__typeInfo)) {
        setApprovalPageFields((com.sforce.soap.metadata.ApprovalPageField)__typeMapper.readObject(__in, approvalPageFields__typeInfo, com.sforce.soap.metadata.ApprovalPageField.class));
      }
    }

    /**
     * element : approvalStep of type {http://soap.sforce.com/2006/04/metadata}ApprovalStep
     * java type: com.sforce.soap.metadata.ApprovalStep[]
     */
    private static final com.sforce.ws.bind.TypeInfo approvalStep__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","approvalStep","http://soap.sforce.com/2006/04/metadata","ApprovalStep",0,-1,true);

    private boolean approvalStep__is_set = false;

    private com.sforce.soap.metadata.ApprovalStep[] approvalStep = new com.sforce.soap.metadata.ApprovalStep[0];

    public com.sforce.soap.metadata.ApprovalStep[] getApprovalStep() {
      return approvalStep;
    }

    public void setApprovalStep(com.sforce.soap.metadata.ApprovalStep[] approvalStep) {
      this.approvalStep = approvalStep;
      approvalStep__is_set = true;
    }

    protected void setApprovalStep(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, approvalStep__typeInfo)) {
        setApprovalStep((com.sforce.soap.metadata.ApprovalStep[])__typeMapper.readObject(__in, approvalStep__typeInfo, com.sforce.soap.metadata.ApprovalStep[].class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : emailTemplate of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo emailTemplate__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","emailTemplate","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean emailTemplate__is_set = false;

    private java.lang.String emailTemplate;

    public java.lang.String getEmailTemplate() {
      return emailTemplate;
    }

    public void setEmailTemplate(java.lang.String emailTemplate) {
      this.emailTemplate = emailTemplate;
      emailTemplate__is_set = true;
    }

    protected void setEmailTemplate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, emailTemplate__typeInfo)) {
        setEmailTemplate(__typeMapper.readString(__in, emailTemplate__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : enableMobileDeviceAccess of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableMobileDeviceAccess__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableMobileDeviceAccess","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableMobileDeviceAccess__is_set = false;

    private boolean enableMobileDeviceAccess;

    public boolean getEnableMobileDeviceAccess() {
      return enableMobileDeviceAccess;
    }

    public boolean isEnableMobileDeviceAccess() {
      return enableMobileDeviceAccess;
    }

    public void setEnableMobileDeviceAccess(boolean enableMobileDeviceAccess) {
      this.enableMobileDeviceAccess = enableMobileDeviceAccess;
      enableMobileDeviceAccess__is_set = true;
    }

    protected void setEnableMobileDeviceAccess(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableMobileDeviceAccess__typeInfo)) {
        setEnableMobileDeviceAccess(__typeMapper.readBoolean(__in, enableMobileDeviceAccess__typeInfo, boolean.class));
      }
    }

    /**
     * element : entryCriteria of type {http://soap.sforce.com/2006/04/metadata}ApprovalEntryCriteria
     * java type: com.sforce.soap.metadata.ApprovalEntryCriteria
     */
    private static final com.sforce.ws.bind.TypeInfo entryCriteria__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","entryCriteria","http://soap.sforce.com/2006/04/metadata","ApprovalEntryCriteria",0,1,true);

    private boolean entryCriteria__is_set = false;

    private com.sforce.soap.metadata.ApprovalEntryCriteria entryCriteria;

    public com.sforce.soap.metadata.ApprovalEntryCriteria getEntryCriteria() {
      return entryCriteria;
    }

    public void setEntryCriteria(com.sforce.soap.metadata.ApprovalEntryCriteria entryCriteria) {
      this.entryCriteria = entryCriteria;
      entryCriteria__is_set = true;
    }

    protected void setEntryCriteria(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, entryCriteria__typeInfo)) {
        setEntryCriteria((com.sforce.soap.metadata.ApprovalEntryCriteria)__typeMapper.readObject(__in, entryCriteria__typeInfo, com.sforce.soap.metadata.ApprovalEntryCriteria.class));
      }
    }

    /**
     * element : finalApprovalActions of type {http://soap.sforce.com/2006/04/metadata}ApprovalAction
     * java type: com.sforce.soap.metadata.ApprovalAction
     */
    private static final com.sforce.ws.bind.TypeInfo finalApprovalActions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","finalApprovalActions","http://soap.sforce.com/2006/04/metadata","ApprovalAction",0,1,true);

    private boolean finalApprovalActions__is_set = false;

    private com.sforce.soap.metadata.ApprovalAction finalApprovalActions;

    public com.sforce.soap.metadata.ApprovalAction getFinalApprovalActions() {
      return finalApprovalActions;
    }

    public void setFinalApprovalActions(com.sforce.soap.metadata.ApprovalAction finalApprovalActions) {
      this.finalApprovalActions = finalApprovalActions;
      finalApprovalActions__is_set = true;
    }

    protected void setFinalApprovalActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, finalApprovalActions__typeInfo)) {
        setFinalApprovalActions((com.sforce.soap.metadata.ApprovalAction)__typeMapper.readObject(__in, finalApprovalActions__typeInfo, com.sforce.soap.metadata.ApprovalAction.class));
      }
    }

    /**
     * element : finalApprovalRecordLock of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo finalApprovalRecordLock__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","finalApprovalRecordLock","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean finalApprovalRecordLock__is_set = false;

    private boolean finalApprovalRecordLock;

    public boolean getFinalApprovalRecordLock() {
      return finalApprovalRecordLock;
    }

    public boolean isFinalApprovalRecordLock() {
      return finalApprovalRecordLock;
    }

    public void setFinalApprovalRecordLock(boolean finalApprovalRecordLock) {
      this.finalApprovalRecordLock = finalApprovalRecordLock;
      finalApprovalRecordLock__is_set = true;
    }

    protected void setFinalApprovalRecordLock(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, finalApprovalRecordLock__typeInfo)) {
        setFinalApprovalRecordLock(__typeMapper.readBoolean(__in, finalApprovalRecordLock__typeInfo, boolean.class));
      }
    }

    /**
     * element : finalRejectionActions of type {http://soap.sforce.com/2006/04/metadata}ApprovalAction
     * java type: com.sforce.soap.metadata.ApprovalAction
     */
    private static final com.sforce.ws.bind.TypeInfo finalRejectionActions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","finalRejectionActions","http://soap.sforce.com/2006/04/metadata","ApprovalAction",0,1,true);

    private boolean finalRejectionActions__is_set = false;

    private com.sforce.soap.metadata.ApprovalAction finalRejectionActions;

    public com.sforce.soap.metadata.ApprovalAction getFinalRejectionActions() {
      return finalRejectionActions;
    }

    public void setFinalRejectionActions(com.sforce.soap.metadata.ApprovalAction finalRejectionActions) {
      this.finalRejectionActions = finalRejectionActions;
      finalRejectionActions__is_set = true;
    }

    protected void setFinalRejectionActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, finalRejectionActions__typeInfo)) {
        setFinalRejectionActions((com.sforce.soap.metadata.ApprovalAction)__typeMapper.readObject(__in, finalRejectionActions__typeInfo, com.sforce.soap.metadata.ApprovalAction.class));
      }
    }

    /**
     * element : finalRejectionRecordLock of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo finalRejectionRecordLock__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","finalRejectionRecordLock","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean finalRejectionRecordLock__is_set = false;

    private boolean finalRejectionRecordLock;

    public boolean getFinalRejectionRecordLock() {
      return finalRejectionRecordLock;
    }

    public boolean isFinalRejectionRecordLock() {
      return finalRejectionRecordLock;
    }

    public void setFinalRejectionRecordLock(boolean finalRejectionRecordLock) {
      this.finalRejectionRecordLock = finalRejectionRecordLock;
      finalRejectionRecordLock__is_set = true;
    }

    protected void setFinalRejectionRecordLock(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, finalRejectionRecordLock__typeInfo)) {
        setFinalRejectionRecordLock(__typeMapper.readBoolean(__in, finalRejectionRecordLock__typeInfo, boolean.class));
      }
    }

    /**
     * element : initialSubmissionActions of type {http://soap.sforce.com/2006/04/metadata}ApprovalAction
     * java type: com.sforce.soap.metadata.ApprovalAction
     */
    private static final com.sforce.ws.bind.TypeInfo initialSubmissionActions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","initialSubmissionActions","http://soap.sforce.com/2006/04/metadata","ApprovalAction",0,1,true);

    private boolean initialSubmissionActions__is_set = false;

    private com.sforce.soap.metadata.ApprovalAction initialSubmissionActions;

    public com.sforce.soap.metadata.ApprovalAction getInitialSubmissionActions() {
      return initialSubmissionActions;
    }

    public void setInitialSubmissionActions(com.sforce.soap.metadata.ApprovalAction initialSubmissionActions) {
      this.initialSubmissionActions = initialSubmissionActions;
      initialSubmissionActions__is_set = true;
    }

    protected void setInitialSubmissionActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, initialSubmissionActions__typeInfo)) {
        setInitialSubmissionActions((com.sforce.soap.metadata.ApprovalAction)__typeMapper.readObject(__in, initialSubmissionActions__typeInfo, com.sforce.soap.metadata.ApprovalAction.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : nextAutomatedApprover of type {http://soap.sforce.com/2006/04/metadata}NextAutomatedApprover
     * java type: com.sforce.soap.metadata.NextAutomatedApprover
     */
    private static final com.sforce.ws.bind.TypeInfo nextAutomatedApprover__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","nextAutomatedApprover","http://soap.sforce.com/2006/04/metadata","NextAutomatedApprover",0,1,true);

    private boolean nextAutomatedApprover__is_set = false;

    private com.sforce.soap.metadata.NextAutomatedApprover nextAutomatedApprover;

    public com.sforce.soap.metadata.NextAutomatedApprover getNextAutomatedApprover() {
      return nextAutomatedApprover;
    }

    public void setNextAutomatedApprover(com.sforce.soap.metadata.NextAutomatedApprover nextAutomatedApprover) {
      this.nextAutomatedApprover = nextAutomatedApprover;
      nextAutomatedApprover__is_set = true;
    }

    protected void setNextAutomatedApprover(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, nextAutomatedApprover__typeInfo)) {
        setNextAutomatedApprover((com.sforce.soap.metadata.NextAutomatedApprover)__typeMapper.readObject(__in, nextAutomatedApprover__typeInfo, com.sforce.soap.metadata.NextAutomatedApprover.class));
      }
    }

    /**
     * element : postTemplate of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo postTemplate__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","postTemplate","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean postTemplate__is_set = false;

    private java.lang.String postTemplate;

    public java.lang.String getPostTemplate() {
      return postTemplate;
    }

    public void setPostTemplate(java.lang.String postTemplate) {
      this.postTemplate = postTemplate;
      postTemplate__is_set = true;
    }

    protected void setPostTemplate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, postTemplate__typeInfo)) {
        setPostTemplate(__typeMapper.readString(__in, postTemplate__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : recallActions of type {http://soap.sforce.com/2006/04/metadata}ApprovalAction
     * java type: com.sforce.soap.metadata.ApprovalAction
     */
    private static final com.sforce.ws.bind.TypeInfo recallActions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","recallActions","http://soap.sforce.com/2006/04/metadata","ApprovalAction",0,1,true);

    private boolean recallActions__is_set = false;

    private com.sforce.soap.metadata.ApprovalAction recallActions;

    public com.sforce.soap.metadata.ApprovalAction getRecallActions() {
      return recallActions;
    }

    public void setRecallActions(com.sforce.soap.metadata.ApprovalAction recallActions) {
      this.recallActions = recallActions;
      recallActions__is_set = true;
    }

    protected void setRecallActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, recallActions__typeInfo)) {
        setRecallActions((com.sforce.soap.metadata.ApprovalAction)__typeMapper.readObject(__in, recallActions__typeInfo, com.sforce.soap.metadata.ApprovalAction.class));
      }
    }

    /**
     * element : recordEditability of type {http://soap.sforce.com/2006/04/metadata}RecordEditabilityType
     * java type: com.sforce.soap.metadata.RecordEditabilityType
     */
    private static final com.sforce.ws.bind.TypeInfo recordEditability__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","recordEditability","http://soap.sforce.com/2006/04/metadata","RecordEditabilityType",1,1,true);

    private boolean recordEditability__is_set = false;

    private com.sforce.soap.metadata.RecordEditabilityType recordEditability;

    public com.sforce.soap.metadata.RecordEditabilityType getRecordEditability() {
      return recordEditability;
    }

    public void setRecordEditability(com.sforce.soap.metadata.RecordEditabilityType recordEditability) {
      this.recordEditability = recordEditability;
      recordEditability__is_set = true;
    }

    protected void setRecordEditability(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, recordEditability__typeInfo)) {
        setRecordEditability((com.sforce.soap.metadata.RecordEditabilityType)__typeMapper.readObject(__in, recordEditability__typeInfo, com.sforce.soap.metadata.RecordEditabilityType.class));
      }
    }

    /**
     * element : showApprovalHistory of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo showApprovalHistory__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","showApprovalHistory","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean showApprovalHistory__is_set = false;

    private boolean showApprovalHistory;

    public boolean getShowApprovalHistory() {
      return showApprovalHistory;
    }

    public boolean isShowApprovalHistory() {
      return showApprovalHistory;
    }

    public void setShowApprovalHistory(boolean showApprovalHistory) {
      this.showApprovalHistory = showApprovalHistory;
      showApprovalHistory__is_set = true;
    }

    protected void setShowApprovalHistory(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, showApprovalHistory__typeInfo)) {
        setShowApprovalHistory(__typeMapper.readBoolean(__in, showApprovalHistory__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "ApprovalProcess");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeBoolean(__out, allowRecall__typeInfo, allowRecall, allowRecall__is_set);
       __typeMapper.writeObject(__out, allowedSubmitters__typeInfo, allowedSubmitters, allowedSubmitters__is_set);
       __typeMapper.writeObject(__out, approvalPageFields__typeInfo, approvalPageFields, approvalPageFields__is_set);
       __typeMapper.writeObject(__out, approvalStep__typeInfo, approvalStep, approvalStep__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, emailTemplate__typeInfo, emailTemplate, emailTemplate__is_set);
       __typeMapper.writeBoolean(__out, enableMobileDeviceAccess__typeInfo, enableMobileDeviceAccess, enableMobileDeviceAccess__is_set);
       __typeMapper.writeObject(__out, entryCriteria__typeInfo, entryCriteria, entryCriteria__is_set);
       __typeMapper.writeObject(__out, finalApprovalActions__typeInfo, finalApprovalActions, finalApprovalActions__is_set);
       __typeMapper.writeBoolean(__out, finalApprovalRecordLock__typeInfo, finalApprovalRecordLock, finalApprovalRecordLock__is_set);
       __typeMapper.writeObject(__out, finalRejectionActions__typeInfo, finalRejectionActions, finalRejectionActions__is_set);
       __typeMapper.writeBoolean(__out, finalRejectionRecordLock__typeInfo, finalRejectionRecordLock, finalRejectionRecordLock__is_set);
       __typeMapper.writeObject(__out, initialSubmissionActions__typeInfo, initialSubmissionActions, initialSubmissionActions__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeObject(__out, nextAutomatedApprover__typeInfo, nextAutomatedApprover, nextAutomatedApprover__is_set);
       __typeMapper.writeString(__out, postTemplate__typeInfo, postTemplate, postTemplate__is_set);
       __typeMapper.writeObject(__out, recallActions__typeInfo, recallActions, recallActions__is_set);
       __typeMapper.writeObject(__out, recordEditability__typeInfo, recordEditability, recordEditability__is_set);
       __typeMapper.writeBoolean(__out, showApprovalHistory__typeInfo, showApprovalHistory, showApprovalHistory__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setActive(__in, __typeMapper);
        setAllowRecall(__in, __typeMapper);
        setAllowedSubmitters(__in, __typeMapper);
        setApprovalPageFields(__in, __typeMapper);
        setApprovalStep(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setEmailTemplate(__in, __typeMapper);
        setEnableMobileDeviceAccess(__in, __typeMapper);
        setEntryCriteria(__in, __typeMapper);
        setFinalApprovalActions(__in, __typeMapper);
        setFinalApprovalRecordLock(__in, __typeMapper);
        setFinalRejectionActions(__in, __typeMapper);
        setFinalRejectionRecordLock(__in, __typeMapper);
        setInitialSubmissionActions(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setNextAutomatedApprover(__in, __typeMapper);
        setPostTemplate(__in, __typeMapper);
        setRecallActions(__in, __typeMapper);
        setRecordEditability(__in, __typeMapper);
        setShowApprovalHistory(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ApprovalProcess ");
      sb.append(super.toString());sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" allowRecall='").append(com.sforce.ws.util.Verbose.toString(allowRecall)).append("'\n");
      sb.append(" allowedSubmitters='").append(com.sforce.ws.util.Verbose.toString(allowedSubmitters)).append("'\n");
      sb.append(" approvalPageFields='").append(com.sforce.ws.util.Verbose.toString(approvalPageFields)).append("'\n");
      sb.append(" approvalStep='").append(com.sforce.ws.util.Verbose.toString(approvalStep)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" emailTemplate='").append(com.sforce.ws.util.Verbose.toString(emailTemplate)).append("'\n");
      sb.append(" enableMobileDeviceAccess='").append(com.sforce.ws.util.Verbose.toString(enableMobileDeviceAccess)).append("'\n");
      sb.append(" entryCriteria='").append(com.sforce.ws.util.Verbose.toString(entryCriteria)).append("'\n");
      sb.append(" finalApprovalActions='").append(com.sforce.ws.util.Verbose.toString(finalApprovalActions)).append("'\n");
      sb.append(" finalApprovalRecordLock='").append(com.sforce.ws.util.Verbose.toString(finalApprovalRecordLock)).append("'\n");
      sb.append(" finalRejectionActions='").append(com.sforce.ws.util.Verbose.toString(finalRejectionActions)).append("'\n");
      sb.append(" finalRejectionRecordLock='").append(com.sforce.ws.util.Verbose.toString(finalRejectionRecordLock)).append("'\n");
      sb.append(" initialSubmissionActions='").append(com.sforce.ws.util.Verbose.toString(initialSubmissionActions)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" nextAutomatedApprover='").append(com.sforce.ws.util.Verbose.toString(nextAutomatedApprover)).append("'\n");
      sb.append(" postTemplate='").append(com.sforce.ws.util.Verbose.toString(postTemplate)).append("'\n");
      sb.append(" recallActions='").append(com.sforce.ws.util.Verbose.toString(recallActions)).append("'\n");
      sb.append(" recordEditability='").append(com.sforce.ws.util.Verbose.toString(recordEditability)).append("'\n");
      sb.append(" showApprovalHistory='").append(com.sforce.ws.util.Verbose.toString(showApprovalHistory)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
