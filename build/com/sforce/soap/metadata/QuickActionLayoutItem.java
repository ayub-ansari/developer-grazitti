package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class QuickActionLayoutItem implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public QuickActionLayoutItem() {}

    /**
     * element : emptySpace of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo emptySpace__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","emptySpace","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean emptySpace__is_set = false;

    private boolean emptySpace;

    public boolean getEmptySpace() {
      return emptySpace;
    }

    public boolean isEmptySpace() {
      return emptySpace;
    }

    public void setEmptySpace(boolean emptySpace) {
      this.emptySpace = emptySpace;
      emptySpace__is_set = true;
    }

    protected void setEmptySpace(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, emptySpace__typeInfo)) {
        setEmptySpace(__typeMapper.readBoolean(__in, emptySpace__typeInfo, boolean.class));
      }
    }

    /**
     * element : field of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo field__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","field","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean field__is_set = false;

    private java.lang.String field;

    public java.lang.String getField() {
      return field;
    }

    public void setField(java.lang.String field) {
      this.field = field;
      field__is_set = true;
    }

    protected void setField(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, field__typeInfo)) {
        setField(__typeMapper.readString(__in, field__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : uiBehavior of type {http://soap.sforce.com/2006/04/metadata}UiBehavior
     * java type: com.sforce.soap.metadata.UiBehavior
     */
    private static final com.sforce.ws.bind.TypeInfo uiBehavior__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","uiBehavior","http://soap.sforce.com/2006/04/metadata","UiBehavior",0,1,true);

    private boolean uiBehavior__is_set = false;

    private com.sforce.soap.metadata.UiBehavior uiBehavior;

    public com.sforce.soap.metadata.UiBehavior getUiBehavior() {
      return uiBehavior;
    }

    public void setUiBehavior(com.sforce.soap.metadata.UiBehavior uiBehavior) {
      this.uiBehavior = uiBehavior;
      uiBehavior__is_set = true;
    }

    protected void setUiBehavior(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, uiBehavior__typeInfo)) {
        setUiBehavior((com.sforce.soap.metadata.UiBehavior)__typeMapper.readObject(__in, uiBehavior__typeInfo, com.sforce.soap.metadata.UiBehavior.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, emptySpace__typeInfo, emptySpace, emptySpace__is_set);
       __typeMapper.writeString(__out, field__typeInfo, field, field__is_set);
       __typeMapper.writeObject(__out, uiBehavior__typeInfo, uiBehavior, uiBehavior__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setEmptySpace(__in, __typeMapper);
        setField(__in, __typeMapper);
        setUiBehavior(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[QuickActionLayoutItem ");
      sb.append(" emptySpace='").append(com.sforce.ws.util.Verbose.toString(emptySpace)).append("'\n");
      sb.append(" field='").append(com.sforce.ws.util.Verbose.toString(field)).append("'\n");
      sb.append(" uiBehavior='").append(com.sforce.ws.util.Verbose.toString(uiBehavior)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
