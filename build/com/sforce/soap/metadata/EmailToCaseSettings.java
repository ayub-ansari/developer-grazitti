package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class EmailToCaseSettings implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public EmailToCaseSettings() {}

    /**
     * element : enableEmailToCase of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableEmailToCase__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableEmailToCase","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableEmailToCase__is_set = false;

    private boolean enableEmailToCase;

    public boolean getEnableEmailToCase() {
      return enableEmailToCase;
    }

    public boolean isEnableEmailToCase() {
      return enableEmailToCase;
    }

    public void setEnableEmailToCase(boolean enableEmailToCase) {
      this.enableEmailToCase = enableEmailToCase;
      enableEmailToCase__is_set = true;
    }

    protected void setEnableEmailToCase(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableEmailToCase__typeInfo)) {
        setEnableEmailToCase(__typeMapper.readBoolean(__in, enableEmailToCase__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableHtmlEmail of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableHtmlEmail__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableHtmlEmail","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableHtmlEmail__is_set = false;

    private boolean enableHtmlEmail;

    public boolean getEnableHtmlEmail() {
      return enableHtmlEmail;
    }

    public boolean isEnableHtmlEmail() {
      return enableHtmlEmail;
    }

    public void setEnableHtmlEmail(boolean enableHtmlEmail) {
      this.enableHtmlEmail = enableHtmlEmail;
      enableHtmlEmail__is_set = true;
    }

    protected void setEnableHtmlEmail(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableHtmlEmail__typeInfo)) {
        setEnableHtmlEmail(__typeMapper.readBoolean(__in, enableHtmlEmail__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableOnDemandEmailToCase of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableOnDemandEmailToCase__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableOnDemandEmailToCase","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableOnDemandEmailToCase__is_set = false;

    private boolean enableOnDemandEmailToCase;

    public boolean getEnableOnDemandEmailToCase() {
      return enableOnDemandEmailToCase;
    }

    public boolean isEnableOnDemandEmailToCase() {
      return enableOnDemandEmailToCase;
    }

    public void setEnableOnDemandEmailToCase(boolean enableOnDemandEmailToCase) {
      this.enableOnDemandEmailToCase = enableOnDemandEmailToCase;
      enableOnDemandEmailToCase__is_set = true;
    }

    protected void setEnableOnDemandEmailToCase(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableOnDemandEmailToCase__typeInfo)) {
        setEnableOnDemandEmailToCase(__typeMapper.readBoolean(__in, enableOnDemandEmailToCase__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableThreadIDInBody of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableThreadIDInBody__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableThreadIDInBody","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableThreadIDInBody__is_set = false;

    private boolean enableThreadIDInBody;

    public boolean getEnableThreadIDInBody() {
      return enableThreadIDInBody;
    }

    public boolean isEnableThreadIDInBody() {
      return enableThreadIDInBody;
    }

    public void setEnableThreadIDInBody(boolean enableThreadIDInBody) {
      this.enableThreadIDInBody = enableThreadIDInBody;
      enableThreadIDInBody__is_set = true;
    }

    protected void setEnableThreadIDInBody(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableThreadIDInBody__typeInfo)) {
        setEnableThreadIDInBody(__typeMapper.readBoolean(__in, enableThreadIDInBody__typeInfo, boolean.class));
      }
    }

    /**
     * element : enableThreadIDInSubject of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo enableThreadIDInSubject__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","enableThreadIDInSubject","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean enableThreadIDInSubject__is_set = false;

    private boolean enableThreadIDInSubject;

    public boolean getEnableThreadIDInSubject() {
      return enableThreadIDInSubject;
    }

    public boolean isEnableThreadIDInSubject() {
      return enableThreadIDInSubject;
    }

    public void setEnableThreadIDInSubject(boolean enableThreadIDInSubject) {
      this.enableThreadIDInSubject = enableThreadIDInSubject;
      enableThreadIDInSubject__is_set = true;
    }

    protected void setEnableThreadIDInSubject(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, enableThreadIDInSubject__typeInfo)) {
        setEnableThreadIDInSubject(__typeMapper.readBoolean(__in, enableThreadIDInSubject__typeInfo, boolean.class));
      }
    }

    /**
     * element : notifyOwnerOnNewCaseEmail of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo notifyOwnerOnNewCaseEmail__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","notifyOwnerOnNewCaseEmail","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean notifyOwnerOnNewCaseEmail__is_set = false;

    private boolean notifyOwnerOnNewCaseEmail;

    public boolean getNotifyOwnerOnNewCaseEmail() {
      return notifyOwnerOnNewCaseEmail;
    }

    public boolean isNotifyOwnerOnNewCaseEmail() {
      return notifyOwnerOnNewCaseEmail;
    }

    public void setNotifyOwnerOnNewCaseEmail(boolean notifyOwnerOnNewCaseEmail) {
      this.notifyOwnerOnNewCaseEmail = notifyOwnerOnNewCaseEmail;
      notifyOwnerOnNewCaseEmail__is_set = true;
    }

    protected void setNotifyOwnerOnNewCaseEmail(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, notifyOwnerOnNewCaseEmail__typeInfo)) {
        setNotifyOwnerOnNewCaseEmail(__typeMapper.readBoolean(__in, notifyOwnerOnNewCaseEmail__typeInfo, boolean.class));
      }
    }

    /**
     * element : overEmailLimitAction of type {http://soap.sforce.com/2006/04/metadata}EmailToCaseOnFailureActionType
     * java type: com.sforce.soap.metadata.EmailToCaseOnFailureActionType
     */
    private static final com.sforce.ws.bind.TypeInfo overEmailLimitAction__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","overEmailLimitAction","http://soap.sforce.com/2006/04/metadata","EmailToCaseOnFailureActionType",0,1,true);

    private boolean overEmailLimitAction__is_set = false;

    private com.sforce.soap.metadata.EmailToCaseOnFailureActionType overEmailLimitAction;

    public com.sforce.soap.metadata.EmailToCaseOnFailureActionType getOverEmailLimitAction() {
      return overEmailLimitAction;
    }

    public void setOverEmailLimitAction(com.sforce.soap.metadata.EmailToCaseOnFailureActionType overEmailLimitAction) {
      this.overEmailLimitAction = overEmailLimitAction;
      overEmailLimitAction__is_set = true;
    }

    protected void setOverEmailLimitAction(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, overEmailLimitAction__typeInfo)) {
        setOverEmailLimitAction((com.sforce.soap.metadata.EmailToCaseOnFailureActionType)__typeMapper.readObject(__in, overEmailLimitAction__typeInfo, com.sforce.soap.metadata.EmailToCaseOnFailureActionType.class));
      }
    }

    /**
     * element : preQuoteSignature of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo preQuoteSignature__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","preQuoteSignature","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean preQuoteSignature__is_set = false;

    private boolean preQuoteSignature;

    public boolean getPreQuoteSignature() {
      return preQuoteSignature;
    }

    public boolean isPreQuoteSignature() {
      return preQuoteSignature;
    }

    public void setPreQuoteSignature(boolean preQuoteSignature) {
      this.preQuoteSignature = preQuoteSignature;
      preQuoteSignature__is_set = true;
    }

    protected void setPreQuoteSignature(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, preQuoteSignature__typeInfo)) {
        setPreQuoteSignature(__typeMapper.readBoolean(__in, preQuoteSignature__typeInfo, boolean.class));
      }
    }

    /**
     * element : routingAddresses of type {http://soap.sforce.com/2006/04/metadata}EmailToCaseRoutingAddress
     * java type: com.sforce.soap.metadata.EmailToCaseRoutingAddress[]
     */
    private static final com.sforce.ws.bind.TypeInfo routingAddresses__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","routingAddresses","http://soap.sforce.com/2006/04/metadata","EmailToCaseRoutingAddress",0,-1,true);

    private boolean routingAddresses__is_set = false;

    private com.sforce.soap.metadata.EmailToCaseRoutingAddress[] routingAddresses = new com.sforce.soap.metadata.EmailToCaseRoutingAddress[0];

    public com.sforce.soap.metadata.EmailToCaseRoutingAddress[] getRoutingAddresses() {
      return routingAddresses;
    }

    public void setRoutingAddresses(com.sforce.soap.metadata.EmailToCaseRoutingAddress[] routingAddresses) {
      this.routingAddresses = routingAddresses;
      routingAddresses__is_set = true;
    }

    protected void setRoutingAddresses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, routingAddresses__typeInfo)) {
        setRoutingAddresses((com.sforce.soap.metadata.EmailToCaseRoutingAddress[])__typeMapper.readObject(__in, routingAddresses__typeInfo, com.sforce.soap.metadata.EmailToCaseRoutingAddress[].class));
      }
    }

    /**
     * element : unauthorizedSenderAction of type {http://soap.sforce.com/2006/04/metadata}EmailToCaseOnFailureActionType
     * java type: com.sforce.soap.metadata.EmailToCaseOnFailureActionType
     */
    private static final com.sforce.ws.bind.TypeInfo unauthorizedSenderAction__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","unauthorizedSenderAction","http://soap.sforce.com/2006/04/metadata","EmailToCaseOnFailureActionType",0,1,true);

    private boolean unauthorizedSenderAction__is_set = false;

    private com.sforce.soap.metadata.EmailToCaseOnFailureActionType unauthorizedSenderAction;

    public com.sforce.soap.metadata.EmailToCaseOnFailureActionType getUnauthorizedSenderAction() {
      return unauthorizedSenderAction;
    }

    public void setUnauthorizedSenderAction(com.sforce.soap.metadata.EmailToCaseOnFailureActionType unauthorizedSenderAction) {
      this.unauthorizedSenderAction = unauthorizedSenderAction;
      unauthorizedSenderAction__is_set = true;
    }

    protected void setUnauthorizedSenderAction(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, unauthorizedSenderAction__typeInfo)) {
        setUnauthorizedSenderAction((com.sforce.soap.metadata.EmailToCaseOnFailureActionType)__typeMapper.readObject(__in, unauthorizedSenderAction__typeInfo, com.sforce.soap.metadata.EmailToCaseOnFailureActionType.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, enableEmailToCase__typeInfo, enableEmailToCase, enableEmailToCase__is_set);
       __typeMapper.writeBoolean(__out, enableHtmlEmail__typeInfo, enableHtmlEmail, enableHtmlEmail__is_set);
       __typeMapper.writeBoolean(__out, enableOnDemandEmailToCase__typeInfo, enableOnDemandEmailToCase, enableOnDemandEmailToCase__is_set);
       __typeMapper.writeBoolean(__out, enableThreadIDInBody__typeInfo, enableThreadIDInBody, enableThreadIDInBody__is_set);
       __typeMapper.writeBoolean(__out, enableThreadIDInSubject__typeInfo, enableThreadIDInSubject, enableThreadIDInSubject__is_set);
       __typeMapper.writeBoolean(__out, notifyOwnerOnNewCaseEmail__typeInfo, notifyOwnerOnNewCaseEmail, notifyOwnerOnNewCaseEmail__is_set);
       __typeMapper.writeObject(__out, overEmailLimitAction__typeInfo, overEmailLimitAction, overEmailLimitAction__is_set);
       __typeMapper.writeBoolean(__out, preQuoteSignature__typeInfo, preQuoteSignature, preQuoteSignature__is_set);
       __typeMapper.writeObject(__out, routingAddresses__typeInfo, routingAddresses, routingAddresses__is_set);
       __typeMapper.writeObject(__out, unauthorizedSenderAction__typeInfo, unauthorizedSenderAction, unauthorizedSenderAction__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setEnableEmailToCase(__in, __typeMapper);
        setEnableHtmlEmail(__in, __typeMapper);
        setEnableOnDemandEmailToCase(__in, __typeMapper);
        setEnableThreadIDInBody(__in, __typeMapper);
        setEnableThreadIDInSubject(__in, __typeMapper);
        setNotifyOwnerOnNewCaseEmail(__in, __typeMapper);
        setOverEmailLimitAction(__in, __typeMapper);
        setPreQuoteSignature(__in, __typeMapper);
        setRoutingAddresses(__in, __typeMapper);
        setUnauthorizedSenderAction(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EmailToCaseSettings ");
      sb.append(" enableEmailToCase='").append(com.sforce.ws.util.Verbose.toString(enableEmailToCase)).append("'\n");
      sb.append(" enableHtmlEmail='").append(com.sforce.ws.util.Verbose.toString(enableHtmlEmail)).append("'\n");
      sb.append(" enableOnDemandEmailToCase='").append(com.sforce.ws.util.Verbose.toString(enableOnDemandEmailToCase)).append("'\n");
      sb.append(" enableThreadIDInBody='").append(com.sforce.ws.util.Verbose.toString(enableThreadIDInBody)).append("'\n");
      sb.append(" enableThreadIDInSubject='").append(com.sforce.ws.util.Verbose.toString(enableThreadIDInSubject)).append("'\n");
      sb.append(" notifyOwnerOnNewCaseEmail='").append(com.sforce.ws.util.Verbose.toString(notifyOwnerOnNewCaseEmail)).append("'\n");
      sb.append(" overEmailLimitAction='").append(com.sforce.ws.util.Verbose.toString(overEmailLimitAction)).append("'\n");
      sb.append(" preQuoteSignature='").append(com.sforce.ws.util.Verbose.toString(preQuoteSignature)).append("'\n");
      sb.append(" routingAddresses='").append(com.sforce.ws.util.Verbose.toString(routingAddresses)).append("'\n");
      sb.append(" unauthorizedSenderAction='").append(com.sforce.ws.util.Verbose.toString(unauthorizedSenderAction)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
