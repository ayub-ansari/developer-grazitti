package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class SiteRedirectMapping implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public SiteRedirectMapping() {}

    /**
     * element : action of type {http://soap.sforce.com/2006/04/metadata}SiteRedirect
     * java type: com.sforce.soap.metadata.SiteRedirect
     */
    private static final com.sforce.ws.bind.TypeInfo action__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","action","http://soap.sforce.com/2006/04/metadata","SiteRedirect",1,1,true);

    private boolean action__is_set = false;

    private com.sforce.soap.metadata.SiteRedirect action;

    public com.sforce.soap.metadata.SiteRedirect getAction() {
      return action;
    }

    public void setAction(com.sforce.soap.metadata.SiteRedirect action) {
      this.action = action;
      action__is_set = true;
    }

    protected void setAction(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, action__typeInfo)) {
        setAction((com.sforce.soap.metadata.SiteRedirect)__typeMapper.readObject(__in, action__typeInfo, com.sforce.soap.metadata.SiteRedirect.class));
      }
    }

    /**
     * element : isActive of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isActive__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","isActive","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean isActive__is_set = false;

    private boolean isActive;

    public boolean getIsActive() {
      return isActive;
    }

    public boolean isIsActive() {
      return isActive;
    }

    public void setIsActive(boolean isActive) {
      this.isActive = isActive;
      isActive__is_set = true;
    }

    protected void setIsActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, isActive__typeInfo)) {
        setIsActive(__typeMapper.readBoolean(__in, isActive__typeInfo, boolean.class));
      }
    }

    /**
     * element : source of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo source__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","source","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean source__is_set = false;

    private java.lang.String source;

    public java.lang.String getSource() {
      return source;
    }

    public void setSource(java.lang.String source) {
      this.source = source;
      source__is_set = true;
    }

    protected void setSource(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, source__typeInfo)) {
        setSource(__typeMapper.readString(__in, source__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : target of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo target__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","target","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean target__is_set = false;

    private java.lang.String target;

    public java.lang.String getTarget() {
      return target;
    }

    public void setTarget(java.lang.String target) {
      this.target = target;
      target__is_set = true;
    }

    protected void setTarget(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, target__typeInfo)) {
        setTarget(__typeMapper.readString(__in, target__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, action__typeInfo, action, action__is_set);
       __typeMapper.writeBoolean(__out, isActive__typeInfo, isActive, isActive__is_set);
       __typeMapper.writeString(__out, source__typeInfo, source, source__is_set);
       __typeMapper.writeString(__out, target__typeInfo, target, target__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAction(__in, __typeMapper);
        setIsActive(__in, __typeMapper);
        setSource(__in, __typeMapper);
        setTarget(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[SiteRedirectMapping ");
      sb.append(" action='").append(com.sforce.ws.util.Verbose.toString(action)).append("'\n");
      sb.append(" isActive='").append(com.sforce.ws.util.Verbose.toString(isActive)).append("'\n");
      sb.append(" source='").append(com.sforce.ws.util.Verbose.toString(source)).append("'\n");
      sb.append(" target='").append(com.sforce.ws.util.Verbose.toString(target)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
