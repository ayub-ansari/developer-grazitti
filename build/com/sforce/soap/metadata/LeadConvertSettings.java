package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class LeadConvertSettings extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public LeadConvertSettings() {}

    /**
     * element : allowOwnerChange of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allowOwnerChange__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","allowOwnerChange","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean allowOwnerChange__is_set = false;

    private boolean allowOwnerChange;

    public boolean getAllowOwnerChange() {
      return allowOwnerChange;
    }

    public boolean isAllowOwnerChange() {
      return allowOwnerChange;
    }

    public void setAllowOwnerChange(boolean allowOwnerChange) {
      this.allowOwnerChange = allowOwnerChange;
      allowOwnerChange__is_set = true;
    }

    protected void setAllowOwnerChange(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, allowOwnerChange__typeInfo)) {
        setAllowOwnerChange(__typeMapper.readBoolean(__in, allowOwnerChange__typeInfo, boolean.class));
      }
    }

    /**
     * element : opportunityCreationOptions of type {http://soap.sforce.com/2006/04/metadata}VisibleOrRequired
     * java type: com.sforce.soap.metadata.VisibleOrRequired
     */
    private static final com.sforce.ws.bind.TypeInfo opportunityCreationOptions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","opportunityCreationOptions","http://soap.sforce.com/2006/04/metadata","VisibleOrRequired",0,1,true);

    private boolean opportunityCreationOptions__is_set = false;

    private com.sforce.soap.metadata.VisibleOrRequired opportunityCreationOptions;

    public com.sforce.soap.metadata.VisibleOrRequired getOpportunityCreationOptions() {
      return opportunityCreationOptions;
    }

    public void setOpportunityCreationOptions(com.sforce.soap.metadata.VisibleOrRequired opportunityCreationOptions) {
      this.opportunityCreationOptions = opportunityCreationOptions;
      opportunityCreationOptions__is_set = true;
    }

    protected void setOpportunityCreationOptions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, opportunityCreationOptions__typeInfo)) {
        setOpportunityCreationOptions((com.sforce.soap.metadata.VisibleOrRequired)__typeMapper.readObject(__in, opportunityCreationOptions__typeInfo, com.sforce.soap.metadata.VisibleOrRequired.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "LeadConvertSettings");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, allowOwnerChange__typeInfo, allowOwnerChange, allowOwnerChange__is_set);
       __typeMapper.writeObject(__out, opportunityCreationOptions__typeInfo, opportunityCreationOptions, opportunityCreationOptions__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setAllowOwnerChange(__in, __typeMapper);
        setOpportunityCreationOptions(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[LeadConvertSettings ");
      sb.append(super.toString());sb.append(" allowOwnerChange='").append(com.sforce.ws.util.Verbose.toString(allowOwnerChange)).append("'\n");
      sb.append(" opportunityCreationOptions='").append(com.sforce.ws.util.Verbose.toString(opportunityCreationOptions)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
