package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class EventSubscription extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public EventSubscription() {}

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","active","http://www.w3.org/2001/XMLSchema","boolean",0,1,true);

    private boolean active__is_set = false;

    private boolean active;

    public boolean getActive() {
      return active;
    }

    public boolean isActive() {
      return active;
    }

    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : eventParameters of type {http://soap.sforce.com/2006/04/metadata}EventParameterMap
     * java type: com.sforce.soap.metadata.EventParameterMap[]
     */
    private static final com.sforce.ws.bind.TypeInfo eventParameters__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","eventParameters","http://soap.sforce.com/2006/04/metadata","EventParameterMap",0,-1,true);

    private boolean eventParameters__is_set = false;

    private com.sforce.soap.metadata.EventParameterMap[] eventParameters = new com.sforce.soap.metadata.EventParameterMap[0];

    public com.sforce.soap.metadata.EventParameterMap[] getEventParameters() {
      return eventParameters;
    }

    public void setEventParameters(com.sforce.soap.metadata.EventParameterMap[] eventParameters) {
      this.eventParameters = eventParameters;
      eventParameters__is_set = true;
    }

    protected void setEventParameters(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, eventParameters__typeInfo)) {
        setEventParameters((com.sforce.soap.metadata.EventParameterMap[])__typeMapper.readObject(__in, eventParameters__typeInfo, com.sforce.soap.metadata.EventParameterMap[].class));
      }
    }

    /**
     * element : eventType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo eventType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","eventType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean eventType__is_set = false;

    private java.lang.String eventType;

    public java.lang.String getEventType() {
      return eventType;
    }

    public void setEventType(java.lang.String eventType) {
      this.eventType = eventType;
      eventType__is_set = true;
    }

    protected void setEventType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, eventType__typeInfo)) {
        setEventType(__typeMapper.readString(__in, eventType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : referenceData of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo referenceData__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","referenceData","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean referenceData__is_set = false;

    private java.lang.String referenceData;

    public java.lang.String getReferenceData() {
      return referenceData;
    }

    public void setReferenceData(java.lang.String referenceData) {
      this.referenceData = referenceData;
      referenceData__is_set = true;
    }

    protected void setReferenceData(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, referenceData__typeInfo)) {
        setReferenceData(__typeMapper.readString(__in, referenceData__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "EventSubscription");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeObject(__out, eventParameters__typeInfo, eventParameters, eventParameters__is_set);
       __typeMapper.writeString(__out, eventType__typeInfo, eventType, eventType__is_set);
       __typeMapper.writeString(__out, referenceData__typeInfo, referenceData, referenceData__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setActive(__in, __typeMapper);
        setEventParameters(__in, __typeMapper);
        setEventType(__in, __typeMapper);
        setReferenceData(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[EventSubscription ");
      sb.append(super.toString());sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" eventParameters='").append(com.sforce.ws.util.Verbose.toString(eventParameters)).append("'\n");
      sb.append(" eventType='").append(com.sforce.ws.util.Verbose.toString(eventType)).append("'\n");
      sb.append(" referenceData='").append(com.sforce.ws.util.Verbose.toString(referenceData)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
