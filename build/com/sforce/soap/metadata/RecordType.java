package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class RecordType extends com.sforce.soap.metadata.Metadata {

    /**
     * Constructor
     */
    public RecordType() {}

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean active__is_set = false;

    private boolean active;

    public boolean getActive() {
      return active;
    }

    public boolean isActive() {
      return active;
    }

    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : businessProcess of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo businessProcess__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","businessProcess","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean businessProcess__is_set = false;

    private java.lang.String businessProcess;

    public java.lang.String getBusinessProcess() {
      return businessProcess;
    }

    public void setBusinessProcess(java.lang.String businessProcess) {
      this.businessProcess = businessProcess;
      businessProcess__is_set = true;
    }

    protected void setBusinessProcess(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, businessProcess__typeInfo)) {
        setBusinessProcess(__typeMapper.readString(__in, businessProcess__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : compactLayoutAssignment of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo compactLayoutAssignment__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","compactLayoutAssignment","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean compactLayoutAssignment__is_set = false;

    private java.lang.String compactLayoutAssignment;

    public java.lang.String getCompactLayoutAssignment() {
      return compactLayoutAssignment;
    }

    public void setCompactLayoutAssignment(java.lang.String compactLayoutAssignment) {
      this.compactLayoutAssignment = compactLayoutAssignment;
      compactLayoutAssignment__is_set = true;
    }

    protected void setCompactLayoutAssignment(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, compactLayoutAssignment__typeInfo)) {
        setCompactLayoutAssignment(__typeMapper.readString(__in, compactLayoutAssignment__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","description","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    public java.lang.String getDescription() {
      return description;
    }

    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    public java.lang.String getLabel() {
      return label;
    }

    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : picklistValues of type {http://soap.sforce.com/2006/04/metadata}RecordTypePicklistValue
     * java type: com.sforce.soap.metadata.RecordTypePicklistValue[]
     */
    private static final com.sforce.ws.bind.TypeInfo picklistValues__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","picklistValues","http://soap.sforce.com/2006/04/metadata","RecordTypePicklistValue",0,-1,true);

    private boolean picklistValues__is_set = false;

    private com.sforce.soap.metadata.RecordTypePicklistValue[] picklistValues = new com.sforce.soap.metadata.RecordTypePicklistValue[0];

    public com.sforce.soap.metadata.RecordTypePicklistValue[] getPicklistValues() {
      return picklistValues;
    }

    public void setPicklistValues(com.sforce.soap.metadata.RecordTypePicklistValue[] picklistValues) {
      this.picklistValues = picklistValues;
      picklistValues__is_set = true;
    }

    protected void setPicklistValues(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, picklistValues__typeInfo)) {
        setPicklistValues((com.sforce.soap.metadata.RecordTypePicklistValue[])__typeMapper.readObject(__in, picklistValues__typeInfo, com.sforce.soap.metadata.RecordTypePicklistValue[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      __typeMapper.writeXsiType(__out, "http://soap.sforce.com/2006/04/metadata", "RecordType");
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       super.writeFields(__out, __typeMapper);
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeString(__out, businessProcess__typeInfo, businessProcess, businessProcess__is_set);
       __typeMapper.writeString(__out, compactLayoutAssignment__typeInfo, compactLayoutAssignment, compactLayoutAssignment__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeObject(__out, picklistValues__typeInfo, picklistValues, picklistValues__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        super.loadFields(__in, __typeMapper);
        setActive(__in, __typeMapper);
        setBusinessProcess(__in, __typeMapper);
        setCompactLayoutAssignment(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setPicklistValues(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[RecordType ");
      sb.append(super.toString());sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" businessProcess='").append(com.sforce.ws.util.Verbose.toString(businessProcess)).append("'\n");
      sb.append(" compactLayoutAssignment='").append(com.sforce.ws.util.Verbose.toString(compactLayoutAssignment)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" picklistValues='").append(com.sforce.ws.util.Verbose.toString(picklistValues)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
