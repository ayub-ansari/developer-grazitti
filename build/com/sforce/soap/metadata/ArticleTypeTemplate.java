package com.sforce.soap.metadata;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class ArticleTypeTemplate implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public ArticleTypeTemplate() {}

    /**
     * element : channel of type {http://soap.sforce.com/2006/04/metadata}Channel
     * java type: com.sforce.soap.metadata.Channel
     */
    private static final com.sforce.ws.bind.TypeInfo channel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","channel","http://soap.sforce.com/2006/04/metadata","Channel",1,1,true);

    private boolean channel__is_set = false;

    private com.sforce.soap.metadata.Channel channel;

    public com.sforce.soap.metadata.Channel getChannel() {
      return channel;
    }

    public void setChannel(com.sforce.soap.metadata.Channel channel) {
      this.channel = channel;
      channel__is_set = true;
    }

    protected void setChannel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, channel__typeInfo)) {
        setChannel((com.sforce.soap.metadata.Channel)__typeMapper.readObject(__in, channel__typeInfo, com.sforce.soap.metadata.Channel.class));
      }
    }

    /**
     * element : page of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo page__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","page","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean page__is_set = false;

    private java.lang.String page;

    public java.lang.String getPage() {
      return page;
    }

    public void setPage(java.lang.String page) {
      this.page = page;
      page__is_set = true;
    }

    protected void setPage(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, page__typeInfo)) {
        setPage(__typeMapper.readString(__in, page__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : template of type {http://soap.sforce.com/2006/04/metadata}Template
     * java type: com.sforce.soap.metadata.Template
     */
    private static final com.sforce.ws.bind.TypeInfo template__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/04/metadata","template","http://soap.sforce.com/2006/04/metadata","Template",1,1,true);

    private boolean template__is_set = false;

    private com.sforce.soap.metadata.Template template;

    public com.sforce.soap.metadata.Template getTemplate() {
      return template;
    }

    public void setTemplate(com.sforce.soap.metadata.Template template) {
      this.template = template;
      template__is_set = true;
    }

    protected void setTemplate(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, template__typeInfo)) {
        setTemplate((com.sforce.soap.metadata.Template)__typeMapper.readObject(__in, template__typeInfo, com.sforce.soap.metadata.Template.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, channel__typeInfo, channel, channel__is_set);
       __typeMapper.writeString(__out, page__typeInfo, page, page__is_set);
       __typeMapper.writeObject(__out, template__typeInfo, template, template__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setChannel(__in, __typeMapper);
        setPage(__in, __typeMapper);
        setTemplate(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[ArticleTypeTemplate ");
      sb.append(" channel='").append(com.sforce.ws.util.Verbose.toString(channel)).append("'\n");
      sb.append(" page='").append(com.sforce.ws.util.Verbose.toString(page)).append("'\n");
      sb.append(" template='").append(com.sforce.ws.util.Verbose.toString(template)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
