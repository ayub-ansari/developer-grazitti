package com.sforce.soap.apex;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class RunTestsRequest implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public RunTestsRequest() {}

    /**
     * element : allTests of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo allTests__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","allTests","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean allTests__is_set = false;

    private boolean allTests;

    public boolean getAllTests() {
      return allTests;
    }

    public boolean isAllTests() {
      return allTests;
    }

    public void setAllTests(boolean allTests) {
      this.allTests = allTests;
      allTests__is_set = true;
    }

    protected void setAllTests(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, allTests__typeInfo)) {
        setAllTests(__typeMapper.readBoolean(__in, allTests__typeInfo, boolean.class));
      }
    }

    /**
     * element : classes of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo classes__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","classes","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean classes__is_set = false;

    private java.lang.String[] classes = new java.lang.String[0];

    public java.lang.String[] getClasses() {
      return classes;
    }

    public void setClasses(java.lang.String[] classes) {
      this.classes = classes;
      classes__is_set = true;
    }

    protected void setClasses(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, classes__typeInfo)) {
        setClasses((java.lang.String[])__typeMapper.readObject(__in, classes__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : maxFailedTests of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo maxFailedTests__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","maxFailedTests","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean maxFailedTests__is_set = false;

    private int maxFailedTests;

    public int getMaxFailedTests() {
      return maxFailedTests;
    }

    public void setMaxFailedTests(int maxFailedTests) {
      this.maxFailedTests = maxFailedTests;
      maxFailedTests__is_set = true;
    }

    protected void setMaxFailedTests(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, maxFailedTests__typeInfo)) {
        setMaxFailedTests((int)__typeMapper.readInt(__in, maxFailedTests__typeInfo, int.class));
      }
    }

    /**
     * element : namespace of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo namespace__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","namespace","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean namespace__is_set = false;

    private java.lang.String namespace;

    public java.lang.String getNamespace() {
      return namespace;
    }

    public void setNamespace(java.lang.String namespace) {
      this.namespace = namespace;
      namespace__is_set = true;
    }

    protected void setNamespace(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, namespace__typeInfo)) {
        setNamespace(__typeMapper.readString(__in, namespace__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : packages of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo packages__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","packages","http://www.w3.org/2001/XMLSchema","string",0,-1,true);

    private boolean packages__is_set = false;

    private java.lang.String[] packages = new java.lang.String[0];

    public java.lang.String[] getPackages() {
      return packages;
    }

    public void setPackages(java.lang.String[] packages) {
      this.packages = packages;
      packages__is_set = true;
    }

    protected void setPackages(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, packages__typeInfo)) {
        setPackages((java.lang.String[])__typeMapper.readObject(__in, packages__typeInfo, java.lang.String[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, allTests__typeInfo, allTests, allTests__is_set);
       __typeMapper.writeObject(__out, classes__typeInfo, classes, classes__is_set);
       __typeMapper.writeInt(__out, maxFailedTests__typeInfo, maxFailedTests, maxFailedTests__is_set);
       __typeMapper.writeString(__out, namespace__typeInfo, namespace, namespace__is_set);
       __typeMapper.writeObject(__out, packages__typeInfo, packages, packages__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAllTests(__in, __typeMapper);
        setClasses(__in, __typeMapper);
        setMaxFailedTests(__in, __typeMapper);
        setNamespace(__in, __typeMapper);
        setPackages(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[RunTestsRequest ");
      sb.append(" allTests='").append(com.sforce.ws.util.Verbose.toString(allTests)).append("'\n");
      sb.append(" classes='").append(com.sforce.ws.util.Verbose.toString(classes)).append("'\n");
      sb.append(" maxFailedTests='").append(com.sforce.ws.util.Verbose.toString(maxFailedTests)).append("'\n");
      sb.append(" namespace='").append(com.sforce.ws.util.Verbose.toString(namespace)).append("'\n");
      sb.append(" packages='").append(com.sforce.ws.util.Verbose.toString(packages)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
