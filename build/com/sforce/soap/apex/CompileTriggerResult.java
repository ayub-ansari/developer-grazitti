package com.sforce.soap.apex;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class CompileTriggerResult implements com.sforce.ws.bind.XMLizable {

    /**
     * Constructor
     */
    public CompileTriggerResult() {}

    /**
     * element : bodyCrc of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo bodyCrc__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","bodyCrc","http://www.w3.org/2001/XMLSchema","int",0,1,true);

    private boolean bodyCrc__is_set = false;

    private int bodyCrc;

    public int getBodyCrc() {
      return bodyCrc;
    }

    public void setBodyCrc(int bodyCrc) {
      this.bodyCrc = bodyCrc;
      bodyCrc__is_set = true;
    }

    protected void setBodyCrc(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, bodyCrc__typeInfo)) {
        setBodyCrc((int)__typeMapper.readInt(__in, bodyCrc__typeInfo, int.class));
      }
    }

    /**
     * element : column of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo column__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","column","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean column__is_set = false;

    private int column;

    public int getColumn() {
      return column;
    }

    public void setColumn(int column) {
      this.column = column;
      column__is_set = true;
    }

    protected void setColumn(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, column__typeInfo)) {
        setColumn((int)__typeMapper.readInt(__in, column__typeInfo, int.class));
      }
    }

    /**
     * element : id of type {http://soap.sforce.com/2006/08/apex}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo id__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","id","http://soap.sforce.com/2006/08/apex","ID",1,1,true);

    private boolean id__is_set = false;

    private java.lang.String id;

    public java.lang.String getId() {
      return id;
    }

    public void setId(java.lang.String id) {
      this.id = id;
      id__is_set = true;
    }

    protected void setId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, id__typeInfo)) {
        setId(__typeMapper.readString(__in, id__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : line of type {http://www.w3.org/2001/XMLSchema}int
     * java type: int
     */
    private static final com.sforce.ws.bind.TypeInfo line__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","line","http://www.w3.org/2001/XMLSchema","int",1,1,true);

    private boolean line__is_set = false;

    private int line;

    public int getLine() {
      return line;
    }

    public void setLine(int line) {
      this.line = line;
      line__is_set = true;
    }

    protected void setLine(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, line__typeInfo)) {
        setLine((int)__typeMapper.readInt(__in, line__typeInfo, int.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","name","http://www.w3.org/2001/XMLSchema","string",0,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    public java.lang.String getName() {
      return name;
    }

    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : problem of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo problem__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","problem","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean problem__is_set = false;

    private java.lang.String problem;

    public java.lang.String getProblem() {
      return problem;
    }

    public void setProblem(java.lang.String problem) {
      this.problem = problem;
      problem__is_set = true;
    }

    protected void setProblem(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, problem__typeInfo)) {
        setProblem(__typeMapper.readString(__in, problem__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : problems of type {http://soap.sforce.com/2006/08/apex}CompileIssue
     * java type: com.sforce.soap.apex.CompileIssue[]
     */
    private static final com.sforce.ws.bind.TypeInfo problems__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","problems","http://soap.sforce.com/2006/08/apex","CompileIssue",0,-1,true);

    private boolean problems__is_set = false;

    private com.sforce.soap.apex.CompileIssue[] problems = new com.sforce.soap.apex.CompileIssue[0];

    public com.sforce.soap.apex.CompileIssue[] getProblems() {
      return problems;
    }

    public void setProblems(com.sforce.soap.apex.CompileIssue[] problems) {
      this.problems = problems;
      problems__is_set = true;
    }

    protected void setProblems(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, problems__typeInfo)) {
        setProblems((com.sforce.soap.apex.CompileIssue[])__typeMapper.readObject(__in, problems__typeInfo, com.sforce.soap.apex.CompileIssue[].class));
      }
    }

    /**
     * element : success of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo success__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","success","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean success__is_set = false;

    private boolean success;

    public boolean getSuccess() {
      return success;
    }

    public boolean isSuccess() {
      return success;
    }

    public void setSuccess(boolean success) {
      this.success = success;
      success__is_set = true;
    }

    protected void setSuccess(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, success__typeInfo)) {
        setSuccess(__typeMapper.readBoolean(__in, success__typeInfo, boolean.class));
      }
    }

    /**
     * element : warnings of type {http://soap.sforce.com/2006/08/apex}CompileIssue
     * java type: com.sforce.soap.apex.CompileIssue[]
     */
    private static final com.sforce.ws.bind.TypeInfo warnings__typeInfo =
      new com.sforce.ws.bind.TypeInfo("http://soap.sforce.com/2006/08/apex","warnings","http://soap.sforce.com/2006/08/apex","CompileIssue",0,-1,true);

    private boolean warnings__is_set = false;

    private com.sforce.soap.apex.CompileIssue[] warnings = new com.sforce.soap.apex.CompileIssue[0];

    public com.sforce.soap.apex.CompileIssue[] getWarnings() {
      return warnings;
    }

    public void setWarnings(com.sforce.soap.apex.CompileIssue[] warnings) {
      this.warnings = warnings;
      warnings__is_set = true;
    }

    protected void setWarnings(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, warnings__typeInfo)) {
        setWarnings((com.sforce.soap.apex.CompileIssue[])__typeMapper.readObject(__in, warnings__typeInfo, com.sforce.soap.apex.CompileIssue[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeInt(__out, bodyCrc__typeInfo, bodyCrc, bodyCrc__is_set);
       __typeMapper.writeInt(__out, column__typeInfo, column, column__is_set);
       __typeMapper.writeString(__out, id__typeInfo, id, id__is_set);
       __typeMapper.writeInt(__out, line__typeInfo, line, line__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeString(__out, problem__typeInfo, problem, problem__is_set);
       __typeMapper.writeObject(__out, problems__typeInfo, problems, problems__is_set);
       __typeMapper.writeBoolean(__out, success__typeInfo, success, success__is_set);
       __typeMapper.writeObject(__out, warnings__typeInfo, warnings, warnings__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setBodyCrc(__in, __typeMapper);
        setColumn(__in, __typeMapper);
        setId(__in, __typeMapper);
        setLine(__in, __typeMapper);
        setName(__in, __typeMapper);
        setProblem(__in, __typeMapper);
        setProblems(__in, __typeMapper);
        setSuccess(__in, __typeMapper);
        setWarnings(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[CompileTriggerResult ");
      sb.append(" bodyCrc='").append(com.sforce.ws.util.Verbose.toString(bodyCrc)).append("'\n");
      sb.append(" column='").append(com.sforce.ws.util.Verbose.toString(column)).append("'\n");
      sb.append(" id='").append(com.sforce.ws.util.Verbose.toString(id)).append("'\n");
      sb.append(" line='").append(com.sforce.ws.util.Verbose.toString(line)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" problem='").append(com.sforce.ws.util.Verbose.toString(problem)).append("'\n");
      sb.append(" problems='").append(com.sforce.ws.util.Verbose.toString(problems)).append("'\n");
      sb.append(" success='").append(com.sforce.ws.util.Verbose.toString(success)).append("'\n");
      sb.append(" warnings='").append(com.sforce.ws.util.Verbose.toString(warnings)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

}
