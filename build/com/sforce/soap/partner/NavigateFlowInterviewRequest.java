package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class NavigateFlowInterviewRequest implements com.sforce.ws.bind.XMLizable , INavigateFlowInterviewRequest{

    /**
     * Constructor
     */
    public NavigateFlowInterviewRequest() {}

    /**
     * element : action of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo action__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","action","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean action__is_set = false;

    private java.lang.String action;

    @Override
    public java.lang.String getAction() {
      return action;
    }

    @Override
    public void setAction(java.lang.String action) {
      this.action = action;
      action__is_set = true;
    }

    protected void setAction(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, action__typeInfo)) {
        setAction(__typeMapper.readString(__in, action__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : screenInputs of type {urn:partner.soap.sforce.com}NameObjectValuePair
     * java type: com.sforce.soap.partner.NameObjectValuePair[]
     */
    private static final com.sforce.ws.bind.TypeInfo screenInputs__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","screenInputs","urn:partner.soap.sforce.com","NameObjectValuePair",0,-1,true);

    private boolean screenInputs__is_set = false;

    private com.sforce.soap.partner.NameObjectValuePair[] screenInputs = new com.sforce.soap.partner.NameObjectValuePair[0];

    @Override
    public com.sforce.soap.partner.NameObjectValuePair[] getScreenInputs() {
      return screenInputs;
    }

    @Override
    public void setScreenInputs(com.sforce.soap.partner.INameObjectValuePair[] screenInputs) {
      this.screenInputs = castArray(com.sforce.soap.partner.NameObjectValuePair.class, screenInputs);
      screenInputs__is_set = true;
    }

    protected void setScreenInputs(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, screenInputs__typeInfo)) {
        setScreenInputs((com.sforce.soap.partner.NameObjectValuePair[])__typeMapper.readObject(__in, screenInputs__typeInfo, com.sforce.soap.partner.NameObjectValuePair[].class));
      }
    }

    /**
     * element : state of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo state__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","state","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean state__is_set = false;

    private java.lang.String state;

    @Override
    public java.lang.String getState() {
      return state;
    }

    @Override
    public void setState(java.lang.String state) {
      this.state = state;
      state__is_set = true;
    }

    protected void setState(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, state__typeInfo)) {
        setState(__typeMapper.readString(__in, state__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, action__typeInfo, action, action__is_set);
       __typeMapper.writeObject(__out, screenInputs__typeInfo, screenInputs, screenInputs__is_set);
       __typeMapper.writeString(__out, state__typeInfo, state, state__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAction(__in, __typeMapper);
        setScreenInputs(__in, __typeMapper);
        setState(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[NavigateFlowInterviewRequest ");
      sb.append(" action='").append(com.sforce.ws.util.Verbose.toString(action)).append("'\n");
      sb.append(" screenInputs='").append(com.sforce.ws.util.Verbose.toString(screenInputs)).append("'\n");
      sb.append(" state='").append(com.sforce.ws.util.Verbose.toString(state)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
