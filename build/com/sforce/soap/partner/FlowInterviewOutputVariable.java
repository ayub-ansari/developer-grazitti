package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class FlowInterviewOutputVariable implements com.sforce.ws.bind.XMLizable , IFlowInterviewOutputVariable{

    /**
     * Constructor
     */
    public FlowInterviewOutputVariable() {}

    /**
     * element : dataType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo dataType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","dataType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean dataType__is_set = false;

    private java.lang.String dataType;

    @Override
    public java.lang.String getDataType() {
      return dataType;
    }

    @Override
    public void setDataType(java.lang.String dataType) {
      this.dataType = dataType;
      dataType__is_set = true;
    }

    protected void setDataType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, dataType__typeInfo)) {
        setDataType(__typeMapper.readString(__in, dataType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : description of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo description__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","description","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean description__is_set = false;

    private java.lang.String description;

    @Override
    public java.lang.String getDescription() {
      return description;
    }

    @Override
    public void setDescription(java.lang.String description) {
      this.description = description;
      description__is_set = true;
    }

    protected void setDescription(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, description__typeInfo)) {
        setDescription(__typeMapper.readString(__in, description__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : isCollection of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo isCollection__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","isCollection","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean isCollection__is_set = false;

    private boolean isCollection;

    @Override
    public boolean getIsCollection() {
      return isCollection;
    }

    @Override
    public boolean isIsCollection() {
      return isCollection;
    }

    @Override
    public void setIsCollection(boolean isCollection) {
      this.isCollection = isCollection;
      isCollection__is_set = true;
    }

    protected void setIsCollection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, isCollection__typeInfo)) {
        setIsCollection(__typeMapper.readBoolean(__in, isCollection__typeInfo, boolean.class));
      }
    }

    /**
     * element : name of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo name__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","name","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean name__is_set = false;

    private java.lang.String name;

    @Override
    public java.lang.String getName() {
      return name;
    }

    @Override
    public void setName(java.lang.String name) {
      this.name = name;
      name__is_set = true;
    }

    protected void setName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, name__typeInfo)) {
        setName(__typeMapper.readString(__in, name__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : objectType of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo objectType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","objectType","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean objectType__is_set = false;

    private java.lang.String objectType;

    @Override
    public java.lang.String getObjectType() {
      return objectType;
    }

    @Override
    public void setObjectType(java.lang.String objectType) {
      this.objectType = objectType;
      objectType__is_set = true;
    }

    protected void setObjectType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, objectType__typeInfo)) {
        setObjectType(__typeMapper.readString(__in, objectType__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : flowName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo flowName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","flowName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean flowName__is_set = false;

    private java.lang.String flowName;

    @Override
    public java.lang.String getFlowName() {
      return flowName;
    }

    @Override
    public void setFlowName(java.lang.String flowName) {
      this.flowName = flowName;
      flowName__is_set = true;
    }

    protected void setFlowName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, flowName__typeInfo)) {
        setFlowName(__typeMapper.readString(__in, flowName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : value of type {http://www.w3.org/2001/XMLSchema}anyType
     * java type: java.lang.Object[]
     */
    private static final com.sforce.ws.bind.TypeInfo value__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","value","http://www.w3.org/2001/XMLSchema","anyType",1,-1,true);

    private boolean value__is_set = false;

    private java.lang.Object[] value = new java.lang.Object[0];

    @Override
    public java.lang.Object[] getValue() {
      return value;
    }

    @Override
    public void setValue(java.lang.Object[] value) {
      this.value = castArray(java.lang.Object.class, value);
      value__is_set = true;
    }

    protected void setValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, value__typeInfo)) {
        setValue((java.lang.Object[])__typeMapper.readObject(__in, value__typeInfo, java.lang.Object[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, dataType__typeInfo, dataType, dataType__is_set);
       __typeMapper.writeString(__out, description__typeInfo, description, description__is_set);
       __typeMapper.writeBoolean(__out, isCollection__typeInfo, isCollection, isCollection__is_set);
       __typeMapper.writeString(__out, name__typeInfo, name, name__is_set);
       __typeMapper.writeString(__out, objectType__typeInfo, objectType, objectType__is_set);
       __typeMapper.writeString(__out, flowName__typeInfo, flowName, flowName__is_set);
       __typeMapper.writeObject(__out, value__typeInfo, value, value__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setDataType(__in, __typeMapper);
        setDescription(__in, __typeMapper);
        setIsCollection(__in, __typeMapper);
        setName(__in, __typeMapper);
        setObjectType(__in, __typeMapper);
        setFlowName(__in, __typeMapper);
        setValue(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[FlowInterviewOutputVariable ");
      sb.append(" dataType='").append(com.sforce.ws.util.Verbose.toString(dataType)).append("'\n");
      sb.append(" description='").append(com.sforce.ws.util.Verbose.toString(description)).append("'\n");
      sb.append(" isCollection='").append(com.sforce.ws.util.Verbose.toString(isCollection)).append("'\n");
      sb.append(" name='").append(com.sforce.ws.util.Verbose.toString(name)).append("'\n");
      sb.append(" objectType='").append(com.sforce.ws.util.Verbose.toString(objectType)).append("'\n");
      sb.append(" flowName='").append(com.sforce.ws.util.Verbose.toString(flowName)).append("'\n");
      sb.append(" value='").append(com.sforce.ws.util.Verbose.toString(value)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
