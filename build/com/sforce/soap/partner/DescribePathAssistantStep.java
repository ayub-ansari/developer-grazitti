package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribePathAssistantStep implements com.sforce.ws.bind.XMLizable , IDescribePathAssistantStep{

    /**
     * Constructor
     */
    public DescribePathAssistantStep() {}

    /**
     * element : closed of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo closed__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","closed","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean closed__is_set = false;

    private boolean closed;

    @Override
    public boolean getClosed() {
      return closed;
    }

    @Override
    public boolean isClosed() {
      return closed;
    }

    @Override
    public void setClosed(boolean closed) {
      this.closed = closed;
      closed__is_set = true;
    }

    protected void setClosed(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, closed__typeInfo)) {
        setClosed(__typeMapper.readBoolean(__in, closed__typeInfo, boolean.class));
      }
    }

    /**
     * element : converted of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo converted__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","converted","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean converted__is_set = false;

    private boolean converted;

    @Override
    public boolean getConverted() {
      return converted;
    }

    @Override
    public boolean isConverted() {
      return converted;
    }

    @Override
    public void setConverted(boolean converted) {
      this.converted = converted;
      converted__is_set = true;
    }

    protected void setConverted(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, converted__typeInfo)) {
        setConverted(__typeMapper.readBoolean(__in, converted__typeInfo, boolean.class));
      }
    }

    /**
     * element : fields of type {urn:partner.soap.sforce.com}DescribePathAssistantField
     * java type: com.sforce.soap.partner.DescribePathAssistantField[]
     */
    private static final com.sforce.ws.bind.TypeInfo fields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","fields","urn:partner.soap.sforce.com","DescribePathAssistantField",0,-1,true);

    private boolean fields__is_set = false;

    private com.sforce.soap.partner.DescribePathAssistantField[] fields = new com.sforce.soap.partner.DescribePathAssistantField[0];

    @Override
    public com.sforce.soap.partner.DescribePathAssistantField[] getFields() {
      return fields;
    }

    @Override
    public void setFields(com.sforce.soap.partner.IDescribePathAssistantField[] fields) {
      this.fields = castArray(com.sforce.soap.partner.DescribePathAssistantField.class, fields);
      fields__is_set = true;
    }

    protected void setFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, fields__typeInfo)) {
        setFields((com.sforce.soap.partner.DescribePathAssistantField[])__typeMapper.readObject(__in, fields__typeInfo, com.sforce.soap.partner.DescribePathAssistantField[].class));
      }
    }

    /**
     * element : info of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo info__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","info","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean info__is_set = false;

    private java.lang.String info;

    @Override
    public java.lang.String getInfo() {
      return info;
    }

    @Override
    public void setInfo(java.lang.String info) {
      this.info = info;
      info__is_set = true;
    }

    protected void setInfo(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, info__typeInfo)) {
        setInfo(__typeMapper.readString(__in, info__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : layoutSection of type {urn:partner.soap.sforce.com}DescribeLayoutSection
     * java type: com.sforce.soap.partner.DescribeLayoutSection
     */
    private static final com.sforce.ws.bind.TypeInfo layoutSection__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","layoutSection","urn:partner.soap.sforce.com","DescribeLayoutSection",1,1,true);

    private boolean layoutSection__is_set = false;

    private com.sforce.soap.partner.DescribeLayoutSection layoutSection;

    @Override
    public com.sforce.soap.partner.DescribeLayoutSection getLayoutSection() {
      return layoutSection;
    }

    @Override
    public void setLayoutSection(com.sforce.soap.partner.IDescribeLayoutSection layoutSection) {
      this.layoutSection = (com.sforce.soap.partner.DescribeLayoutSection)layoutSection;
      layoutSection__is_set = true;
    }

    protected void setLayoutSection(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, layoutSection__typeInfo)) {
        setLayoutSection((com.sforce.soap.partner.DescribeLayoutSection)__typeMapper.readObject(__in, layoutSection__typeInfo, com.sforce.soap.partner.DescribeLayoutSection.class));
      }
    }

    /**
     * element : picklistLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo picklistLabel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","picklistLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean picklistLabel__is_set = false;

    private java.lang.String picklistLabel;

    @Override
    public java.lang.String getPicklistLabel() {
      return picklistLabel;
    }

    @Override
    public void setPicklistLabel(java.lang.String picklistLabel) {
      this.picklistLabel = picklistLabel;
      picklistLabel__is_set = true;
    }

    protected void setPicklistLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, picklistLabel__typeInfo)) {
        setPicklistLabel(__typeMapper.readString(__in, picklistLabel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : picklistValue of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo picklistValue__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","picklistValue","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean picklistValue__is_set = false;

    private java.lang.String picklistValue;

    @Override
    public java.lang.String getPicklistValue() {
      return picklistValue;
    }

    @Override
    public void setPicklistValue(java.lang.String picklistValue) {
      this.picklistValue = picklistValue;
      picklistValue__is_set = true;
    }

    protected void setPicklistValue(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, picklistValue__typeInfo)) {
        setPicklistValue(__typeMapper.readString(__in, picklistValue__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : won of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo won__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","won","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean won__is_set = false;

    private boolean won;

    @Override
    public boolean getWon() {
      return won;
    }

    @Override
    public boolean isWon() {
      return won;
    }

    @Override
    public void setWon(boolean won) {
      this.won = won;
      won__is_set = true;
    }

    protected void setWon(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, won__typeInfo)) {
        setWon(__typeMapper.readBoolean(__in, won__typeInfo, boolean.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, closed__typeInfo, closed, closed__is_set);
       __typeMapper.writeBoolean(__out, converted__typeInfo, converted, converted__is_set);
       __typeMapper.writeObject(__out, fields__typeInfo, fields, fields__is_set);
       __typeMapper.writeString(__out, info__typeInfo, info, info__is_set);
       __typeMapper.writeObject(__out, layoutSection__typeInfo, layoutSection, layoutSection__is_set);
       __typeMapper.writeString(__out, picklistLabel__typeInfo, picklistLabel, picklistLabel__is_set);
       __typeMapper.writeString(__out, picklistValue__typeInfo, picklistValue, picklistValue__is_set);
       __typeMapper.writeBoolean(__out, won__typeInfo, won, won__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setClosed(__in, __typeMapper);
        setConverted(__in, __typeMapper);
        setFields(__in, __typeMapper);
        setInfo(__in, __typeMapper);
        setLayoutSection(__in, __typeMapper);
        setPicklistLabel(__in, __typeMapper);
        setPicklistValue(__in, __typeMapper);
        setWon(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribePathAssistantStep ");
      sb.append(" closed='").append(com.sforce.ws.util.Verbose.toString(closed)).append("'\n");
      sb.append(" converted='").append(com.sforce.ws.util.Verbose.toString(converted)).append("'\n");
      sb.append(" fields='").append(com.sforce.ws.util.Verbose.toString(fields)).append("'\n");
      sb.append(" info='").append(com.sforce.ws.util.Verbose.toString(info)).append("'\n");
      sb.append(" layoutSection='").append(com.sforce.ws.util.Verbose.toString(layoutSection)).append("'\n");
      sb.append(" picklistLabel='").append(com.sforce.ws.util.Verbose.toString(picklistLabel)).append("'\n");
      sb.append(" picklistValue='").append(com.sforce.ws.util.Verbose.toString(picklistValue)).append("'\n");
      sb.append(" won='").append(com.sforce.ws.util.Verbose.toString(won)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
