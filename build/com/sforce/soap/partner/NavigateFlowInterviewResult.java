package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class NavigateFlowInterviewResult implements com.sforce.ws.bind.XMLizable , INavigateFlowInterviewResult{

    /**
     * Constructor
     */
    public NavigateFlowInterviewResult() {}

    /**
     * element : availableActions of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo availableActions__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","availableActions","http://www.w3.org/2001/XMLSchema","string",1,-1,true);

    private boolean availableActions__is_set = false;

    private java.lang.String[] availableActions = new java.lang.String[0];

    @Override
    public java.lang.String[] getAvailableActions() {
      return availableActions;
    }

    @Override
    public void setAvailableActions(java.lang.String[] availableActions) {
      this.availableActions = castArray(java.lang.String.class, availableActions);
      availableActions__is_set = true;
    }

    protected void setAvailableActions(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, availableActions__typeInfo)) {
        setAvailableActions((java.lang.String[])__typeMapper.readObject(__in, availableActions__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : errorMessages of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String[]
     */
    private static final com.sforce.ws.bind.TypeInfo errorMessages__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","errorMessages","http://www.w3.org/2001/XMLSchema","string",1,-1,true);

    private boolean errorMessages__is_set = false;

    private java.lang.String[] errorMessages = new java.lang.String[0];

    @Override
    public java.lang.String[] getErrorMessages() {
      return errorMessages;
    }

    @Override
    public void setErrorMessages(java.lang.String[] errorMessages) {
      this.errorMessages = castArray(java.lang.String.class, errorMessages);
      errorMessages__is_set = true;
    }

    protected void setErrorMessages(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, errorMessages__typeInfo)) {
        setErrorMessages((java.lang.String[])__typeMapper.readObject(__in, errorMessages__typeInfo, java.lang.String[].class));
      }
    }

    /**
     * element : flowLabel of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo flowLabel__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","flowLabel","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean flowLabel__is_set = false;

    private java.lang.String flowLabel;

    @Override
    public java.lang.String getFlowLabel() {
      return flowLabel;
    }

    @Override
    public void setFlowLabel(java.lang.String flowLabel) {
      this.flowLabel = flowLabel;
      flowLabel__is_set = true;
    }

    protected void setFlowLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, flowLabel__typeInfo)) {
        setFlowLabel(__typeMapper.readString(__in, flowLabel__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : guid of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo guid__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","guid","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean guid__is_set = false;

    private java.lang.String guid;

    @Override
    public java.lang.String getGuid() {
      return guid;
    }

    @Override
    public void setGuid(java.lang.String guid) {
      this.guid = guid;
      guid__is_set = true;
    }

    protected void setGuid(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, guid__typeInfo)) {
        setGuid(__typeMapper.readString(__in, guid__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : helpText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo helpText__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","helpText","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean helpText__is_set = false;

    private java.lang.String helpText;

    @Override
    public java.lang.String getHelpText() {
      return helpText;
    }

    @Override
    public void setHelpText(java.lang.String helpText) {
      this.helpText = helpText;
      helpText__is_set = true;
    }

    protected void setHelpText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, helpText__typeInfo)) {
        setHelpText(__typeMapper.readString(__in, helpText__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : interviewStatus of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo interviewStatus__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","interviewStatus","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean interviewStatus__is_set = false;

    private java.lang.String interviewStatus;

    @Override
    public java.lang.String getInterviewStatus() {
      return interviewStatus;
    }

    @Override
    public void setInterviewStatus(java.lang.String interviewStatus) {
      this.interviewStatus = interviewStatus;
      interviewStatus__is_set = true;
    }

    protected void setInterviewStatus(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, interviewStatus__typeInfo)) {
        setInterviewStatus(__typeMapper.readString(__in, interviewStatus__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : outputVariables of type {urn:partner.soap.sforce.com}FlowInterviewOutputVariable
     * java type: com.sforce.soap.partner.FlowInterviewOutputVariable[]
     */
    private static final com.sforce.ws.bind.TypeInfo outputVariables__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","outputVariables","urn:partner.soap.sforce.com","FlowInterviewOutputVariable",0,-1,true);

    private boolean outputVariables__is_set = false;

    private com.sforce.soap.partner.FlowInterviewOutputVariable[] outputVariables = new com.sforce.soap.partner.FlowInterviewOutputVariable[0];

    @Override
    public com.sforce.soap.partner.FlowInterviewOutputVariable[] getOutputVariables() {
      return outputVariables;
    }

    @Override
    public void setOutputVariables(com.sforce.soap.partner.IFlowInterviewOutputVariable[] outputVariables) {
      this.outputVariables = castArray(com.sforce.soap.partner.FlowInterviewOutputVariable.class, outputVariables);
      outputVariables__is_set = true;
    }

    protected void setOutputVariables(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, outputVariables__typeInfo)) {
        setOutputVariables((com.sforce.soap.partner.FlowInterviewOutputVariable[])__typeMapper.readObject(__in, outputVariables__typeInfo, com.sforce.soap.partner.FlowInterviewOutputVariable[].class));
      }
    }

    /**
     * element : pausedText of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pausedText__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","pausedText","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean pausedText__is_set = false;

    private java.lang.String pausedText;

    @Override
    public java.lang.String getPausedText() {
      return pausedText;
    }

    @Override
    public void setPausedText(java.lang.String pausedText) {
      this.pausedText = pausedText;
      pausedText__is_set = true;
    }

    protected void setPausedText(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, pausedText__typeInfo)) {
        setPausedText(__typeMapper.readString(__in, pausedText__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : screenFields of type {urn:partner.soap.sforce.com}FlowInterviewScreenField
     * java type: com.sforce.soap.partner.FlowInterviewScreenField[]
     */
    private static final com.sforce.ws.bind.TypeInfo screenFields__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","screenFields","urn:partner.soap.sforce.com","FlowInterviewScreenField",0,-1,true);

    private boolean screenFields__is_set = false;

    private com.sforce.soap.partner.FlowInterviewScreenField[] screenFields = new com.sforce.soap.partner.FlowInterviewScreenField[0];

    @Override
    public com.sforce.soap.partner.FlowInterviewScreenField[] getScreenFields() {
      return screenFields;
    }

    @Override
    public void setScreenFields(com.sforce.soap.partner.IFlowInterviewScreenField[] screenFields) {
      this.screenFields = castArray(com.sforce.soap.partner.FlowInterviewScreenField.class, screenFields);
      screenFields__is_set = true;
    }

    protected void setScreenFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, screenFields__typeInfo)) {
        setScreenFields((com.sforce.soap.partner.FlowInterviewScreenField[])__typeMapper.readObject(__in, screenFields__typeInfo, com.sforce.soap.partner.FlowInterviewScreenField[].class));
      }
    }

    /**
     * element : screenName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo screenName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","screenName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean screenName__is_set = false;

    private java.lang.String screenName;

    @Override
    public java.lang.String getScreenName() {
      return screenName;
    }

    @Override
    public void setScreenName(java.lang.String screenName) {
      this.screenName = screenName;
      screenName__is_set = true;
    }

    protected void setScreenName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, screenName__typeInfo)) {
        setScreenName(__typeMapper.readString(__in, screenName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : state of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo state__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","state","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean state__is_set = false;

    private java.lang.String state;

    @Override
    public java.lang.String getState() {
      return state;
    }

    @Override
    public void setState(java.lang.String state) {
      this.state = state;
      state__is_set = true;
    }

    protected void setState(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, state__typeInfo)) {
        setState(__typeMapper.readString(__in, state__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeObject(__out, availableActions__typeInfo, availableActions, availableActions__is_set);
       __typeMapper.writeObject(__out, errorMessages__typeInfo, errorMessages, errorMessages__is_set);
       __typeMapper.writeString(__out, flowLabel__typeInfo, flowLabel, flowLabel__is_set);
       __typeMapper.writeString(__out, guid__typeInfo, guid, guid__is_set);
       __typeMapper.writeString(__out, helpText__typeInfo, helpText, helpText__is_set);
       __typeMapper.writeString(__out, interviewStatus__typeInfo, interviewStatus, interviewStatus__is_set);
       __typeMapper.writeObject(__out, outputVariables__typeInfo, outputVariables, outputVariables__is_set);
       __typeMapper.writeString(__out, pausedText__typeInfo, pausedText, pausedText__is_set);
       __typeMapper.writeObject(__out, screenFields__typeInfo, screenFields, screenFields__is_set);
       __typeMapper.writeString(__out, screenName__typeInfo, screenName, screenName__is_set);
       __typeMapper.writeString(__out, state__typeInfo, state, state__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setAvailableActions(__in, __typeMapper);
        setErrorMessages(__in, __typeMapper);
        setFlowLabel(__in, __typeMapper);
        setGuid(__in, __typeMapper);
        setHelpText(__in, __typeMapper);
        setInterviewStatus(__in, __typeMapper);
        setOutputVariables(__in, __typeMapper);
        setPausedText(__in, __typeMapper);
        setScreenFields(__in, __typeMapper);
        setScreenName(__in, __typeMapper);
        setState(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[NavigateFlowInterviewResult ");
      sb.append(" availableActions='").append(com.sforce.ws.util.Verbose.toString(availableActions)).append("'\n");
      sb.append(" errorMessages='").append(com.sforce.ws.util.Verbose.toString(errorMessages)).append("'\n");
      sb.append(" flowLabel='").append(com.sforce.ws.util.Verbose.toString(flowLabel)).append("'\n");
      sb.append(" guid='").append(com.sforce.ws.util.Verbose.toString(guid)).append("'\n");
      sb.append(" helpText='").append(com.sforce.ws.util.Verbose.toString(helpText)).append("'\n");
      sb.append(" interviewStatus='").append(com.sforce.ws.util.Verbose.toString(interviewStatus)).append("'\n");
      sb.append(" outputVariables='").append(com.sforce.ws.util.Verbose.toString(outputVariables)).append("'\n");
      sb.append(" pausedText='").append(com.sforce.ws.util.Verbose.toString(pausedText)).append("'\n");
      sb.append(" screenFields='").append(com.sforce.ws.util.Verbose.toString(screenFields)).append("'\n");
      sb.append(" screenName='").append(com.sforce.ws.util.Verbose.toString(screenName)).append("'\n");
      sb.append(" state='").append(com.sforce.ws.util.Verbose.toString(state)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
