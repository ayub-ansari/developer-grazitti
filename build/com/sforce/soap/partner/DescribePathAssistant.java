package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class DescribePathAssistant implements com.sforce.ws.bind.XMLizable , IDescribePathAssistant{

    /**
     * Constructor
     */
    public DescribePathAssistant() {}

    /**
     * element : active of type {http://www.w3.org/2001/XMLSchema}boolean
     * java type: boolean
     */
    private static final com.sforce.ws.bind.TypeInfo active__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","active","http://www.w3.org/2001/XMLSchema","boolean",1,1,true);

    private boolean active__is_set = false;

    private boolean active;

    @Override
    public boolean getActive() {
      return active;
    }

    @Override
    public boolean isActive() {
      return active;
    }

    @Override
    public void setActive(boolean active) {
      this.active = active;
      active__is_set = true;
    }

    protected void setActive(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, active__typeInfo)) {
        setActive(__typeMapper.readBoolean(__in, active__typeInfo, boolean.class));
      }
    }

    /**
     * element : apiName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo apiName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","apiName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean apiName__is_set = false;

    private java.lang.String apiName;

    @Override
    public java.lang.String getApiName() {
      return apiName;
    }

    @Override
    public void setApiName(java.lang.String apiName) {
      this.apiName = apiName;
      apiName__is_set = true;
    }

    protected void setApiName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, apiName__typeInfo)) {
        setApiName(__typeMapper.readString(__in, apiName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : label of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo label__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","label","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean label__is_set = false;

    private java.lang.String label;

    @Override
    public java.lang.String getLabel() {
      return label;
    }

    @Override
    public void setLabel(java.lang.String label) {
      this.label = label;
      label__is_set = true;
    }

    protected void setLabel(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, label__typeInfo)) {
        setLabel(__typeMapper.readString(__in, label__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : pathPicklistField of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo pathPicklistField__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","pathPicklistField","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean pathPicklistField__is_set = false;

    private java.lang.String pathPicklistField;

    @Override
    public java.lang.String getPathPicklistField() {
      return pathPicklistField;
    }

    @Override
    public void setPathPicklistField(java.lang.String pathPicklistField) {
      this.pathPicklistField = pathPicklistField;
      pathPicklistField__is_set = true;
    }

    protected void setPathPicklistField(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, pathPicklistField__typeInfo)) {
        setPathPicklistField(__typeMapper.readString(__in, pathPicklistField__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : picklistsForRecordType of type {urn:partner.soap.sforce.com}PicklistForRecordType
     * java type: com.sforce.soap.partner.PicklistForRecordType[]
     */
    private static final com.sforce.ws.bind.TypeInfo picklistsForRecordType__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","picklistsForRecordType","urn:partner.soap.sforce.com","PicklistForRecordType",0,-1,true);

    private boolean picklistsForRecordType__is_set = false;

    private com.sforce.soap.partner.PicklistForRecordType[] picklistsForRecordType = new com.sforce.soap.partner.PicklistForRecordType[0];

    @Override
    public com.sforce.soap.partner.PicklistForRecordType[] getPicklistsForRecordType() {
      return picklistsForRecordType;
    }

    @Override
    public void setPicklistsForRecordType(com.sforce.soap.partner.IPicklistForRecordType[] picklistsForRecordType) {
      this.picklistsForRecordType = castArray(com.sforce.soap.partner.PicklistForRecordType.class, picklistsForRecordType);
      picklistsForRecordType__is_set = true;
    }

    protected void setPicklistsForRecordType(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, picklistsForRecordType__typeInfo)) {
        setPicklistsForRecordType((com.sforce.soap.partner.PicklistForRecordType[])__typeMapper.readObject(__in, picklistsForRecordType__typeInfo, com.sforce.soap.partner.PicklistForRecordType[].class));
      }
    }

    /**
     * element : recordTypeId of type {urn:partner.soap.sforce.com}ID
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo recordTypeId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","recordTypeId","urn:partner.soap.sforce.com","ID",1,1,true);

    private boolean recordTypeId__is_set = false;

    private java.lang.String recordTypeId;

    @Override
    public java.lang.String getRecordTypeId() {
      return recordTypeId;
    }

    @Override
    public void setRecordTypeId(java.lang.String recordTypeId) {
      this.recordTypeId = recordTypeId;
      recordTypeId__is_set = true;
    }

    protected void setRecordTypeId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, recordTypeId__typeInfo)) {
        setRecordTypeId(__typeMapper.readString(__in, recordTypeId__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : steps of type {urn:partner.soap.sforce.com}DescribePathAssistantStep
     * java type: com.sforce.soap.partner.DescribePathAssistantStep[]
     */
    private static final com.sforce.ws.bind.TypeInfo steps__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","steps","urn:partner.soap.sforce.com","DescribePathAssistantStep",0,-1,true);

    private boolean steps__is_set = false;

    private com.sforce.soap.partner.DescribePathAssistantStep[] steps = new com.sforce.soap.partner.DescribePathAssistantStep[0];

    @Override
    public com.sforce.soap.partner.DescribePathAssistantStep[] getSteps() {
      return steps;
    }

    @Override
    public void setSteps(com.sforce.soap.partner.IDescribePathAssistantStep[] steps) {
      this.steps = castArray(com.sforce.soap.partner.DescribePathAssistantStep.class, steps);
      steps__is_set = true;
    }

    protected void setSteps(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, steps__typeInfo)) {
        setSteps((com.sforce.soap.partner.DescribePathAssistantStep[])__typeMapper.readObject(__in, steps__typeInfo, com.sforce.soap.partner.DescribePathAssistantStep[].class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeBoolean(__out, active__typeInfo, active, active__is_set);
       __typeMapper.writeString(__out, apiName__typeInfo, apiName, apiName__is_set);
       __typeMapper.writeString(__out, label__typeInfo, label, label__is_set);
       __typeMapper.writeString(__out, pathPicklistField__typeInfo, pathPicklistField, pathPicklistField__is_set);
       __typeMapper.writeObject(__out, picklistsForRecordType__typeInfo, picklistsForRecordType, picklistsForRecordType__is_set);
       __typeMapper.writeString(__out, recordTypeId__typeInfo, recordTypeId, recordTypeId__is_set);
       __typeMapper.writeObject(__out, steps__typeInfo, steps, steps__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setActive(__in, __typeMapper);
        setApiName(__in, __typeMapper);
        setLabel(__in, __typeMapper);
        setPathPicklistField(__in, __typeMapper);
        setPicklistsForRecordType(__in, __typeMapper);
        setRecordTypeId(__in, __typeMapper);
        setSteps(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[DescribePathAssistant ");
      sb.append(" active='").append(com.sforce.ws.util.Verbose.toString(active)).append("'\n");
      sb.append(" apiName='").append(com.sforce.ws.util.Verbose.toString(apiName)).append("'\n");
      sb.append(" label='").append(com.sforce.ws.util.Verbose.toString(label)).append("'\n");
      sb.append(" pathPicklistField='").append(com.sforce.ws.util.Verbose.toString(pathPicklistField)).append("'\n");
      sb.append(" picklistsForRecordType='").append(com.sforce.ws.util.Verbose.toString(picklistsForRecordType)).append("'\n");
      sb.append(" recordTypeId='").append(com.sforce.ws.util.Verbose.toString(recordTypeId)).append("'\n");
      sb.append(" steps='").append(com.sforce.ws.util.Verbose.toString(steps)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
