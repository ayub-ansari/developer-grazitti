package com.sforce.soap.partner;

/**
 * Generated by ComplexTypeCodeGenerator.java. Please do not edit.
 */
public class StartFlowInterviewRequest implements com.sforce.ws.bind.XMLizable , IStartFlowInterviewRequest{

    /**
     * Constructor
     */
    public StartFlowInterviewRequest() {}

    /**
     * element : flowName of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo flowName__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","flowName","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean flowName__is_set = false;

    private java.lang.String flowName;

    @Override
    public java.lang.String getFlowName() {
      return flowName;
    }

    @Override
    public void setFlowName(java.lang.String flowName) {
      this.flowName = flowName;
      flowName__is_set = true;
    }

    protected void setFlowName(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, flowName__typeInfo)) {
        setFlowName(__typeMapper.readString(__in, flowName__typeInfo, java.lang.String.class));
      }
    }

    /**
     * element : inputs of type {urn:partner.soap.sforce.com}NameObjectValuePair
     * java type: com.sforce.soap.partner.NameObjectValuePair[]
     */
    private static final com.sforce.ws.bind.TypeInfo inputs__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","inputs","urn:partner.soap.sforce.com","NameObjectValuePair",0,-1,true);

    private boolean inputs__is_set = false;

    private com.sforce.soap.partner.NameObjectValuePair[] inputs = new com.sforce.soap.partner.NameObjectValuePair[0];

    @Override
    public com.sforce.soap.partner.NameObjectValuePair[] getInputs() {
      return inputs;
    }

    @Override
    public void setInputs(com.sforce.soap.partner.INameObjectValuePair[] inputs) {
      this.inputs = castArray(com.sforce.soap.partner.NameObjectValuePair.class, inputs);
      inputs__is_set = true;
    }

    protected void setInputs(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.isElement(__in, inputs__typeInfo)) {
        setInputs((com.sforce.soap.partner.NameObjectValuePair[])__typeMapper.readObject(__in, inputs__typeInfo, com.sforce.soap.partner.NameObjectValuePair[].class));
      }
    }

    /**
     * element : versionId of type {http://www.w3.org/2001/XMLSchema}string
     * java type: java.lang.String
     */
    private static final com.sforce.ws.bind.TypeInfo versionId__typeInfo =
      new com.sforce.ws.bind.TypeInfo("urn:partner.soap.sforce.com","versionId","http://www.w3.org/2001/XMLSchema","string",1,1,true);

    private boolean versionId__is_set = false;

    private java.lang.String versionId;

    @Override
    public java.lang.String getVersionId() {
      return versionId;
    }

    @Override
    public void setVersionId(java.lang.String versionId) {
      this.versionId = versionId;
      versionId__is_set = true;
    }

    protected void setVersionId(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __in.peekTag();
      if (__typeMapper.verifyElement(__in, versionId__typeInfo)) {
        setVersionId(__typeMapper.readString(__in, versionId__typeInfo, java.lang.String.class));
      }
    }

    /**
     */
    @Override
    public void write(javax.xml.namespace.QName __element,
        com.sforce.ws.parser.XmlOutputStream __out, com.sforce.ws.bind.TypeMapper __typeMapper)
        throws java.io.IOException {
      __out.writeStartTag(__element.getNamespaceURI(), __element.getLocalPart());
      writeFields(__out, __typeMapper);
      __out.writeEndTag(__element.getNamespaceURI(), __element.getLocalPart());
    }

    protected void writeFields(com.sforce.ws.parser.XmlOutputStream __out,
         com.sforce.ws.bind.TypeMapper __typeMapper)
         throws java.io.IOException {
       __typeMapper.writeString(__out, flowName__typeInfo, flowName, flowName__is_set);
       __typeMapper.writeObject(__out, inputs__typeInfo, inputs, inputs__is_set);
       __typeMapper.writeString(__out, versionId__typeInfo, versionId, versionId__is_set);
    }

    @Override
    public void load(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
      __typeMapper.consumeStartTag(__in);
      loadFields(__in, __typeMapper);
      __typeMapper.consumeEndTag(__in);
    }

    protected void loadFields(com.sforce.ws.parser.XmlInputStream __in,
        com.sforce.ws.bind.TypeMapper __typeMapper) throws java.io.IOException, com.sforce.ws.ConnectionException {
        setFlowName(__in, __typeMapper);
        setInputs(__in, __typeMapper);
        setVersionId(__in, __typeMapper);
    }

    @Override
    public String toString() {
      java.lang.StringBuilder sb = new java.lang.StringBuilder();
      sb.append("[StartFlowInterviewRequest ");
      sb.append(" flowName='").append(com.sforce.ws.util.Verbose.toString(flowName)).append("'\n");
      sb.append(" inputs='").append(com.sforce.ws.util.Verbose.toString(inputs)).append("'\n");
      sb.append(" versionId='").append(com.sforce.ws.util.Verbose.toString(versionId)).append("'\n");
      sb.append("]\n");
      return sb.toString();
    }

    @SuppressWarnings("unchecked")
    private <T,U> T[] castArray(Class<T> clazz, U[] array) {
        if (array == null) {
            return null;
        }
        T[] retVal = (T[]) java.lang.reflect.Array.newInstance(clazz, array.length);
        for (int i=0; i < array.length; i++) {
            retVal[i] = (T)array[i];
        }

        return retVal;
	}
}
