<apex:page controller="GoogleChartsController" sidebar="false"> 
    <!-- Google API inclusion -->
    <apex:includescript id="a" value="https://www.google.com/jsapi">
     
    <apex:sectionheader title="Google Charts + Javascript Remoting" subtitle="Demoing - Opportunities by Exepected Revenue">
 
    <!-- Google Charts will be drawn in this DIV -->
    <div id="chartBlock">
     
    <script type="text/javascript">
        // Load the Visualization API and the piechart package.
        google.load('visualization', '1.0', {'packages':['corechart']});
       
        // Set a callback to run when the Google Visualization API is loaded.
        google.setOnLoadCallback(initCharts);
   
        function initCharts() {         
          // Following the usual Remoting syntax
          // [<namespace>.]<controller>.<method>([params...,] <callbackFunction>(result, event) {...}
          // controller : GoogleChartsController
          // method : loadOpps
          GoogleChartsController.loadOpps( 
                 function(result, event){  
                     // load Column chart
                     var visualization = new google.visualization.ColumnChart(document.getElementById('chartBlock'));
                     // Prepare table model for chart with columns
                     var data = new google.visualization.DataTable();
                     data.addColumn('string', 'Opportunity');
                     data.addColumn('number', 'Expected Revenue');
                     data.addColumn('number', 'Amount');    
                     // add rows from the remoting results
                     for(var i =0; i<result.length;i++){
                        var r = result[i];
                        data.addRow([r.Name, r.ExpectedRevenue, r.Amount]); 
                      }
                    // all done, lets draw the chart with some options to make it look nice.
                    visualization.draw(data, {legend : {position: 'top', textStyle: {color: 'blue', fontSize: 10}}, width:window.innerWidth,vAxis:{textStyle:{fontSize: 10}},hAxis:{textStyle:{fontSize: 10},showTextEvery:1,slantedText:false}});
              }, {escape:true});
          } 
    </script>

 [/code]
 
<h3> Output - How the page with chart looks ? </h3>

Here is a screen shot of the page

<p> [img screenshotpage] </p>

<h2>References</h2>

<p>Here are few pointers for more background:</p>
<ul>
 <li>[url http://www.salesforce.com/us/developer/docs/pages/Content/pages_js_remoting.htm]Javascript Remoting[/url]</li>
 <li>[url http://code.google.com/apis/chart/]Google Charts API[/url]</li>
 <li>[url http://blogs.developerforce.com/tech-pubs/2011/09/introducing-visualforce-charting.html]Visualforce Charting API[/url]</li>
<li>[url http://blogs.developerforce.com/tech-pubs/2011/11/controller-for-visualforce-charting.html]From Salesforce Developer Blogs about Visualforce Charting[/url]</li>
</ul>
</div></apex:sectionheader></apex:includescript></apex:page>